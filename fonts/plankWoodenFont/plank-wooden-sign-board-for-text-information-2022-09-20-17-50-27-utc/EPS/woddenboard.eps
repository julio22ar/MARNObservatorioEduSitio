%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: (Adobe Illustrator Artwork)
%%Creator: (Adobe Illustrator\(R\) 26.4)
%%For: Yuge
%%CreationDate: 02/09/22
%%BoundingBox: 0 0 500 500
%%HiResBoundingBox: 0 0 500 500
%%CropBox: 0 0 500 500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 26.4.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 26.4.1 x111 R agm 5.769 ct 6.516%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.2-c000 79.1b65a79, 2022/06/13-17:46:14        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <xmp:CreatorTool>Adobe Illustrator 26.4 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2022-09-02T10:27:52+07:00</xmp:CreateDate>
         <xmp:MetadataDate>2022-09-02T10:27:52+07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2022-09-02T10:27:52+07:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYqo3l7bWcQluX9OMsF5GpFT06ZCeQRFlnCBkaCpHJHIiyRsHRhVWU1B&#xA;HsRkgQRYYkEbFdhQ7FXYqoT31jbuqXFxFC7glFkdVJA6kAkdMhLJGPMgMowlLkLUW1vR163sPjs6&#xA;n9RyB1GP+cGYwZP5pUW8y6GvW7T6Ax/UMidXj72Y0uTuUm83aAOlwW+Ub/xUZA63F3/eyGjydyi/&#xA;nXQ0FeUh/wBjT9ZGROvx+bIaHJ5IaT8xNASv95t4mMD/AInkT2jj7izHZ2TyQ7/mXowrwjZ/D4l6&#xA;/RyyB7Sj3Mh2bLvUG/M+0/Ysnb5F/wCEeRPaY/m/b+xmOzT/ADvx80PN+Zd2f7nTnBHXkjn/AJoy&#xA;B7Sl0DIdmjrJknlLzF+ndNkuHiMM9vM1vPHSg5KquKVJ/YdfpzP02fxI24OpweHKk6zIcd2KuxVS&#xA;upWhtZplXm0aM6p4lQTTIzNAllEWQHkjeZPODsWHqivb1yPwDDOdOoyd5+b0I0+LuHyWt5q1tVIu&#xA;3vIl7uk0hH3gimP5jJ3n5r+Xx9BH5KcHmrWIZS9rrcjq3WK6Z2Ap4FsI1OQcpFTpsZ5xCYx+evNN&#xA;KC9tKDbkxVv1KMsGuy97UdFi7iuTzrryHlPrMZ78EjgH/GrHH87l7/sC/ksf8371Y/mFrLbQFp/d&#xA;YlC/8EwGS/P5O/7EfkMfd9qnL5082ON3SBT05tGv/EUP68idblPVI0eIdEvm81+YCSW1ONW8Fmk/&#xA;UtMrOpyfzj820abH/N+x6J5H1O51PyxaXd03OdmmjZ6k1EU7xqanf7KDrm70szLGCebpNXARyEDk&#xA;nuZDjsSvfzCtre5eKLTridI2K+qCigkGlVHImma+faMQaAJdhDs+RFkgLI/zGt3NPqEqHwckfjxp&#xA;kP5SH81l/Jx/nLX/ADClUmmmFx+zxnFfp5IuP8pf0ftT/J39L7Ep8yedRqVgkCabcRyJKshrwZSA&#xA;rAiqk92HbKNTrBkjQB5t+m0Zxyskcko03zjrOmyVtbOZoz9uFw3A/RTb6MxsOpnjOzkZdNDIN3pP&#xA;l7zFbazaiQRtb3IH722kpyHuPFffN3p9THIO49zpdRpzjPeO9NsyHHdirzz82pWgm0Wdf91tPt41&#xA;9P8Ahmq7T/h+P6Hbdl/xfD9LFv0xZyfZWV+1EU/wOau3ZcJaOoIalbW6b5BgP+JY2vCoPqDcuK6V&#xA;PJ2+JRSn+yxWvNoXV+28WiBT2LvGuK/FsTeYT9jT7eIDpykr/wARAxXbvVAfMzdRaR/8jCf147o2&#xA;XU1pF53FzbxxqPiZUb/jY47rs0Lh3FRqkS+3BR+tsU15M5/KqQHTdWQyiZxqBYyAAAg20IB227Zu&#xA;ezvoPv8A1On7RHrHu/SWbZsHXuxV2KofUIDPYXMC1rLE6CmxqykbZDILiR5M4GpA+bxSLTLzlXlJ&#xA;Cv8AzEEn7hHT8c5mnpeJFrb6lEvwXCy/5Eq/8bLQ47osIK4SQN+80j1fF4XQV+glTiyvzQrX+lwv&#xA;wk0yVX/lorf8bHBsmj3ouHU4VAMOlXCntSHj+OFiR5og6hcOpEloYQR/uyVEP/CknG0Uh+cBNfTs&#xA;we5klDn9WBl81wIK/D9QA+8fwwr83on5Wsp8poAQSt1dA8egPrsf45vdB/dB0Wv/AL0/Bl2ZjhvC&#xA;VZ2I4Wt0AejCVh+vOVepVA04FSl6oHgyv+vCvyUn1SKM8Zb2e2J6evBQfeUA/HFFeSqsmpTJzs72&#xA;G5XxXjX8KjHdduoWeter8N3dS2/uYl4/8GtcCaHRH6eqRzx3MN7JLNGeSOJOhHstMnEkGwd2ExYo&#xA;jZ6V5d8zQamPq8pCXyCrIOjgd1/iM3el1QybH6nSanSnHuPpTzMxxGC/mo06WmnvDAsr+pIoYrzK&#xA;1UH4fnTNZ2nyi7PsznJ5+kHmCbcu0YPiwT8Bvmo3dvcVdNH1Bt5b1gfYs36yMaRxDuX/AKEUAtJd&#xA;S+5rT9dcNI40ILzS9OuKRTzXc/QQRfF18eg/HAk2VdtQ11wJBbQWkR6G4dmb/gV44bRQaGoaqTQT&#xA;2ZPgVmUf8EScbXhbnvLwx8b6wMkPeW3kLr86Di2NqAgjp/lm7J5NLGT+w8jgfiSPxwbJ9T0X8ql0&#xA;21g1LTbJKei8Vw8gYsrCZWVepbceia5uezpDhIdP2jE8QJZ5mxdc7FXYqsmlEUMkrdI1LH5AVwE0&#xA;EgWXjCTaswB9GL58zT8K5y+701BTmur1B+8ntoR7Fmb7jjaQAo1efq1xd17KPRiPz6YE8laJXthU&#xA;i3s0Pj8T/fVcKOa86naMvpqXuWHX00O/6hja8JUfT5mselr85Cq/hvivxcbec9dMh+hlH6hit+ax&#xA;4nXrp0IP+sp/hgT8XoP5TgjyvICOJF7cgr4fH0ze9n/3XxdJ2h/e/BmeZrgvFJLWNLmWAXN2DG7K&#xA;fhcL8Jp8JKUp4b5zE41Ih6aErAKy4iigVWe+nQn7Klqk/wCxpXIsgb6Lo4dTMfJJ+SnpHcRgbe/E&#xA;1x3Wwld1Dp4kLT20Mcw6zWkwjcH/AFQRX6cCQqWt8gBWDUmYf76ulDf8OoxtNeS+T05fiezRv+Lb&#xA;duv0AjAobgmS2mjngN1DLEweMjlUEGo61wxkQbCyjYovYvK+ujWtJW7MTRSqximRhT41ANV9iCDn&#xA;RabN4kLed1OHw50lf5kLcjy6ZrZ0W4imTgJAaNzPDjUA0PxdTtlOvjeO+4tuglWSvJ5E1x5naTiY&#xA;6eJFzEBT5CmaN3uyOtzeAVur5YV8BKHb7qfxxR8FOePTJmCvPdXjD/daE0/gfxxTuiYIbmCMixsY&#xA;rRf9+Smp+mlDhYmupUZJdSB+PV4kPhGiMPxVsFpodykpvCarrZr7qgH4pjaa8kQg8wIPUS8iuo+1&#xA;QlD/AMCI8O6KCy4mtZRS+tTDMesydCfHb+3ASkA9GWflQkUOtamkUnqRy20LKf8AUkkBB/4MZs+z&#xA;DvJ1vafKL07Nu6d2KuxVB61X9DX9Ov1eWlf9Q5Xl+g+5sxfWPe8LjkiABZLb5PHOp+4qP1ZzNPTW&#xA;jLeaRv7j6pH7qj1H3hcLE0iXsL+UfvL4rX9mNeI+8HGl4h3IVvLz9UuiG61MatU/7KuPCnjaaDzL&#xA;aqfTkivIunpOqoaexUIMd0bKEOo6TLL6V5afVbofsEcQfcEUwbMqKLFpbtvDI6L/AMVyGn6zgW1O&#xA;awYqeDvI1Ng8hA+/i2K29H/K2BIPK/pc+Uq3M5nUVojs3IKCftDiVNffN9oK8IOi19+Ky/M1wni/&#xA;mC/mTW9RjM7RKtzMFVIamgkYChJpnNZz+8l7y9JgHoj7glsMj8i1lbyT3Lf8fFx0H+fzypuPmufQ&#xA;3n/eateNIOpiU8Yx8h0/DDSOLuXpp2ixx8re0WXwNBv8uRAwLuoywW4+1p8Cjxb01/gcCVFvq3aK&#xA;FadOEtP1YslS0srvUb+HTdPi9W9uN14ylo40Bo0spHRF/HoMsxYjOVBry5RCNl7X5d0K20PSYdPg&#xA;Yvwq0szbNJI27uaeJ6DsNs6LDiGOIiHnM2U5JGRSL805CvlUqD9ueNT+LfwzF7RP7v4uV2aP3vwe&#xA;d2el6Z6Ebygu7KGapNASKnpTNIAHdGRRAg0ZD/dx1Hjv+vDsjdXS4tEHGIKB/KlBjaKKAvfqM0pe&#xA;5Ey+CmvDbw4hsBZC0OLbSGNE5E+HxH+GBluqrpdkd+LU8CSP7cUWVdXtLdeAZIwv7NQMVUZtStwp&#xA;C8XPgWoD93LFaKf/AJXXSjzJOriGAT2zLHFG5cu6ur91ToobNj2bICZHk6/tKJ4Ae4vVs3TpXYq7&#xA;FUDrxYaHqJTdhbTFR7+maZXmPoPuLZh+se8PF/rWsy/EWjtk8WA/jyzmbL01BcqXDfa1VQ3gtD/E&#xA;Y/FHwakt9YT4oNSVvBXjr/zViu3cpfpnVrOgv7dZYuhnhBBHuVqa/QcbXhCKd5plWe1mqrgMFO6M&#xA;D4eGKhDzMk6eleWbOvsA4r4gjcYE0oR2Olq1eUir/I/Kg+lhX8cU2Vb6vpVP70f8jP7cVsvSPytM&#xA;J0G79E8oxeuFatfsxRg/iM3nZ3938XR9o/3nwZjme4DxBtTnuZJJkaNmdmLN6v7RO9aA5y0iSXqI&#xA;xAFLHlvSeJnjj+8n8SMDKgsFtGzBrif1yNwpIC/8CMC2tmuXmk+r2jLUCryVBAHtioWnT7SIepcy&#xA;Fz3ZzSv8cU2qabpkmtXf6P0S1WWb/d91ICIYF/mc9a+C9Tl2HBLIaDTmzjGLk9b8reU9N8u2Rhth&#xA;6tzLQ3d44HqSsPHwUfsqNhm/wYI4xQdDn1Eshsp1lzQwv82WI8sxD+a6jH/COf4Zr+0v7se/9bse&#xA;zP7w+79Ty6N/XHK6n4RDYRr1PyUZo3due+0eE8fQZh/NQn+uFaKw33lyYUlTgPFgwGKN1eLTtNlF&#xA;bS8lSvQRykj7jXFbVf0RdV21G4p4VB/hii2zoivtPdXEo/lMhA+4bYralINBsfhcgt2jWrMf9iuK&#xA;d1I672trKi9mkIjH3AMcV4U18p6jPP5q0cyIq8Lmvwk/tRvH1P8Ar5k6M/vYuPrI/upPcM6J5x2K&#xA;uxVbLHHLG8Uiho3BV1PQgihGAi0g08h1X8u/N0F7KYLRNWtwT6Di4WFuNduSOFAanWhpmkydnzB2&#xA;3DvMfaGMjfYoCTyp5yQ0bysSaV+G5hYfepOVHRZe5sGtxfzvvWDyx55VgYfL80G+/G4icf8AAkjH&#xA;8nl7k/nMX85GfoPzmU4v5fmaoo37yGh+jmcfyeXuR+bxfzkPZeWfOlqkka6FO0bMWjUyQ/By3I+3&#xA;0rvj+Ty9ynWYv5yo3lj8x23TRWCncf6Tar18VLMR9+H8jl7vuR+dw9/3q0PlD8wynJ9OCt/I01sf&#xA;xV8P5DL3IOuw9/3ouLyL57uF4SQWVox6zSTGTiD1oiKan6aZOPZ2Q86YS7Qxjlb0Pyt5eh8v6JBp&#xA;schnaPk807bGSRzydqb03O3tm3wYhjiIh1GfKckjIptlrUxm+/LXyPfTvPcaVGZZGLu0byxVY1JN&#xA;I2Qd8x5aTHI2Q5MdZliKBQ3/ACqX8vv+rV/08XP/AFVyP5LF3faWX57L3/YF8f5U+QIySukqa/zT&#xA;Tt/xKQ4jRYu770HW5e/7mOeeNB8reVre0urKyWzFw7RSSoJJCTQMqVJelaE/RmDrsEYAcIpztDnl&#xA;MkSNpfovkfWvMciXF3E+kaUKEPIKXco8EQ/3Y/yjv4ZXp9DKe8tg2Z9dGG0dz9j1LSNG0zR7FLHT&#xA;bdbe2j6IvUnuzE7sx8Tm5hjjAUOTpsmSUzcjujcmwdiqQed/Ltzr2htZ2siR3SSLNAZuXpllqpD8&#xA;atTix6d8xtVg8WFdXJ0ufwp2eTzr/lUvnf8A3/pf/B3P/VPNb/Js+8fj4Oz/AJTx90vs/Wsk/Kjz&#xA;yoBWTTH9lkn/AONkGJ7Nyd4UdpY/NZ/yqzz54af/AMjJf6YP5OyeSf5Sx+bS/lT56B2XThXqfUl/&#xA;5px/k7J5L/KWPzRSflZ5+TZLvTVHtLdD/mXh/k3J3j8fBj/KWPuP2frc/wCVnn+Q0e907j3HqXJ/&#xA;Ax4/ybPvH4+C/wApY+4/Z+tr/lT3msV43unqW6kCWv8AxHJfyZPvCP5Th3F0f5M+ayD6mr2qntxR&#xA;m/Wq4jsyXeFPake4ploX5UeYNP1myvp9VglhtpkleNYyrMEYGgNPbLcXZ5jISvk1Zu0IziY1zeoZ&#xA;tHVOxV2KuxV2KuxVbJJHGvKRwi9OTEAfjgJA5pAJ5IZ9Y0lDRryEHw9RSfwOVnPAfxBsGCZ6FaNb&#xA;0cmgvYfpdR+s4PzGP+cF8DJ/NKJhubeYVhlSQeKMG/VlkZA8iwlEjmFTJMXYq7FXYq0zKqlmIVRu&#xA;SdgMbVDPq2lIaPeQKfAyoP1nKzmgOo+bYMUz0PyUZ/MOhW6hpb+BVPQ+opH4HInUYx/EGQ0+Q/wl&#xA;DN5v8qllVtTtia1HxggEe/QYPzOL+cGX5XL/ADSi7TXtFvGCWt/BM5NAiSKWJ+Va5KOaEuRDCWGc&#xA;eYKOy1qdirsVdirCvMHn+TS9dm0z9wvplAjSh9y8avuwZV/a2zW6jWyhMxAGzssGiE4CRJQ5/MDU&#xA;uwtfub/qplP8oz7g2/yfDvLv8f6p4Wn/AAL/APVTB/KM+4fj4r/J8O8tH8wdRUVf6oFHUkMP+ZmP&#xA;8oz7h+Piv8nw7z+Pghp/zVaHYvasfBA7fqemD+Up9w/HxZDs2Pn+PggpfzY1i4UpZwW6E9Jn2p/w&#xA;TlcB7RyHoGQ7NxjmSq2vn3XFQtd39rXwUIAPmScA1+TvCnQ4+gKqfzDuyCBqFuD4gxfxx/P5PJH5&#xA;DH3FU0TztrN/qlvHHP61m06RSSlECvycKyoQoJpX7XT55PDrMhmATtbHNo8cYE1vT0bNy6d2KuxV&#xA;2KqN5eW1nbPc3LiOGMVZjU/cBUk+wyM5iIs8mUIGRoc2Dap+ZBlrHp8UsEfT1XiYufkKEDNTm7RJ&#xA;2hs7XF2eBvLdiOpXVhqEpmvpJmm7yMJK/iCM185cRsl2EI8IoIZJoI6LDqbKOwkXn+sDIsq8lZLy&#xA;T/q4QH/WSn8RhtFeSqsrMQTqSLTr6PFSPkxLHEHzRXkneleYdQ09QkF88yDqs7mYf8MTT6KZkY9V&#xA;OHIuPk00J8wzHRfNtpfMsNwBb3DbLvVHPsex9jm0wa2M9jsXWZ9HKG43Cf5muG7FXmPnWXWJPMV0&#xA;kTRGCL01hEnKoBiRjSm32ic0WuJ8Qu80Ij4YY5NDqlK3F9HAp2+Hb8TxzD3cwEdyG+o6YXrNetO/&#xA;+RuT93PBQZWe5Fw2VoKfV7Muf9+TVC/c1T/wuGmJJ71ee/gsoyJXVpP2YoxSn0b0+nG6QI2zTyj5&#xA;/s7uxEOpF4bmL4RKys6yL2PNV+0Ohrm302uiY1M7uq1WhkJXDkyhNZ0hwCt7Bv0BkUH7ia5mjPA/&#xA;xBwjhmOhRasrKGUgqdwRuDlrU3iryT8x47KXUNaWUI0yRBkBpyBFshBHfrmg1v8Aen4fc77RX4cf&#xA;x1YxD5M0qa2ilRmUyIrEklhuAdqFcxacvjcPJNmu5dQO5IY/rbGl4218reX4zWeZT7Bgv4EnGl4j&#xA;3L2tfJcGzLDXvUs2Oy+pEw2OgTIGt9NWVD9lxGtD9LEYo371dNJ0+lF0uAf8ZFj/AIB8KL8220e1&#xA;4N6dlaRsQQCI1J/UuK2pfl96/wBX0l/VCwpdJVePb6xU1YnLMH1x94a9R9Evcfue5Z0jzjsVdirs&#xA;VeR+a9X8w6tqshtyYrCFiltHyWhA29Qjfdvw6Zz+qzyyS/o9HoNLgjjjv9XVJmg1kLWe8SFO5JA/&#xA;gP15i7uTY7kP+kIIn4fpcyydPTjQyH+OK15Jjb3geMl4rib3khCfcKLhRSDuJYjIfjWHl0jntwPx&#xA;ocDIOWzupFrHHZzL4oKfq440ix5tHTrwb/UoG9lZh+t8aTxDvUZIZYt5NOAp3Rn/AONWOBN+b1P8&#xA;u/MsmraZJbXFRdWJVSWNS0bA8CSdyfhIOb3QZzONHmHR6/TiErHIpnrXmzR9Jk9CeZWuyKi3VgGF&#xA;RtyJPwg/f7Zbn1UMex5tOHSzybjk881QzX+oz37XEsckzciikFAAAFAUg9FFM0eWZnIyPV3WKIhE&#xA;RHRA8nfZb9fAqVSv3bZW2/BeLW9A+G7pXwjXGkWO5RkhQf71aixH8qssdfoGKb7gvgt7Ff8Aee15&#xA;n/fjLQf8E+/3YoJKrcXkFooe6lVK7JGvUnwUfaY4UUhWn1W9BWCE2kJ/3bNtIfkoqV+nBuyFBVsr&#xA;mLQ1JjvHSc9eDsD/AMCp2yUZmPIsZQE+Yeq+VtVk1bQLS/kFJJVYN0FSjslaDbfjXOh0+Qzxgnm8&#xA;/qMYhkMQ8489RRPc687orOFloxAJFIRTf2zS6z+8k7nRn93FK7HSrKTT7ZihVmiQkqxG5Ue9Mxqc&#xA;niK5vL2msasrk+PNh+ojGl4y1/hvRBu1vyp1Lu7D8WphpHEVgu/LVk4WH0BKOiwIJHr/AM8wxx2W&#xA;iVUardy/7y6dM4/mmKwr+JLfhja0uA1yT7TW9up7KHlYfSSg/DFdlX6reH7d41P8lEX+BwUtjuSb&#xA;ydzjtbZ/WkCQznlGKUIV6/jksR9Q965RcT7nv+dO8w7FXYqhNXkli0m9kip6qQStHXpyCEj8cryk&#xA;iBruLZiAMxfe8VmttelU87lIF7kGlB9A/jnM7vS3FBrpukiT/SJZdTn/AJFqV+4bYps+5MY5bqCI&#xA;i005IIx/MyoPpAGG2NDvUW1LWakD6glOzTMf1DG14Q4ahq7jg1taXIPVY5xv9DDG1oKEgjR+ctjd&#xA;WL/78hpKg/4An9WCk2iYLtyo9LUo3HYTJxP40ONqR5NyS6jJ0mhIHSgP9uJKQAyr8s2vf03cLMyM&#xA;htmIKV6iRP65sOzfrPu/U6/tKuAe/wDWkGtWFjdald3M8pjmlnlLEtT4g5BFGr0zEz7zN95crASI&#xA;ADuCGgt2t/ht9RUr2jejD9e30ZW2E30RDpNItZraK4H8yEV+5x/HFCFkNjEvx6bMQOoVOQ/BsWW/&#xA;epfpdIv95tJm5f6gT8cbXh81N7/zHcnilt9UjPUhS0lPYsAo+442V4QqwWt1bkypBHFMw+K6upPU&#xA;kP8Asu3yG2K7NSSGQlZr55j3jtl2+8bYE/BpLazjo7wCNP5pnqT/ALHcYFt635Hu7a58tWptwFSL&#xA;lEQooKqx/XWudDopXiDz+thw5S8488wzy3uuzxXDJGvrK8RFQeEdG77Vpmo1f97J22k/u4pbZ3M8&#xA;VjbL9aDuYk4wxRhnpxG3XMdyaVPq+vXB3nFtEfGjP9yhR+OO6LAXNo2moOd/M9yetbmQ8foQcV/D&#xA;GkWejv0pYW49OwtmmbskCBR9PT9WNp4T1aF15jm3itIbdT0Mzlz9yhcd1oLZBrSb3F/BED+ykf8A&#xA;xsxxKRXch5Zn3D6mSP8AJWv/ABE5G2QHklegTcIGCXLLwmbinEkHevj3wxNEIkLD6QzqnlXYq7FV&#xA;s0STRPFIKpIpRx4hhQ4CLSDTw76lpsMzw3TSS3MLtHKhDsFdCVYDiPEZzEo8JIPR6aMzIAjqik1D&#xA;ToUKgGJR29NgPwGC14S1JqOjXCmGW4iIP7DtxP40xsLRCn+g9MkHKOvE9CrVH8ceEJ4y2NA0/wAH&#xA;/wCCx4V4yrRR21iCPXbj2R2BA+XhjyRuUNcXGnzNWQxH/gSfvwEsgCFAQaQ5oOFfANT+OBlZZj+W&#xA;GmRJql/dwgiOGJYGNaqXkIkIHuqopP8ArDNp2ZDcy+Dq+0smwj8Uh8wzWlrr+q6fcxGRkuXmVOPM&#xA;kXH78Ef8jKZiaocOSQcrSnixxI7krC27H9zpjN4c24/ga5juTv3t+jcqappoQ+IkI/URii/NVF7q&#xA;kOy6e7+P7yv/ABInDZRQ72jrepL9rSJ6f5LKf6Y2vCO9SfzPLHXnp06U/mI/hXG08CGPmCCY19CK&#xA;Bj3nRz/wwXj+OC08KIjaW6UEX0ZT+WDjQfIjAvJsQaZCS0jiR+pMjcj939mKbL0z8tZ4ptCnaLdB&#xA;dOoNKdI4+mbvs3+7Pv8A1Oj7R/vB7v1sC862sJuNdndmLB5wicqLXcVpmt1Q/eS97stKf3cULp19&#xA;ZQ2FvHAhkl9JOaxLXfiPtHKLbzElWZ9TuP2ks4z783/pitAKMtpp1tG1xcF7qQd2JNT/AJ+ODZNk&#xA;tRXd/NGDbJFbQn7NBU/0/DG14Qoy6ZPNU3V/NIrdUDcF+5SB+GKdlsehaTGa8Ax/mYiv3imBbRIh&#xA;06PtGPckH9eK7pVpNxALK/h5AObicIo3rUClKYVIfQ6OrorqaqwBU+x3zqnlW8VdirsVeX/mFpd5&#xA;per/AKThl9DStQYfWJQgdYbigX469FlAG/8ANWvXNNr8BEuMci7nQZgY8J5hITNqkYrHJDcgdV+y&#xA;366Zr7c+ghWvdNkbhf2QjY9SVBH6gcFp4T0Lv0b5Xf4o1VCd/gdkP3VGHZfUoSWOhr/u6Tj4evI3&#xA;6myKRamqaNG37q3aZx0LFn/4mTindWE83+6rAKO1V/sGK0tH1u7uotPisFlv7o8beJfhNf5mpuEX&#xA;qTkoQMjQ5sZzERZOz2ryvoEOhaNBp8bepItXuJqUMkrbu1Ow7AdhQZ0mDEMcREPOZ8pySMixzzl+&#xA;X1/rGrDVdK1EWNzJGsN1HInNHCV4t/rCtOmYup0fiS4gacnS63w48JFsV1Hy/rmgPHDqc0d6J1LW&#xA;80C8SeBAdXB4gU5LTxzWajTHFV9XZafUxy3W1IL17r9iGg/ynA/4jyzHcinGbUq7Kg+bsf4Y2tBR&#xA;kfXifgeBR4MHP6mXG1oKE93rNtGZZo4JUX7XFmQ/jywJACrYXdvqUHqmCnE0PMBgSP5W74ryXy6X&#xA;pztzaFQw/aWqH71pitqFnps2qS+nomlTahQ8TcKTHbg1oazOeO2XY8E5/SGvJnjD6jT2HydoUuh6&#xA;Bb2M7K91VpLho68ObsTRa70UUWvtm+02Lw4CLoNTm8SZk8g85+g9/rjyB3mE9yq0HwqBIwXpmi1P&#xA;95L3u90v93H3Jfa+ZtMgs4Y60KIqtt3AAPQHKG+lT/FunfzL/wAlP+aMVpafNemuOBQyA9QoY/rU&#xA;YrSmNW0A7mOWPx+F6fgcaXd36S8vE0RJn/1VfGl3XjUNDH/HvOfmj40tlUXVNNU/DYXB8D6BP68U&#xA;bofRL1na/hhioXnkn/efCQj0A+H6MKSH0HpknqabaSUpzhjanhVQc6iB2Dy0xuUTkmLsVdiqldWt&#xA;td20ltcxrNbzKUlicVVlPUEYJRBFFMZEGw8p8x/lhqOlyNc6JGdS04bmwZqXMQ8In/3YB2B37b9c&#xA;0+o7PI3huO53Gn7QB2nse9jFvNYzSGBbiW3uFPF7S4+F1bwKP3zXGNOxEr3RR05v+Kn/ANaOn/ES&#xA;MCbd9RmX7Mdv8yrH9ZOK26UXcMfOW6igjHU0AA/4LFGztIt9f125+raGrXSqaTX8qCO2j+bUqx9h&#xA;l+HTzyHZqzZ4Yx6nq3lHyVYeXonl5m71S4H+l38gozf5KDfgg8Bm80+mjjG3N0eo1Msp8u5kWZDj&#xA;OxVjnnfyzd63YQmwmSHUbRy9uZa+m4YUeN+O9G2PzAzF1Wn8WNDmHK0mo8OW/IvObzy/+YVsKHQh&#xA;NTrJDNHIDv1Cg8vvzUy0WUdHbR1mI9UvI81R1+t6HqEQG9YrV5BT/WJoMqOnyD+E/JtGfGeUh81M&#xA;X8wYpcWOpIaV/eQFP+IAHI+FLuLLxI94Qk2oaR6hke0nnk6ASRuwFPZ9h92R4Sysd6vHr0bKPgaA&#xA;DbgYZXP/AAoUY8JWwn3lLR7jzLqKxyRyfoaH4r2do2iWWn2YU5HkeR+3/k/PMvSaYzlZHpDiavUi&#xA;EdvqL2CCCGCFIYI1ihjAWONAFVQOgAGwzegAbB0RJO5X4UPn7zVrmlL5g1SzuklkSO/uGkRApRiJ&#xA;SQCSw2B7eOc3qf7yXvek0w/dx9yAbzfpw2S0anaoUfqylvpsedYK7wNT2p/XAtKiedbD9uCUfIKf&#xA;+NhhRS7/ABppf++p/wDgU/5qxWlKfzVokwPO2lZvHigP3hsaTRQyeaIIm/cmb0+yOFb/AI2wUlFr&#xA;51seI5QS8u9AtP8AiWFjSlDrtr8EiWU8nDl6UgQV4tWqkgmorhESpIfQPl1mby/pjMasbSAsT4mN&#xA;c6XF9A9zzOX6z7ymGWNbsVdirsVdiqVa35V8va4nHVLGK4YCiykcZAPaReLj78qyYYT+oNuPPOH0&#xA;liVz+TWlg/7jtWvrJR9mLmJIx8h8Jp8zmHLs2B5EhzI9pTHMAqH/ACp24YgS+Y7ooNyEjCH7w5yI&#xA;7MH85n/KZ/mprpv5R+UbWUT3aTanOP27yQuP+BUIp+TVy+Ghxx82ievyS5be5mMFvBbwpBbxrDDG&#xA;OMcUahVUeAUUAzLAA2DhkkmyvwodirsVdirsVdirsVdirsVdirsVdiqAl8v6DLI8sum2skshLO7Q&#xA;RlmYmpJJXcnIHFE9A2DLMdSoT6N5TtQHmsbCHurPFCvTwqMhKOOPMRHyZRnklyMj80JNqPkmE0dL&#xA;Y+6W/MfeqEZUdRhHUfJtGDMe/wCaHPmH8vwaEQA+9q//AFTyP5rB5fL9jL8tn8/n+1cnnHyYSQGU&#xA;UNBWEgf8Rx/O4fwF/J5vwVaPzP5Rc0Dx/P0if1KcI1mHv+xB0mbu+1FL5q8uqoVbkBRsAI5AB/wu&#xA;S/OYu/7Cx/J5e77QqDzNoRNBdr9IYfrGS/N4+9j+Vydyouv6If8Aj+gX/WdV/wCJEZIajGf4gxOn&#xA;yfzSjlZXUOhDKwBVgagg9CDlwLSQ3irsVdirsVU57m3gTnPKkS/zOwUfjkZTEeZplGJPIWldx5t0&#xA;OEkCcykdo1J/E0H45jy1uMdbciOjyHog389aaK8IJm+fEfxOUntGHQFtHZ8+8Kf+PLT/AJZZP+CX&#xA;B/KMe5P8ny71y+e7CnxW0oPsVP8AEYjtGPcV/k+XeFRPPOkn7UU6n/VUj/iWSHaEO4sToJ94RUPm&#xA;3QpDQzmMns6MPxAIy2Otxnq1y0eQdEyt72zuRW3mSUd+DBv1ZfHJGXI20ShKPMUrZNg7FXYq7FWK&#xA;eZfOtvZStZWLh7tDSZ1UvwP8oABq3j4ZrtVreE8MebsNLo+IcUuSC0Tz1eGdYtRiLW7He5ICMv8A&#xA;sF6j6B9OU4NebqfLvbs+gFXDn3M3R0kRZI2Do4DKymoIO4IIzbA3uHVEU3hQ7FXYqk/mPX10q2pE&#xA;qy3kn91ExoAP5mpvT9eYup1Ixj+k5Om05yH+i8u1jzBqH1kNcr9avbg0ihQ1Zvo/ZUePQZo55JSN&#xA;nm7yGOMRQ5ISS+15RU28EfjyLsB9IAyFsqCn9d11q/vLEL4Ms3660xtNBT+ra9LuJrA1/lVx+o4r&#xA;ag/l7XWNUmt4j4RmZR/wNeP4Y0vEGv0F5pWnC9hI7irjb58TjSeINHSfMqmsrCceCTsn/Gq40thE&#xA;6bxS9WxvLJ7eWVC8btMJg/Dr8Q3740gl7D5OuVl0OKMVrbM0Jr7fEKf7Fhm+0U7xjydDrY1kPmne&#xA;ZbiuxVDX+pWVhF6t1IEB+yvVmPsBleTLGAuRbMeKUzQDDtX88XLhhbEWkHT1GI5n6TsPozVZtfI/&#xA;TsHZ4dBEfVuWMS6pLcyFwJblz1kaoH/BPT8MwZTJNndzhAAdyhOdYaghWCMHqXZ2I+gKBg3ZbKJ0&#xA;/WJP73UygPVYYlX/AIZi+NLY7mv0HX7eoXjHv+94j7gBjS8TQ0EKapfXQ8Kyk/rwUniRCW1xCKG9&#xA;Yj/LCn8Tii/JVWZV+3cRkeJoP44UUrJcxq4ZJQrj7JVgD+GEGkEWnFn5y1Wy4h3F1F/JLuad6ON/&#xA;vrmVj10489w4uTRQly2ZhofmSw1dSsNY7hBykgbqBsKgjYipza4NTHJy5usz6aWPnyTXMhx0h826&#xA;3LYWXoWkgS+nFI3I5cF7vTx8Mw9ZqOCND6i5mkwccrP0h5nNpk0zF59QuSercHEY9/siv45o3d35&#xA;IUf4ftWIe65y03DzvI30jkf1YNk7sw8h+bLSFv0bNL/o8zgWYUOyxk1ryYgUDGnt375sdDqRH0H4&#xA;Ou1umMvUPi9EzcOodiqX65q6aXYPcUDzH4YIiacn/oOpyjUZhjjfVuwYTklTyDX9b1MzhnmFxqV2&#xA;1IoUA+89OKqM0E5mRs83f44RiKHJbp+jCGs9zcNLfSj9/MDT/Yr4KMjTIyRwtIj/ALsc/wCyONIt&#xA;o6fbN9pSa9ak40toZvL2lkkqjRE94naP/iJGNJ4i3HoscRrHdXA9i4I/EHGl4kR9UkHS4f6d8aRb&#xA;vq0//LQ33YraV6nbumsaS7SseTSxk1oRyTt92BkDs9K/L1+EF7bBiwR0lqxqayAr/wAy83HZx9JH&#xA;m6jtEeoHyZdmxdc7FXl3my71CTzNe2k7egsQR4JH3LQMNmjH2QAwYH3zRa3i8Q27zRcPhikpQWkb&#xA;c1Dzy/78oXP0N9kfRmG5e683NyfsWjkeLMi/xOG1oLPW1M9LZF/1pK/qGDdaCk518/YW1UeJaQn/&#xA;AIjjuuymbPX5R+8v44R4RRcv+GJGNLY7mjoDSD/SdQuZT3AZUX7gCfxxpeJcPLWj0+KJ5D3Z5ZD/&#xA;AMbUw0vGW/8ADWif8so/4J/640vGXNo2jxfZg+LwDP8A1wEBIkVH9GWdfhUqfZjkaZcTO/yx01oo&#xA;r6+5MYpHWCDka19OpkYHw5Nx+anNx2bjqJl3un7SyXIR7mY6hfQWNpJczH4EGw7sT0A+eZ+XIIRs&#xA;uBjxmcqDyjUWv7+6lubq9flIakIFQKOyrsTQDOeyTM5WXoccRAUAlM2naKzUuZ5Lph+w8ry/8KK5&#xA;W2WVOjp8GmaOBTpLcURfoBJY4p95d9S8zTbyXSQjskdEA9qgMfxx3W4vVvJGr3N3pq2l/IJL+2FG&#xA;cEkvH0VjWhJHRv7c3miz8caP1B0etwCErH0lkeZrhPI/OWqrey3GpzOwtoEIgiFNkHT6WPXOe1Ob&#xA;xJX06PQabF4ca6pFo+hkxfXrtiby5AYgdEQ7qg/jmPTkGSPfSIHXiXcD/JbifvFDjSOJSby9Zt1k&#xA;lPzkc/xxpeJb/hy0HSSQf7N/+asaXicNB4f3V1MniBJIB/xI40vE4aVqCGsV9KD/AJT8/wDiYfFb&#xA;CtGusx/bdJh2+EKfp3A/DHddlUXF6v24K/6p/wBvCtBK9Zu/9K0x5IXThcjqPFSNsFpAeiflxMs0&#xA;2puvTjbjf2Mv9c2vZp+r4fpdX2kPp+P6GbZtHVuxViv5gaEb3Tk1O2j53+l1lRQN5IT/AH0fz4jk&#xA;v+UBmHrcHHCxzDmaLNwSo8i85HmCB/7qGSTwIA3+4nNFxO84F41W5b7Fk3+yYL+sY8S8HmuF3qLd&#xA;I4o/9Zmb/iIxteELgdQfrcRR/wCqhP8AxI4rsovp1zIavqcvyTin/EcVvyQ76dGtQdXnB/4yn+uK&#xA;fgtFhdAVg1adtu9GH/DE4F+DfHzAnS8SUeDooP8AwgTGytBtby+jH+k2/LxeLcfdU/rwJoKgNvqA&#xA;S3jX1ZpXWOKLo/qOeC0PVd2+0OmShHiIA6sZnhBJe0aTplvpem2+n29TFbIEDMasx6szH+ZjUn3z&#xA;pscBGIA6PNZJmUjI9XnXnrVotT1ARC+9HT7WqoiMB6jn7T1rv4D+3NLrc/HKgfSHc6LDwRsj1Fj0&#xA;VrZNQxW8tz4SSEhf+GI/VmHTmElGJHdAUjWGBfAAv+rgMKNl31e5b7V0w9kVB+sNii2vqR2rcTH/&#xA;AGVP1AY0m1fT7mTS9QhvIZZXkiO8bOSrKdmVh7jJ4shxyEgwyYxkiYl6xaXUN3bRXMDcopVDIfY9&#xA;j7jvnRwmJAEci87OJiSD0eQanpslvqt/ot25VYyTAhApJayV9NhXrQfC3uM5/UYjCZDv8GQTgClG&#xA;nfWbK8/RFxOwWnKwlPR4x+x/rLlDee9N/q9yOlwfpUHCxtoxX46TKfmoH8MU7LX/AEoF+D02b3BI&#xA;/WuO67Ic3euR/atIpB/kuy/qWTAtBb+mrtD++sHA/wCK5FY/8P6eNrwqkev2B/vvUtz/AMWoQP8A&#xA;ghyT8cNrwlGLeWzpyikWUHoUIYfhjaKSbXpecunV6/XI6D2o2RtmA9C/LZh62pr3C25P0mX+mbXs&#xA;z+L4fpdX2n/D8f0M4zauqdirsVeM+b9E1PRNYkgt5YodLnLSWR9N5JVUkFk4ghQqFuK+1M5/WYPD&#xA;n5F6DR5vEh5jmlcTzp9p7m4P+UiRr9HFVOYjlUqPPqPH91bKvvLJ/QHFdkFJqF4GKyahYwEdVB5M&#xA;PvYYqotqND8Wtx1p+zGhH6jilWj1Fab6pbSg7gPxT78VVI5kl39KG4A/bt2BP4GuKrhHJKxNleyQ&#xA;yDrBKA4+5tx9BxVY11rduR6yRSIOrKjD8QxH4YrQZn+XGnJqerNqzRcYdPBSMkD4p5B4/wCRH/xI&#xA;ZsuzsVy4z0db2jl4Y8Heyb8wfMS6NowUgg3zGAS8ggUFSW+M7BiOn39szddmMIbdXC0OETnv0eWQ&#xA;XWnCjWiWfPt6lypIr8g5zRO9KLWTW5z+7ms0XxTnKR+KDCx2XrYam399qT0PaGKNPxYSHFbC5dKV&#xA;al7u5f5ylf8AiHHGltc6QqvBGkP+UZZD+JbASkIdrau6yyKf9Yt/xKuRZWzf8udVnX1tKuphIN5b&#xA;Rjsf8tOv+yFPfNt2dm5wPwdV2jh5THxTDz95Vk1nT0urEAavY8mtjWnqoftwsfBqbeBzK1en8SO3&#xA;1BxdJqPDlv8ASXkr2A1S2WRbmSOSNiVVgA0Uq9VYU5AqffNAXfAqen3etPJJbtd8b2H7cMqghh2d&#xA;acNjjakBME1y7tmCajCEU7CdTVD8zQcfpH04bRwppHewuKrX5bY2jhXfWU8Dja8KnJfRrsafTv8A&#xA;qxteFDvNbydQv/A0wMqUxBaVJXirHqQdziqX6pETe6bEjklpi4B3pwUmuKQ9F/LESi61bnQ/Ba0I&#xA;+c3ambXswfV8P0up7TP0/H9DPM2rq3Yq7FWK/mDot5fabDeadb/WdQs3okAIVpIpaK6BjsKEK/8A&#xA;scwtbgM47cw5uiziEt+RYlZflt50vwG1C+g0mI9YYF9eWngTUKD7q2YePs6R+o05mTtGA+kWnlr+&#xA;TflZSrahLd6lIOpnmIH0CPiw/wCCzLj2fjHOy4su0ch5UE6tvy88k2wAj0a2an+/V9Xp/wAZC2XD&#xA;S4x/CGg6rKf4ijE8p+Vo6+no1ildjxtoRX7lyYwQ/mj5MDnn/OPzU5PJXk9xRtEsQOvw28Sn71UY&#xA;Dp8f80fJI1GT+cfmll3+VXkO5BrpixN2aGSVKfQG4/hlctFiPRsjrco6pLefkxYBuelatdWjr9hJ&#xA;uM8Y+Q+Aj78x59mxPI05EO0pDmAUlvfJf5gabusFvrMA/at39KX5sr0H/Ag5iZNBkjy3cuGvxy57&#xA;PTPLmkpouiQWkjKZEUyXUvQGVzykap/ZqaDwFM2+HGMcAHUZshyTJeY+YdcvdV1KeX14msy37i2l&#xA;AKqi7KSK9e5zRajOckiejvcGAQiB1SoahZxH4nsUbvQgH7sptu4VN9csq0W5gQjcFImc/fXBa8K0&#xA;avZSn49UIr4Ui/gMbTXki4DZyUZJROf5i/qfrJwKicKECFlmupY5JmjCH4EQ8SVPeuBK+01QaRqk&#xA;FwjztJA4ejN8LDuD7EbHJ48nBISHRjkx8cSO97hbzxXFvFcQtyimRZI2HdWFQfuOdODYsPMEUaLz&#xA;v8xPJ00M0vmPSIi5I5arZp1dR/u+MfzqPteI981ut0t+uPxdnotVXol8Hnd3YveJHqGnXJZl+JDX&#xA;dT3AJ3Hup2+Wah2yLitdXuIfi1AUYfFG9unfsfixVQGl6zZgCG9Rowdg0dOPy3P3YraLiXW3T/eq&#xA;HkOtYjX8GxVZBaam9eV1EGHUeiT/AMzBirptP1ILU36IPaAfxc4qo/o+8IAbU396QoMVVbfTII7h&#xA;bia7lnlQER8gAF5daADFbek/leimHU5lJYCWOEsa7lE9Sm/tNm47NHpJ83T9pH1AeTOM2TrXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYqoX1qt3ZXFozFVuIniZh1AdStR9+RnHiiR3soS4ZA9zxi68nebNOlK&#xA;PoH12NSR9Zt5lkDAdxGfiH0jNDPRZI9Ld/DW45daQ5XVbYHn5c1GILSpW1YrU/5QoMqOnmP4T8mw&#xA;Z4H+IfNTk1aeM0k0nUEJ7NbkbfScicUu4shOPeFF9Tif7ekXjfO3B/jg8OXcnjHeEM76e5qdEvA3&#xA;8ywFT+DY+HLuK+IO8Lre61FZlW2sdRkiWhaMwM7cQd+5xGKXcVOSPUhGSx6xeAGLy9qbMDRZRbut&#xA;P9lQjJjBM/wn5MfHgP4h81az8u/mHdJ6a6G2/Rrt0VR8w5Rssjo8p6NctZiHV7F5YsL7T/L2n2V8&#xA;4e7t4VjmZTVagdAaDp0zeYYGMADzDos8xKZI5FM8tannnmb8orW/vnvtEvm0iWY1uIEUmJm/mUKy&#xA;cfftmvz6ASNxNOxwdoGIqQtj5/JvzjG4aHXYj48mmH4UauY57Nl3hyB2lDuK1vyn/MMMeOr2bL25&#xA;PLv8x6LDI/ybPvH4+DL+Usfcfx8Vr/ld+ZMdOGoWT168GYU++FcB7OyeSR2jj7j+PisH5ZfmYDUX&#xA;lpU9Tz/69YP5OyeS/wAoYvNs/ll+ZhFDeWhHgX/69Y/ydk8l/lDF5tL+V/5kkgG8swD3LbD7osP8&#xA;nZPJf5Rxeap/yqLz9JUS6rZop7xvLWv0RJTCOzZ94Y/ylj7j+Pi9H8keWJPLmhiwmuPrVy8rzTzg&#xA;EBmagHWp2VQM2emw+HGnW6nP4k7T/L3HdirsVdirsVdiqlPd2luKzzRxDxdgv6zkZTiOZplGBPIO&#xA;tru0uo/Utpo54605xsHFfmpOMZCXI2somPMUq5Ji7FXYq7FXYq7FXMwUFmNFG5J6AYqgn1vRozR7&#xA;+2Q+DTIP1nKjmgP4h820YZn+E/Joa/oR6ajan/ntH/zVj4+P+cPmvgZP5p+StHqFhLT0rmJ69OLq&#xA;f1HJDLE8iGJxyHMFEAgioNQehybB2KuxV2KuxV2KuxVZNPDChkmkWOMdXchR95wSkALKYxJNBLpP&#xA;NGgxmhuwT/kq7fiARmOdZiHVvGkyHosTzZoLdbnh/rI4H30pgGtxHqk6PIOiY2l7Z3kXq2k8c8Va&#xA;c42DivhUd8yIzEhYNtEoGJoilbJMXYq7FXYq7FXYq7FULfarp9jGXuZ1Sn7HVz8lFWOV5M0Ycy2Q&#xA;xSnyDAfMHnLzBqDmHSl/R9p0M0hUzP8Ady4D5b++anUa6Uto7D7XbYNFCO8vUfsYtLaQcjJqd6Zn&#xA;rUozUFflWuYB83OB7gjtO1i4tXV9IjdePST+7jI96/a+7J48hibiwyYhIVJn+k+c7OW2UakVtrlR&#xA;+8KhjET/AJJ3I+nNvh18SPVsXUZtDIH07hXm88+VIm4tqKM3hGryf8QVstOsxD+JrGjyn+FQfz/o&#xA;INIluJh2ZYWUf8lOGQOvxjvLMaDJ5D4q9j5y0i6kCMJLUsQFM4UAk+6M4H04Ya7HI1y97GeiyRF8&#xA;/cmmpX8dhZSXcis6R0qq0r8RCjr7nMjLk4ImRaMWPjkIvO9U/MrUppJIrCLgEYozCigEGhBkfc0/&#xA;yFzUZNfM8tnbY9BAc92P3WrazfEm6ugR/KFaYj/ZSMo/4TMOWSUuZty444x5CkJJHEFLTTXL06hU&#xA;iH3BI+WRZoVp9IH2mv09+D0/4jjsndpLrR+VIdZlhfwlVV/4lGv68V37kytLjW4/isNUhuF9uv8A&#xA;wSMMkJEciwlGJ5hNbbzh54tPtIJ1HWjrISPlJQ/c2Xw1eWPVolpMUujKfKv5gHVLq0s7yBY5r4Ob&#xA;WSOoDGNS7Ao1SPhU71zYaXWmcuGQ3cDU6IQjxROzM82Dr3Yq7FUNqV8ljYzXTjl6Skqlacm6Ktfc&#xA;5XlyCETItmLGZyEQ8k1PVPNd/O005ic1PBKkIoPZRnPZcs5my9BixQgKCXtD5nk+1cwQL34LU/ew&#xA;I/DK92z0rP0bATXUNRabvwLgLX/VrT7hjSb7gnWh61DpEyyafUrUepGiuyuPBiAfvy3DmOM2GjNh&#xA;GQVJ6tYXsN9ZQ3cNRHMoYBhQjxBHiDtnQ45icRIdXQZIGMiD0V8mwdirsVdirsVeSa9qmqTapeuI&#xA;VSEyuqGSUUKqaLUD2Gc5nyEzJ83osGOIgPckM1/qnQ3lnAP+Kw8pH0ZRbfwhQNvPcf315eXKn9mC&#xA;P0l/GuKVa1sVhblbaX+8H+7rhuTf8NignzTAx6my8p7mO3TuI1r/AMM3TDujZBtcaOJOBkkvph2q&#xA;ZKfqXBsmivbUJ4kqkENpF2aVgo29hTG14Qo/pdW+1qlsnsjIf1tjZTQQ91rVjChaTUvUPZYgrkn2&#xA;oD+JxV7NoMj6z5OsWuCQ97ZIJH+03J4wC1T3rvnR4xx4gD1i87kPBlNdJPKIfQtNTu7ZomZ2IlCk&#xA;VYN9iRd/BlB+nOeIo078GxaN+s3BHwW5A/yjTBa0tM1/2jT7x/XHdaDTTXQ/vLcMPbf+uK0g7nUd&#xA;LRuF5bNHEesvDkgP+Vx+IfdimiqfoDRJwssUKgMKrJEaVHiCuGkcRWXliLS09O2mlEk7CKIM7MeT&#xA;mlfiP7K1b6MFJBTv8tdIS682XF4tTZ6FF9Wtif8Af8q8Wp/qoCp+jNh2diuRl3OB2hlqAj/OesZu&#xA;XTJVrnmCLSTErwtK0oJFCABxp/XMbUakYq2u3J0+mOS96pIpvPlyQfRtEQ9i7F/1BMwpdonoHLHZ&#xA;46lj+u6tq2tQC3urhYoA4k4QJw3AIHxEs3fxzFzameQUeTl4dPDGbHNITpFkm8t5OfENOyj7gRmN&#xA;Tk8RUZIPKsBrK0TEd5JGk/WWx2X1LV1vy9BtbQ8z/wAUw9fpoMbC8JV01e/nP+j6dLQ9HlIQfxxt&#xA;eEd7IdG8z+ZdPt/q6pa+iWLgSCR2WoGwIdBTauZWHVzxihTi5tJjmbN2nMPnrUx/fwQv/qB0/Wz5&#xA;kDtGXUBxz2fHoSjNK8+RXmqW2nzWvpNdO0cUofkOSo0gBHEdQh75fg13HLhIpoz6HgjxA2yvNg4D&#xA;sVdirw+5k046td2n1YzXUE0iSqzqzgqxBqC2cxkFSI83poG4g30VlMkX9zp3H5NEv6jkU/Fp7rV6&#xA;fu7JQe3KRT+ojGymh3oVh5pmNB9Xtl/mqW/Cn8cd19Ll8vhz6mpXUl0R+xUonyoCSfvxpeLuRMcM&#xA;ES8YY1jQdFUUGBKronkvR/Nut3kV7cTRfUIIai3KgkytIaMXDgUoD075maPTxyk30cTV6mWIChzZ&#xA;Qv5I+SwwJa7YD9kyrQ/cgzYfyfj83A/lHJ5Lpvy3/LnRIxdXVm8/xUjWWSR6tStOIKqen7WRnp8O&#xA;IXIJhqc+U0Clus/mJcTD6notIYUHpgQhRxAFKGU/AlPBBUZiZddI7R9IcrFoYjeW5YvHFyuXvL66&#xA;aa5dSvGOpChjyb4n3Yk9TmCTfNzgK2Ct6cbfYilf3J/oMCrWt3/lCD/KYD9eNJtVtpEgYl5QRT7C&#xA;1P8AZhCDu3eXsUkLhbdpyBsuwJxtQFPRaWGmRwTuPUBZuCbheRrx28K4gqdyvu3nuTDJaIRLA/ON&#xA;nHwmqlCDTxDeONopF6N5g8xaGrR29okVvLIZpkhVJVZ2ABZgeEm4A6Zfi1M8ew5NOXTwybnmzTQf&#xA;zAg1CaG3niCPJIIGkHJKSMKqpjcchWo7982ODXcZESObrs+h4QSCl35oW+mzXFgLuT034Scfi47V&#xA;XKe0quLd2aTUqYG9noSmpvJduyuT+oZrNnaXLuWl9DG1JpvAV/tXHZfUrJbW0v8AdaUzL2MrFR/w&#xA;1cUX5oqHTFXcWlrF/seZ/UuGkcSLSCdBRGiT3WIj/jbCxtox6gN1mjPs0ZH6mxTsps+rr+xDIP8A&#xA;JLKfxwbrsoyandxgrNZuhPdCH2+jElIiFfy9fW8nmnRACVYXZqrAg7wSgficv0Z/ehp1Y/dSez50&#xA;TzrsVdiryHXrGUa7qTS3hjjNxI/GOiEAsSOTbdjnOagfvJe96LTn93HbokNzdW5k9Cxgmvp/5i7h&#xA;B7lqjKHI97l0fVZV9S7u1tIxuY4d6D3dzhpHEFjXGgWw4Ney3Ug6hGL/APEBTBsnctJd20p/dWly&#xA;R2Y+oP1muBNNXd7Ha2skzJPCQpMfJm4l6fCDU9zir1T8t/Jw8uaOzzSGbUNR4T3jkUoeNVjHjxLN&#xA;v3rnQ6TT+HHzLz+r1HiS8gy3MpxGJ/mXC0vl0IoqfWHen+6pBvmB2j/dj3/rc/s4/vD7v1PObG3H&#xA;1KBgIUVo0IqTXdQe+2aWnckq2y/8fCL/AKij+GKqbPCftSySfLb9eBXLHy/u7dm92Jp+FMVVFtLk&#xA;9kjHyBP374aW1xtYB/fT8j4VA/rjSLXLJp0X2aE+NCf147Luu/SMHRVY/ID+uNrwti+B6RP92NrS&#xA;H0FhdeYbCPgwMurJJuBT/R0r38PRy/TC8kfe06nbHL3My/MlNNNxYtdlOQSTjzNNqr2rmZ2lVxcT&#xA;s26lTCJJvLcW7mIfQW/VXNZs7L1Kf+ItFg2gikb/AIxQkfiQoxsLwlo+ZpHNLfTbmX5hV/i2NrwL&#xA;l1jW3+zo7D/XmC/8a42vCO9eL3zGRX9HRL85qn7qY2ih3r11HVlA9TT9+5SSv4ccbTwjvabW5V2k&#xA;s5EPvX+gx4k8Cj+l7djV1dT3JH9MjaeFGaPc283mTQvTcMRfJt3p6b9jmRpP72PvcfVD93L3Pas6&#xA;N512KuxV5T5+8i+ctT8zy3WjqrWE6RsS7xqqyAcWHFqt+zXp3zU6rRzlkJiNi7fS6yEMYEuYY7c6&#xA;b5u8uWwXWLRIoXbhBeIyGMtv8LFDsTT4eQGYWXTTxiyHNxajHkOxQ8mnialxqk5kXqkRPwD6Bscx&#xA;2/3LfryxsIdNsg7fzmiqPuq2K13qlzf3FrD6l5cQwNSojUcmPsqk74o2TfyR+Xdx5maLzBr0jLp7&#xA;NytLLvIin9r+VDTsKt7ZstJouIcUuTr9XreD0x5vZ83LpXYqxf8AMVYW0FFmJCmdQKeJR8wO0f7v&#xA;4ud2f/efB5hp72v6MtnFvJLJ6MZKr3PEdKkZpXdG1xu7kf3OjSt7u0Y/42OK/Fr6x5jb+7s7a1X+&#xA;aSSv4KMV2WGHWJP96NVSIHqtug/WeWK7dzks7VTylvLm4I8WI/DYYEokNagEpA8h7AmlfuxRuomb&#xA;WCf9H06CPwaR2b9SL+vCvxa9XzN3NpEPBVZv1vja0FWKfXBQStbsvcqjKfxcj8MbWgjvICmbzNpR&#xA;cbiW8uRuN6pKv4eqMy9CLyhxdcaxH4Mo/MTT7a5v7N5lL8YmCrUgfa9sv7SHqHucfs6VRPvYyljZ&#xA;J9mBB78QT95zXU7CyqqiL9lQvyFMULsVaJA6mmKrGnjHevyxtNKEt4ADVgg8SQMFshFCPqNgn2rm&#xA;MePxj+uRTS1dSsn/ALuT1P8AUBb9QxTSto7RP5p0JlhZG+up+8ZeNR6b7ZkaT+9i0ar+6l7ntudG&#xA;847FXYq7FUJq2lWGrafNp9/EJrW4XjIh26GoII6EEVByE4CQo8mcJmJsc3m93+RVurs2ma1PbKdw&#xA;ksYkPyLI0X6s18uzR0LsY9pnrFDD8jtWb4X8wngftfunP4GQZD+TD/O+xn/KY/m/amej/kb5etZU&#xA;l1G7m1ArQ+kAIY2/1gpZ/ubLodnQHM205O0pnkKejwwxQxJDCgjijUJHGooqqooAAOwGZ4FOvJvd&#xA;dhQ7FWMfmI4j8veqaBI54yzMQAK1UVJ92AzB7QH7v4ud2ef3nweVWU+qQW0UMRt3jiUIreqRsooO&#xA;iPmjd2QFUza027LGQf5Jj/1TXG1oOH1rq9srH3n/AOveKt/WXT/jxjP/AD2J/wCNMUU3+k7pfsWM&#xA;Y+Un/Ngw2vC2dV1Nvs2VP9mP6YLXhC03urv/AMeg/wBlJT9QOKaW+vq//LJH/wAjf7MVb+sat3tI&#xA;/wDkb/zbirIfyxtXXzFCsgAe10+UNQ/tPJCK9Onwtmw7NHrPucDtE+ge9MPzLgmk1e1Mc7xUtxsv&#xA;Q/G2PaX1j3I7N+g+9iRs5z9q8m+hqZrnYqZ0qI/bnuH+crD/AIiRitrhpNkOokJPcyyH/jbFbWSW&#xA;Olp/eHjTsZXH/G2K2UHPb+XOrqXPs0n9cU7qBttEBrFpU8te/CQj7yaYqirdY1IMOi8PBiIlPX3N&#xA;cUJgJ7kLvbH5BlxWlfSJpX8y6EHhaMfXkNSQR/dv4ZkaT+9i4+q/u5e57VnRvOuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KoTV9KstW02fTr1PUtbleMig0PWoIPiCKjITgJCjyZ45mBBHMMHk/Izye5qtxfR+yy&#xA;xf8AG0TZhns7H5uaO0sncEO/5D+Wix4X96F7AmIn7xGMj/JsO8sv5Tn3Br/lQ3lz/q4Xn/JL/mjH&#xA;+TYd5X+U59wUn/IXRSx4apchewKRk/ftg/k2PeU/ynLuDX/KhNI/6utx/wAAmP8AJse8r/Kcu4O/&#xA;5UJpH/V1uP8AgEx/k2PeV/lOXcHf8qE0j/q63H/AJj/Jse8r/Kcu4O/5UJpH/V1uP+ATH+TY95X+&#xA;U5dwbH5CaPUV1S4I7gIgx/k2PeV/lOXcGT+Tfy80vyrcXM9ncTTvcoqN63HYKSduIXrmTg0scRJB&#xA;5uNqNVLKACOSj+YfkrUfMcdm+mXgsru3ZhI7M6q8bCtDwBJKsNvmchq9L4tVzDPSaoYrvcFh6/kz&#xA;5s4jl5gUN3AaYj76jMP+TZd4cz+U4/zS3/ypnzX/ANTAPvm/rj/Jsu8I/lOP81o/kx5qIofMAI+c&#xA;39cf5Nl3hf5Tj/NWf8qS8yf9XyP7pf64/wAmS7wn+U49xXR/kn5i5fFr6qvcqJSfu5DCOzZd6D2n&#xA;H+arf8qT1z/qY2/5Fyf9VMP8mH+cj+Ux/Nd/ypPXP+pjb/kXJ/1Ux/kw/wA5f5TH813/ACpPXP8A&#xA;qY2/5Fyf9VMf5MP85f5TH81HeX/yh1HTNdstUn1kXS2kgkMRjarUBHUu1OuWYdAYSEr5NebtATiY&#xA;1zem5snWOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2Kv//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">raw</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmpMM:InstanceID>xmp.iid:5a87e705-9711-4cb1-b634-845a79146994</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:924c7173-d3b7-4d7d-981f-a6932ed81479</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>xmp.did:fb91388a-2ccb-4c8a-923a-d22023b25037</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:714d9dea-b4ed-5c42-bc8e-e150d517a6b2</stRef:instanceID>
            <stRef:documentID>xmp.did:9ee73d01-3b66-4a26-8a4f-01cafbc696ff</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:fb91388a-2ccb-4c8a-923a-d22023b25037</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9ee73d01-3b66-4a26-8a4f-01cafbc696ff</stEvt:instanceID>
                  <stEvt:when>2022-09-02T10:25:20+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 26.4 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:924c7173-d3b7-4d7d-981f-a6932ed81479</stEvt:instanceID>
                  <stEvt:when>2022-09-02T10:27:52+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 26.4 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:CreatorSubTool>Adobe Illustrator</illustrator:CreatorSubTool>
         <pdf:Producer>Adobe PDF library 16.07</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
500 500 li
500 0 li
cp
clp
500 0 mo
0 0 li
0 500 li
500 500 li
500 0 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
36.026 119.214 mo
45.0616 123.505 142.54 120.591 148.338 119.691 cv
154.136 118.79 158.668 117.757 160.346 112.619 cv
162.023 107.48 161.758 92.3818 161.052 90.5277 cv
160.346 88.6735 158.315 86.6869 158.315 86.6869 cv
158.315 86.6869 160.257 88.1437 160.876 83.6408 cv
161.494 79.1379 160.11 45.9486 159.993 41.9223 cv
159.875 37.8963 158.933 33.5523 155.254 33.9761 cv
151.575 34.3999 30.6695 48.3325 30.6695 48.3325 cv
30.6695 48.3325 31.0521 56.3583 31.4936 61.9738 cv
31.935 67.5892 29.7865 86.6603 30.5223 90.7925 cv
31.2581 94.9246 26.9905 114.923 36.026 119.214 cv
cp
.65098 .392157 .145098 rgb
f
153.609 33.3947 mo
147.994 33.3947 133.36 35.6255 126.919 35.6911 cv
126.919 35.6911 91.4747 36.6425 81.0694 35.1662 cv
70.6642 33.6899 35.3522 32.4105 32.5114 34.2477 cv
29.6706 36.0848 30.4303 55.5063 30.4303 55.5063 cv
30.4303 55.5063 36.5083 54.7845 41.0338 55.047 cv
45.5593 55.3095 53.0577 55.9 53.0577 55.9 cv
53.0577 55.9 40.7035 56.7529 37.6314 57.0482 cv
34.5594 57.3435 31.2231 58.0323 31.2231 58.0323 cv
31.2231 58.0323 31.4543 69.8756 31.2561 75.7151 cv
31.0579 81.5547 30.5625 88.5753 30.5625 88.5753 cv
30.5625 88.5753 34.2951 90.7733 41.8266 90.6093 cv
49.3581 90.4453 69.4419 91.8887 69.4419 91.8887 cv
69.4419 91.8887 52.0337 93.037 47.9707 93.0698 cv
43.9077 93.1026 31.1571 92.6105 31.1571 92.6105 cv
31.1571 92.6105 30.2321 104.618 31.091 109.375 cv
31.9498 114.132 33.9648 115.608 38.8537 116.198 cv
43.7425 116.789 102.21 117.872 113.739 117.15 cv
125.267 116.428 148.192 119.348 154.633 113.64 cv
161.075 107.931 159.489 91.7247 158.432 89.297 cv
157.375 86.8693 136.729 87.3943 136.729 87.3943 cv
136.729 87.3943 150.537 86.0163 153.114 85.7867 cv
155.69 85.5571 158.102 83.7855 158.102 83.7855 cv
158.102 83.7855 157.012 48.3217 157.342 42.1868 cv
157.672 36.052 159.225 33.3947 153.609 33.3947 cv
cp
.901961 .690196 .458824 rgb
f
158.101 83.7852 mo
158.101 83.7852 157.918 77.0608 157.776 71.8643 cv
149.874 75.2895 137.805 80.5202 97.6633 97.9223 cv
66.0718 111.618 43.2708 107.344 30.7346 102.335 cv
30.7085 105.02 30.7823 107.667 31.0905 109.375 cv
31.9494 114.132 33.9654 115.607 38.8542 116.198 cv
43.7431 116.788 102.21 117.872 113.738 117.15 cv
125.267 116.428 148.191 119.349 154.632 113.64 cv
161.074 107.932 159.489 91.7251 158.432 89.2973 cv
157.375 86.8697 136.729 87.3946 136.729 87.3946 cv
136.729 87.3946 150.537 86.0158 153.113 85.7862 cv
155.69 85.5566 158.101 83.7852 158.101 83.7852 cv
cp
.878431 .643137 .396078 rgb
f
100.007 117.379 mo
98.2698 111.714 92.9002 101.337 76.4714 98.2286 cv
70.7322 97.1426 64.9105 96.7616 59.3723 96.8121 cv
46.98 96.925 36.2147 99.1621 30.7697 100.524 cv
30.7132 102.76 30.7101 105.077 30.8357 107.009 cv
35.8004 105.337 45.7054 102.353 55.7746 101.437 cv
69.968 100.144 85.6184 104.77 92.7151 110.782 cv
95.682 113.296 96.0235 115.57 95.4323 117.374 cv
97.049 117.38 98.5194 117.38 100.007 117.379 cv
cp
.776471 .513726 .258824 rgb
f
158.387 106.678 mo
155.189 107.527 150.292 108.177 142.912 107.374 cv
128.115 105.763 114.13 103.497 108.198 100.2 cv
102.267 96.9038 96.7317 95.5186 96.7317 95.5186 cv
96.7317 95.5186 106.597 104.227 113.756 105.894 cv
119.754 107.291 147.842 109.33 157.216 109.985 cv
157.696 108.96 158.083 107.847 158.387 106.678 cv
cp
f
157.827 73.7437 mo
157.783 72.1707 157.77 71.6361 157.719 69.7242 cv
149.5 69.9752 136.364 70.3273 127.329 70.0977 cv
114.821 69.7799 86.713 77.4087 66.6994 82.5738 cv
54.5448 85.7107 40.2611 84.6251 30.8928 83.2901 cv
30.7567 85.6437 30.6751 86.8715 30.6277 87.563 cv
40.4476 88.0633 57.1834 87.8391 63.2263 86.5201 cv
71.114 84.7983 82.7394 84.6395 88.508 85.5401 cv
94.2766 86.4407 107.403 88.2946 118.852 94.2808 cv
130.301 100.267 136.305 97.4328 149.637 97.8301 cv
153.833 97.9552 156.96 98.2136 159.402 98.5025 cv
159.422 97.1576 159.383 95.8745 159.304 94.7042 cv
150.665 94.6673 138.414 94.4773 131.626 93.6187 cv
120.736 92.2413 117.557 86.2018 104.489 83.712 cv
91.4218 81.2221 78.1486 82.9443 78.1486 82.9443 cv
78.1486 82.9443 105.932 75.6863 118.146 74.0176 cv
127.011 72.8065 147.297 73.3527 157.827 73.7437 cv
cp
f
107.006 117.342 mo
108.712 117.319 110.208 117.288 111.462 117.247 cv
112.834 116.267 115.05 115.574 118.77 115.69 cv
122.517 115.806 126.621 116.446 130.482 117.231 cv
136.416 117.328 142.443 117.285 147.185 116.488 cv
142.159 115.251 134.865 113.834 126.283 113.387 cv
125.273 113.334 124.306 113.31 123.382 113.311 cv
114.4 113.318 109.426 115.672 107.006 117.342 cv
cp
f
121.06 50.2842 mo
128.051 48.8092 146.683 48.1476 157.296 47.8716 cv
157.287 46.3743 157.292 45.1716 157.307 44.1421 cv
144.362 45.1763 125.333 47.1767 121.06 50.2842 cv
cp
f
48.3039 108.011 mo
41.3727 108.557 36.3197 111.193 32.9113 113.798 cv
34.12 115.176 35.9416 115.821 38.6726 116.17 cv
39.1692 115.722 39.6596 115.293 40.1242 114.922 cv
43.2459 112.431 48.8861 111.008 62.6008 112.338 cv
70.2788 113.082 73.2641 115.224 74.4983 117.175 cv
76.8341 117.21 79.1467 117.234 81.4738 117.261 cv
75.6542 111.913 62.7364 107.701 51.0564 107.883 cv
50.1296 107.898 49.2105 107.939 48.3039 108.011 cv
cp
f
30.3552 52.1313 mo
35.5361 52.2425 44.0216 52.5987 51.9836 53.9141 cv
64.1684 55.9272 65.9045 60.5359 89.7736 59.1055 cv
82.4746 61.7543 63.668 68.1636 49.7468 69.2496 cv
42.145 69.8426 35.6939 69.5409 31.3308 69.147 cv
31.3315 70.6973 31.3133 72.0399 31.2912 73.4127 cv
38.0831 72.9787 49.4211 72.2273 57.0168 71.4483 cv
67.3473 70.3888 89.0974 61.4095 101.135 59.5289 cv
113.172 57.6482 144.723 56.0068 151.786 55.8213 cv
153.536 55.7753 155.478 55.7945 157.411 55.8492 cv
157.394 54.8948 157.368 53.8552 157.354 52.9517 cv
149.594 53.314 136.289 53.98 124.092 55.0523 cv
107.522 56.5091 75.0576 58.31 56.5451 52.2178 cv
47.2888 49.1717 39.0769 48.2516 33.1794 48.0928 cv
32.1317 48.0646 31.2541 48.0821 30.3596 48.0943 cv
30.3414 49.578 30.3402 50.9677 30.3552 52.1313 cv
cp
f
53.8967 40.1666 mo
44.6856 37.1116 36.3733 38.0599 30.8371 39.4853 cv
30.6775 40.7819 30.5803 42.2176 30.5046 43.6837 cv
40.1641 41.5087 55.1488 42.9743 61.99 46.8419 cv
70.1425 51.4507 87.6544 50.1 100.987 48.087 cv
114.319 46.0739 126.447 42.1271 137.513 41.0411 cv
144.827 40.3233 152.725 40.4566 157.463 40.6251 cv
157.57 39.4005 157.678 38.3508 157.738 37.4537 cv
148.852 37.7361 126.469 38.8097 114.437 42.8413 cv
99.3388 47.9005 70.349 45.6231 53.8967 40.1666 cv
cp
f
139.269 80.1656 mo
134.628 79.9313 130.051 79.0789 125.429 78.8179 cv
124.588 78.7703 117.872 78.348 112.953 78.4327 cv
110.002 78.4835 107.699 78.7167 107.699 79.3233 cv
107.699 80.0662 109.183 79.3963 109.925 79.4171 cv
112.756 79.4958 115.155 80.6401 117.896 81.046 cv
120.339 81.4078 122.856 81.1661 125.284 81.6275 cv
135.741 83.6143 145.648 83.6841 156.251 82.9942 cv
156.656 82.9678 157.328 82.9983 158.081 83.0279 cv
158.075 82.853 157.988 79.5706 157.956 78.4869 cv
151.798 79.6538 145.568 80.4833 139.269 80.1656 cv
cp
f
131.894 60.8809 mo
126.194 60.9336 120.523 61.2377 114.948 62.1933 cv
111.198 62.8363 107.597 64.3007 103.896 64.9663 cv
103.281 65.0769 105.146 64.9443 105.77 64.9092 cv
107.535 64.8099 109.231 64.8049 110.993 64.8902 cv
115.941 65.1296 120.871 64.4229 125.812 64.4229 cv
136.004 64.4229 146.195 64.5918 156.383 64.9283 cv
156.699 64.9387 157.128 64.9881 157.593 65.0499 cv
157.56 63.6533 157.543 62.3933 157.512 60.9922 cv
149.061 61.2888 140.445 60.8019 131.894 60.8809 cv
cp
f
31.1784 77.5171 mo
31.1298 78.684 31.0825 79.8072 31.0232 80.9405 cv
31.5804 80.8516 32.0817 80.7856 32.4309 80.7925 cv
47.622 81.0963 61.5636 78.4275 76.1345 74.1246 cv
81.0742 72.6658 85.9436 71.751 90.78 69.941 cv
92.4821 69.3039 94.482 68.928 96.2644 68.545 cv
96.357 68.5251 97.6778 67.5299 97.8069 67.4507 cv
96.4761 68.1741 84.6958 69.121 83.2932 69.4415 cv
66.1507 73.3583 48.8454 81.0716 31.1784 77.5171 cv
cp
f
97.0569 35.9361 mo
92.4975 37.3497 87.3711 38.4556 82.9328 38.4556 cv
76.1192 38.4556 72.5543 36.4316 69.2893 34.1313 cv
65.7599 33.9143 61.8975 33.7439 58.0261 33.607 cv
59.9143 34.1851 61.7728 34.8252 63.5368 35.6636 cv
65.5958 36.6422 67.3062 38.1741 69.4885 38.8863 cv
80.6937 42.5433 88.0571 41.2538 99.3537 38.4556 cv
102.467 37.6843 105.738 37.2375 108.695 35.9727 cv
104.839 35.9972 100.937 35.9856 97.0569 35.9361 cv
cp
f
98.3114 84.1398 mo
102.168 85.2828 105.811 87.0341 110.212 89.393 cv
110.212 89.3928 110.303 89.4416 110.302 89.4413 cv
115.02 91.979 118.235 93.8641 122.318 95.6605 cv
129.601 98.8731 135.162 98.9351 135.187 98.6282 cv
135.211 98.3213 129.928 97.7306 122.925 94.3468 cv
119.402 92.641 115.454 90.3045 111.098 87.9617 cv
111.098 87.9616 111.007 87.9128 111.007 87.9127 cv
106.597 85.5386 102.727 83.7786 98.7023 82.7321 cv
90.6969 80.6545 85.0571 82.6152 85.1234 82.9209 cv
85.1898 83.2266 90.7481 81.8935 98.3114 84.1398 cv
cp
.65098 .392157 .145098 rgb
f
93.2008 59.6509 mo
93.2225 59.6519 li
100.57 59.9955 106.268 59.7133 111.147 58.8946 cv
115.678 58.1342 118.353 57.1072 118.293 56.8833 cv
118.233 56.6595 115.48 57.2735 110.99 57.7205 cv
105.995 58.2178 100.745 58.3099 93.2996 57.9736 cv
93.2782 57.9726 li
86.3532 57.6533 80.0486 57.1653 75.4701 57.0681 cv
70.8869 56.9708 68.055 57.1819 68.0529 57.4131 cv
68.0511 57.6453 70.8716 57.8543 75.4054 58.2539 cv
78.7499 58.5486 87.4072 59.384 93.2008 59.6509 cv
cp
f
94.0519 108.542 mo
96.2282 110.882 97.4709 113.541 98.6453 115.192 cv
99.8271 116.853 100.728 117.611 100.849 117.507 cv
100.971 117.402 100.312 116.459 99.3937 114.729 cv
98.7891 113.59 97.0156 109.761 95.1676 107.559 cv
93.1364 105.176 90.3683 103.16 86.9018 101.703 cv
85.0265 100.916 83.1262 100.368 81.3147 100 cv
72.3417 98.162 65.6157 99.6663 65.649 100.051 cv
65.6489 100.051 li
65.6821 100.436 72.4043 99.6177 80.9714 101.583 cv
82.6881 101.981 84.4862 102.524 86.2503 103.259 cv
89.5175 104.622 92.1049 106.411 94.0519 108.542 cv
cp
f
188.129 60.9326 mo
189.169 67.8941 189.169 78.763 189.169 78.763 cv
210.921 80.0206 li
189.531 81.2332 li
189.531 81.2332 189.44 86.1737 190.209 91.8327 cv
190.978 97.4917 186.23 107.238 189.44 111.1 cv
192.651 114.963 241.944 112.044 244.114 112.268 cv
246.285 112.493 240.813 121.835 245.245 125.023 cv
249.677 128.212 295.261 93.2699 301.818 78.9427 cv
302.676 77.8339 302.869 75.3068 301.501 74.0521 cv
282.63 56.7357 245.381 31.4248 245.381 31.4248 cv
244.476 45.7969 li
244.476 45.7969 191.747 41.4853 189.124 47.6833 cv
189.124 47.6833 li
189.124 47.6833 187.089 53.9711 188.129 60.9326 cv
cp
f
245.245 120.388 mo
249.677 123.577 295.261 88.6345 301.818 74.3073 cv
279.071 42.4191 245.381 26.7893 245.381 26.7893 cv
244.476 41.1616 li
244.476 41.1616 191.747 36.8499 189.124 43.0479 cv
189.124 43.0479 li
189.124 43.0479 187.089 49.3357 188.129 56.2972 cv
189.169 63.2587 189.169 74.1276 189.169 74.1276 cv
210.921 75.3852 li
189.531 76.5978 li
189.531 76.5978 189.44 81.5383 190.209 87.1973 cv
190.978 92.8563 186.23 102.602 189.44 106.465 cv
192.651 110.328 241.944 107.408 244.114 107.633 cv
246.285 107.857 240.813 117.199 245.245 120.388 cv
cp
.901961 .690196 .458824 rgb
f
245.245 120.387 mo
249.677 123.576 295.261 88.6349 301.819 74.3077 cv
297.592 68.3831 292.988 63.0211 288.292 58.2149 cv
276.34 67.5253 254.978 82.723 233.782 90.5528 cv
213.167 98.1681 197.832 96.4381 189.549 94.2735 cv
188.612 99.0016 187.361 103.964 189.44 106.465 cv
192.651 110.328 241.943 107.408 244.114 107.633 cv
246.285 107.857 240.813 117.199 245.245 120.387 cv
cp
.878431 .643137 .396078 rgb
f
195.147 40.5826 mo
191.844 41.1036 189.612 41.893 189.124 43.0479 cv
189.124 43.0479 189.119 43.061 189.119 43.0611 cv
198.99 43.4371 210.303 44.0747 215.413 45.1529 cv
212.738 43.2073 204.276 41.6948 195.147 40.5826 cv
cp
.776471 .513726 .258824 rgb
f
280.698 96.3052 mo
281.046 96.3369 281.39 96.3889 281.737 96.4253 cv
283.365 95.0056 284.956 93.581 286.487 92.1627 cv
283.513 91.8923 280.37 91.7105 277.101 91.6807 cv
277.101 91.6793 li
271.562 91.6288 265.741 92.0098 260.002 93.0958 cv
247.312 95.497 241.234 102.23 238.318 107.782 cv
239.741 107.73 240.97 107.694 241.883 107.668 cv
242.337 107.016 242.94 106.344 243.758 105.651 cv
250.855 99.6387 266.505 95.0129 280.698 96.3052 cv
cp
f
187.874 50.8262 mo
197.899 51.2177 224.342 52.6798 235.337 54.3975 cv
247.374 56.2782 269.124 65.2573 279.455 66.317 cv
284.507 66.8352 290.844 67.3016 296.769 67.71 cv
295.861 66.5953 294.942 65.5062 294.014 64.4376 cv
291.736 64.411 289.304 64.3193 286.725 64.1182 cv
272.804 63.0322 253.997 56.623 246.698 53.9742 cv
266.867 55.1828 271.249 52.0841 279.469 49.8785 cv
278.699 49.2045 277.932 48.5466 277.168 47.9023 cv
258.335 53.002 228.157 51.3081 212.38 49.921 cv
204.053 49.1889 195.327 48.6575 188.084 48.2715 cv
187.988 49.0677 187.914 49.9146 187.874 50.8262 cv
cp
f
271.186 43.1065 mo
269.237 41.6102 267.328 40.191 265.501 38.9023 cv
258.699 39.9231 251.439 40.5033 244.517 40.5152 cv
244.476 41.1612 li
244.476 41.1612 232.549 40.1935 219.765 39.837 cv
224.827 40.9797 230.031 42.1319 235.486 42.9556 cv
247.231 44.7289 262.209 45.9821 271.186 43.1065 cv
cp
f
262.121 111.846 mo
262.832 110.816 264.075 109.758 266.23 108.882 cv
268.249 107.389 270.301 105.834 272.382 104.189 cv
265.16 105.841 258.668 108.758 254.999 112.13 cv
257.279 112.103 259.546 112.079 261.834 112.045 cv
261.931 111.977 262.024 111.914 262.121 111.846 cv
cp
f
295.873 82.6661 mo
297.015 81.3666 298.046 80.1141 298.933 78.9307 cv
290.168 79.7538 279.33 79.9088 269.774 77.4423 cv
249.76 72.2773 221.652 64.6485 209.144 64.9663 cv
203.28 65.1153 195.76 65.0123 188.907 64.858 cv
188.972 66.0906 189.014 67.2003 189.05 68.2989 cv
199.43 68.0568 211.884 68.006 218.327 68.8863 cv
230.541 70.555 258.324 77.813 258.324 77.813 cv
258.324 77.813 245.051 76.0908 231.984 78.5806 cv
218.916 81.0705 215.737 87.11 204.847 88.4873 cv
201.129 88.9576 195.772 89.2153 190.268 89.3692 cv
190.212 90.405 190.048 91.5203 189.847 92.6636 cv
201.135 92.6983 207.075 94.6633 217.621 89.1495 cv
229.07 83.1632 242.196 81.3093 247.965 80.4088 cv
253.734 79.5082 265.359 79.667 273.247 81.3887 cv
277.521 82.3218 287.13 82.6976 295.873 82.6661 cv
cp
f
207.065 108.465 mo
210.396 108.494 213.922 108.468 217.455 108.406 cv
216.107 108.274 214.683 108.181 213.091 108.179 cv
212.166 108.179 211.2 108.203 210.19 108.255 cv
209.128 108.311 208.086 108.382 207.065 108.465 cv
cp
f
239.741 90.3873 mo
239.741 90.3873 234.206 91.7725 228.275 95.0689 cv
222.343 98.3653 208.358 100.632 193.561 102.242 cv
191.647 102.451 189.908 102.556 188.315 102.591 cv
188.321 103.156 188.38 103.683 188.472 104.185 cv
200.652 103.272 218.115 101.834 222.717 100.763 cv
229.876 99.0958 239.741 90.3873 239.741 90.3873 cv
cp
f
189.789 83.2725 mo
189.871 84.294 189.986 85.3913 190.127 86.5201 cv
194.814 86.1196 200.271 85.5352 203.689 84.7696 cv
210.664 83.2068 215.196 77.3002 224.614 73.1417 cv
223.955 73.0821 223.314 73.0623 222.689 73.0772 cv
213.312 73.3011 207.461 81.4221 198.273 82.8623 cv
195.125 83.3559 192.249 83.4161 189.789 83.2725 cv
cp
f
301.819 74.3077 mo
301.378 73.6902 300.927 73.0892 300.478 72.4839 cv
297.135 73.203 292.518 73.7933 286.862 73.4859 cv
274.678 72.8237 252.281 63.5525 228.559 58.7847 cv
215.215 56.1028 202.588 55.584 194.094 55.6426 cv
191.676 55.6593 189.737 55.7255 188.068 55.7993 cv
188.089 55.9657 188.104 56.1303 188.129 56.2973 cv
188.308 57.4967 188.447 58.825 188.57 60.1807 cv
197.556 59.4531 212.703 58.602 221.465 60.2686 cv
234.414 62.732 259.932 70.6791 273.912 74.2549 cv
283.835 76.7931 295.115 76.4456 300.891 76.0318 cv
301.248 75.4325 301.57 74.8509 301.819 74.3077 cv
cp
f
256.93 86.4922 mo
246.923 87.7372 244.156 89.8292 244.156 89.8292 cv
244.156 89.8292 275.407 87.7208 289.858 88.9371 cv
290.854 87.9626 291.849 86.9911 292.761 86.044 cv
288.746 85.9472 283.535 85.8472 277.485 85.8301 cv
269.511 85.8076 261.308 85.9476 256.93 86.4922 cv
cp
f
230.015 81.0869 mo
233.216 80.1185 236.688 79.4873 240.601 79.1359 cv
243.27 78.8963 245.91 78.8075 248.356 78.7783 cv
259.198 78.66 267.065 79.9872 267.132 79.6151 cv
267.199 79.243 259.357 77.2628 248.354 77.1716 cv
245.872 77.1485 243.191 77.2115 240.45 77.4601 cv
236.446 77.8233 232.842 78.5357 229.551 79.6266 cv
225.497 80.9823 221.233 83.3869 219.216 84.505 cv
216.788 85.8508 215.381 86.6373 215.45 86.7933 cv
215.518 86.9492 217.071 86.4456 219.625 85.3339 cv
221.521 84.5085 226.366 82.1796 230.015 81.0869 cv
cp
.65098 .392157 .145098 rgb
f
218.01 59.2459 mo
218.01 59.2458 li
218.01 59.2458 li
218.01 59.2459 li
cp
f
237.918 63.4683 mo
237.932 63.4728 li
244.034 65.3763 247.521 66.5731 251.904 67.5472 cv
255.555 68.3586 257.88 68.5066 257.92 68.2782 cv
257.959 68.0499 255.733 67.4946 252.208 66.401 cv
247.623 64.9743 243.017 63.2953 238.432 61.8687 cv
238.417 61.8643 li
232.668 60.0653 228.123 59.1342 224.067 58.8683 cv
220.318 58.6225 218.001 59.0141 218.01 59.2458 cv
218.02 59.4776 220.318 59.5057 223.941 60.0453 cv
228.022 60.6532 232.066 61.6545 237.918 63.4683 cv
cp
f
459.16 51.3242 mo
458.666 27.4139 li
458.666 27.4139 457.387 22.5006 455.816 22.5867 cv
439.434 23.4845 345.281 33.6421 323.041 35.1891 cv
322.409 68.126 li
325.015 73.0716 li
325.015 73.0716 349.759 77.0469 362.655 74.9423 cv
345.131 81.4313 326.743 79.2099 326.743 79.2099 cv
323.071 114.03 li
325.632 118.905 li
325.632 118.905 362.038 119.314 383.819 119.197 cv
405.601 119.08 466.256 117.677 466.256 117.677 cv
464.836 94.3512 li
462.524 90.0535 li
462.307 89.9082 li
460.641 57.7549 li
460.641 57.7549 458.787 53.184 457.623 53.0552 cv
450.606 52.2791 427.292 54.0302 429.727 53.7796 cv
432.565 53.4873 459.16 51.3242 459.16 51.3242 cv
cp
f
456.393 46.318 mo
455.899 22.4077 li
455.899 22.4077 344.647 28.4875 320.274 30.1829 cv
322.249 68.0653 li
322.249 68.0653 346.992 72.0407 359.888 69.9361 cv
342.364 76.4252 323.976 74.2037 323.976 74.2037 cv
322.866 113.898 li
322.866 113.898 359.271 114.308 381.053 114.191 cv
402.834 114.074 463.489 112.671 463.489 112.671 cv
462.07 89.345 li
428.626 89.345 li
459.54 84.902 li
457.874 52.7487 li
457.874 52.7487 424.122 49.0656 426.96 48.7733 cv
429.799 48.4811 456.393 46.318 456.393 46.318 cv
cp
.901961 .690196 .458824 rgb
f
458.498 64.795 mo
422.901 88.6768 354.252 90.4713 323.535 89.9639 cv
322.865 113.898 li
322.865 113.898 359.27 114.308 381.052 114.191 cv
402.833 114.074 463.489 112.671 463.489 112.671 cv
462.069 89.3443 li
428.626 89.3443 li
459.54 84.9013 li
458.498 64.795 li
cp
.878431 .643137 .396078 rgb
f
375.781 53.0821 mo
377.698 53.1411 385.166 53.9207 386.066 50.7266 cv
386.827 48.026 380.725 47.7215 377.295 47.7545 cv
376.151 47.7653 375.304 47.8136 375.108 47.8233 cv
361.118 48.5046 346.836 48.5037 332.926 50.1817 cv
331.61 50.3405 325.606 52.2162 321.484 53.3956 cv
321.913 61.6382 li
325.793 60.5239 330.688 59.3352 331.025 59.2623 cv
345.923 56.0353 360.438 52.6098 375.781 53.0821 cv
cp
.776471 .513726 .258824 rgb
f
459.361 81.4443 mo
459.131 77.0147 li
452.843 75.3833 446.77 72.224 440.467 70.4947 cv
431.02 67.9023 420.34 66.42 410.161 66.3726 cv
406.768 66.3568 403.431 66.5013 400.214 66.8165 cv
377.165 69.0738 359.765 78.8893 335.683 77.0059 cv
333.752 76.8549 326.065 78.8237 325.118 77.9742 cv
324.796 77.6849 325.786 76.0823 325.865 75.9 cv
326.124 75.3109 326.3 74.8543 326.475 74.4043 cv
324.965 74.3076 323.976 74.2037 323.976 74.2037 cv
322.865 113.898 li
322.865 113.898 359.27 114.308 381.052 114.191 cv
402.833 114.074 463.489 112.671 463.489 112.671 cv
462.751 100.537 li
454.392 99.986 445.315 101.935 437.368 104.053 cv
428.014 106.546 418.661 112.047 408.856 111.962 cv
390.047 111.798 371.765 102.967 352.911 102.951 cv
350.205 102.949 331.334 108.909 331.203 108.619 cv
331.017 108.205 332.169 107.118 332.359 106.88 cv
337.75 100.16 345.341 96.7583 353.482 96.4078 cv
370.213 95.6872 385.022 101.084 401.264 100.71 cv
411.224 100.481 422.05 99.0842 431.822 97.2545 cv
436.271 96.4213 440.336 94.3516 444.866 94.0772 cv
450.588 93.7306 456.583 93.246 462.351 93.9542 cv
462.185 91.2545 li
450.376 90.2048 438.438 91.0356 426.79 93.0796 cv
421.478 94.0118 416.163 95.6915 410.806 96.2056 cv
383.102 98.8643 353.357 84.7875 327.576 99.8736 cv
326.446 100.535 328.379 97.1462 328.681 95.7501 cv
329.28 92.9769 329.626 90.4758 329.74 87.6392 cv
329.785 86.5086 328.721 84.624 329.664 84.2408 cv
339.525 80.2303 351.304 81.4862 361.616 79.3277 cv
368.959 77.7908 375.959 74.9405 383.24 73.3731 cv
399.767 69.8153 416.399 70.2793 433.001 73.0069 cv
442.08 74.4985 450.603 78.4443 459.361 81.4443 cv
cp
f
427.162 77.876 mo
427.14 77.5061 424.378 76.5277 424.197 76.3878 cv
419.051 75.5827 413.83 75.1066 408.617 75.1031 cv
406.88 75.1019 405.143 75.1535 403.411 75.2628 cv
398.023 75.6028 392.677 76.5032 387.469 78.1221 cv
386.369 78.4643 378.62 80.0289 379.051 82.001 cv
379.581 84.4299 386.356 83.0461 387.727 82.9473 cv
398.901 82.1428 410.12 84.1786 421.231 81.7696 cv
422.313 81.535 427.302 80.1755 427.162 77.876 cv
cp
f
425.333 61.9576 mo
420.132 60.1821 415.52 59.437 411.447 59.419 cv
406.832 59.3986 402.909 60.3116 399.61 61.7188 cv
417.151 61.6393 425.333 61.9576 425.333 61.9576 cv
cp
f
373.652 87.8882 mo
388.309 94.6161 395.047 94.7229 412.206 89.6373 cv
394.282 92.8953 373.652 87.8882 373.652 87.8882 cv
cp
f
445.909 45.2027 mo
444.726 45.1077 440.526 44.0503 437.359 44.1113 cv
435.459 44.148 433.931 44.5872 433.65 45.8795 cv
433.467 46.7195 433.983 47.4617 434.763 48.1133 cv
443.426 47.3826 456.393 46.3173 456.393 46.3173 cv
456.367 45.0547 li
451.457 45.2093 447.278 45.3126 445.909 45.2027 cv
cp
f
454.363 61.1153 mo
438.636 57.1538 426.457 53.1423 412.81 52.9473 cv
411.9 52.9343 410.983 52.9383 410.059 52.9605 cv
403.336 53.121 396.189 54.2395 388.047 56.7559 cv
378.413 59.7331 368.954 64.5433 358.87 65.4263 cv
348.912 66.2983 334.183 63.0843 324.245 68.3546 cv
326.7 68.721 332.26 69.4813 339.506 70.0479 cv
353.753 68.8866 367.879 69.8779 381.686 64.2076 cv
393.197 59.4807 405.819 54.0983 418.405 55.899 cv
432.185 57.8703 445.066 66.1656 458.538 69.8253 cv
458.612 69.8455 458.687 69.8598 458.762 69.8795 cv
458.361 62.1509 li
457.027 61.8 455.69 61.4496 454.363 61.1153 cv
cp
f
449.413 35.8951 mo
409.135 36.9872 368.641 40.4532 328.55 42.5001 cv
327.03 39.6689 325.053 34.7897 323.191 29.9962 cv
322.362 30.0512 320.967 30.134 320.274 30.1822 cv
321.25 48.9013 li
322.557 48.514 324.045 48.2611 325.493 47.8848 cv
343.531 43.1986 362.338 45.9005 380.652 43.4302 cv
386.889 42.5889 392.964 42.8799 399.216 42.3726 cv
415.709 41.0342 432.13 38.9816 448.713 38.7515 cv
449.574 38.7396 452.695 38.8392 456.241 38.9566 cv
456.166 35.2872 li
453.043 35.6082 450.413 35.868 449.413 35.8951 cv
cp
f
440.277 50.7353 mo
440.282 50.7372 440.299 50.7425 440.303 50.7442 cv
443.085 51.7173 450.558 52.7283 457.909 53.4263 cv
457.874 52.7481 li
457.874 52.7481 448.704 51.7421 440.277 50.7353 cv
cp
f
334.354 35.1905 mo
456.02 28.2076 li
455.965 25.6163 li
334.354 35.1905 li
cp
f
369.69 66.6101 mo
372.567 66.138 375.876 65.1027 380.336 63.0363 cv
383.913 61.3905 389.496 58.416 394.255 57.0089 cv
396.21 56.4236 398.237 55.9527 400.337 55.6022 cv
410.177 53.9597 419.473 55.3262 425.959 56.7682 cv
432.493 58.2209 436.403 59.6649 436.486 59.4482 cv
436.568 59.2315 432.802 57.3793 426.245 55.6067 cv
419.728 53.8447 410.253 52.263 400.063 53.957 cv
397.894 54.3176 395.798 54.8093 393.776 55.4243 cv
388.701 56.9866 383.284 60.0333 379.746 61.8103 cv
375.345 64.0067 372.355 65.133 369.532 65.8548 cv
366.996 66.5033 365.49 66.6191 365.496 66.7589 cv
365.496 66.7589 li
365.502 66.8986 367.037 67.0455 369.69 66.6101 cv
cp
.65098 .392157 .145098 rgb
f
432.109 68.8631 mo
436.871 69.3807 439.819 69.8987 439.87 69.6725 cv
439.921 69.4463 437.049 68.5159 432.274 67.6915 cv
427.291 66.8311 421.027 66.248 413.394 66.3436 cv
398.563 66.5296 386.659 68.815 386.717 69.2752 cv
386.774 69.7353 398.744 68.2183 413.416 68.0246 cv
421.073 67.9235 427.031 68.3111 432.109 68.8631 cv
cp
f
419.335 96.7123 mo
424.496 95.3168 427.503 93.8343 427.421 93.6175 cv
427.339 93.4006 424.206 94.4827 419.06 95.5669 cv
413.652 96.7061 406.983 97.5822 398.618 97.4851 cv
390.519 97.391 383.158 96.4057 377.863 95.5746 cv
372.566 94.7433 369.318 94.1073 369.263 94.3327 cv
369.154 94.7833 382.155 98.9953 398.599 99.1663 cv
407.053 99.2543 413.967 98.1643 419.335 96.7123 cv
cp
f
365.689 108.178 mo
365.695 108.179 li
370.543 108.48 374.057 108.975 377.25 109.636 cv
380.166 110.24 381.952 110.785 382.037 110.57 cv
382.122 110.354 380.466 109.408 377.55 108.489 cv
374.471 107.519 370.617 106.791 365.798 106.502 cv
365.792 106.501 li
361.323 106.23 356.805 106.376 353.957 106.53 cv
350.939 106.693 349.074 106.895 349.073 107.126 cv
349.072 107.358 350.942 107.577 353.961 107.718 cv
356.979 107.859 361.138 107.899 365.689 108.178 cv
cp
f
453.448 102.872 mo
456.515 102.266 458.456 101.981 458.442 101.749 cv
458.427 101.518 456.442 101.387 453.275 101.702 cv
449.956 102.033 445.923 102.806 441.114 104.249 cv
431.794 107.045 424.64 110.426 424.801 110.861 cv
424.801 110.861 li
424.963 111.296 432.41 108.627 441.598 105.859 cv
446.48 104.388 450.088 103.535 453.448 102.872 cv
cp
f
398.138 40.8126 mo
398.174 40.8093 li
408.832 39.8669 415.874 39.4132 423.178 39.2375 cv
429.582 39.0833 433.556 39.2045 433.572 38.9731 cv
433.587 38.7418 429.624 38.2007 423.177 38.0503 cv
416.21 37.888 408.328 38.2215 398.026 39.1358 cv
397.989 39.139 li
388.219 40.005 379.412 41.0179 373.03 41.6552 cv
366.648 42.2925 362.691 42.6353 362.7 42.8668 cv
362.71 43.0983 366.696 43.1743 373.12 42.8389 cv
380.788 42.4385 387.153 41.7865 398.138 40.8126 cv
cp
f
68.2852 234.81 mo
96.9517 248.197 129.268 241.182 152.048 217.213 cv
174.828 193.244 171.767 155.362 122.969 146.476 cv
102.132 141.156 74.2893 142.617 58.0429 150.919 cv
41.7966 159.22 27.1985 170.795 30.9068 190.38 cv
34.6152 209.964 39.6186 221.422 68.2852 234.81 cv
cp
f
68.0792 229.83 mo
96.7458 243.217 129.062 236.202 151.842 212.233 cv
174.622 188.264 171.561 150.382 122.763 141.496 cv
101.926 136.176 74.0833 137.638 57.8369 145.939 cv
41.5906 154.24 26.9925 165.816 30.7008 185.4 cv
34.4092 204.984 39.4126 216.442 68.0792 229.83 cv
cp
.901961 .690196 .458824 rgb
f
151.842 212.233 mo
166.523 196.786 170.445 175.57 158.336 160.051 cv
151.951 172.756 137.913 191.383 107.075 207.198 cv
81.5281 220.3 59.7229 219.125 44.0573 214.484 cv
49.364 219.702 56.9247 224.621 68.0793 229.83 cv
96.7458 243.218 129.062 236.202 151.842 212.233 cv
cp
.878431 .643137 .396078 rgb
f
30.3098 182.686 mo
34.7811 182.246 39.2539 182.179 43.6721 181.086 cv
56.4246 177.931 68.6176 170.78 81.6613 169.08 cv
93.5757 167.528 105.525 172.168 116.421 176.243 cv
131.221 181.779 146.406 179.946 161.709 181.788 cv
163.465 181.999 164.642 182.068 165.493 182.123 cv
165.539 180.751 165.498 179.385 165.387 178.027 cv
156.561 176.156 145.766 177.911 138.018 177.294 cv
128.473 176.532 119.519 172.385 110.4 169.818 cv
102.692 167.649 95.9266 166.686 89.5627 166.547 cv
88.6876 166.528 87.8195 166.524 86.9582 166.536 cv
74.0392 166.704 62.5111 170.162 47.6242 173.577 cv
42.9802 174.643 38.2914 175.93 33.5837 176.524 cv
32.5916 176.65 30.9839 177.932 30.1574 178.074 cv
30.0879 179.557 30.1394 181.095 30.3098 182.686 cv
cp
.776471 .513726 .258824 rgb
f
32.7854 167.662 mo
40.9983 167.428 56.6942 165.988 60.9338 164.637 cv
62.0858 164.27 85.8028 163.107 85.2575 160.826 cv
84.9912 159.712 65.5185 158.95 63.7199 158.919 cv
60.7224 158.866 56.7468 159.779 55.6267 159.86 cv
53.6957 160.002 46.1877 159.752 38.4953 159.515 cv
36.1712 161.995 34.2137 164.694 32.7854 167.662 cv
cp
f
100.591 160.732 mo
97.614 160.715 95.5984 160.954 95.8235 161.681 cv
96.6754 164.435 120.196 166.704 122.01 166.653 cv
136.521 166.246 150.248 169.194 164.337 171.973 cv
163.596 169.23 162.51 166.558 161.029 164.003 cv
148.351 162.718 135.373 162.684 122.648 162.119 cv
122.462 162.111 121.66 162.069 120.578 162.059 cv
118.345 162.04 107.142 160.768 100.591 160.732 cv
cp
f
48.2058 151.509 mo
46.7427 152.478 45.326 153.485 43.9768 154.54 cv
47.7989 154.424 52.0729 154.287 52.9724 154.298 cv
68.6698 154.497 84.2146 156.265 99.8269 157.419 cv
105.745 157.856 111.495 157.606 117.399 158.331 cv
131.029 160.005 144.946 158.934 158.571 160.358 cv
157.689 159.202 156.744 158.068 155.683 156.978 cv
121.345 155.197 86.7462 152.685 52.3103 151.835 cv
51.6604 151.818 49.9331 151.664 48.2058 151.509 cv
cp
f
131.977 143.68 mo
130.224 143.163 128.394 142.69 126.49 142.265 cv
121.585 144.658 114.983 146.654 106.978 146.215 cv
92.7256 145.435 81.8837 144.413 75.865 140.166 cv
72.5908 140.776 69.4736 141.561 66.528 142.483 cv
70.7163 144.604 78.4464 146.852 92.7048 148.282 cv
110.09 150.026 123.267 147.015 131.977 143.68 cv
cp
f
151.842 212.233 mo
152.047 212.017 152.234 211.792 152.435 211.574 cv
148.487 210.563 144.717 209.644 143.659 209.645 cv
125.812 209.658 108.506 217.272 90.7009 217.413 cv
81.4191 217.486 72.5671 212.743 63.7126 210.594 cv
56.6429 208.878 48.6204 207.264 41.113 207.471 cv
40.2074 207.496 39.3145 207.563 38.4265 207.644 cv
39.1406 208.743 39.9347 209.818 40.7951 210.88 cv
45.446 210.425 51.7808 210.786 58.8435 213.951 cv
73.3239 220.441 91.9552 223.779 110.085 219.62 cv
124.038 216.42 141.439 215.491 148.839 215.227 cv
149.856 214.258 150.86 213.266 151.842 212.233 cv
cp
f
78.9865 191.384 mo
89.5041 193.461 100.125 191.705 110.702 192.399 cv
112 192.484 118.413 193.677 118.915 191.583 cv
119.323 189.883 111.988 188.534 110.946 188.239 cv
106.017 186.843 100.956 186.067 95.8557 185.773 cv
94.2161 185.679 92.5727 185.635 90.9279 185.636 cv
85.9938 185.639 81.05 186.051 76.1784 186.745 cv
76.0078 186.865 73.393 187.709 73.3718 188.028 cv
73.24 190.01 77.9622 191.182 78.9865 191.384 cv
cp
f
158.712 203.337 mo
136.513 196.694 111.937 205.845 88.8552 203.828 cv
83.7844 203.384 78.7517 201.938 73.7234 201.134 cv
66.5531 199.988 59.2668 199.276 51.9734 199.168 cv
50.8794 199.152 49.7846 199.149 48.6906 199.161 cv
45.4088 199.195 42.1297 199.356 38.8615 199.66 cv
37.9709 199.743 36.3387 199.855 34.6194 200.11 cv
34.9886 201.056 35.3882 201.986 35.8161 202.896 cv
36.4737 202.584 37.1136 202.323 37.7131 202.219 cv
43.8791 201.153 50.4162 201.652 56.614 201.994 cv
60.9021 202.23 64.75 204.015 68.9611 204.733 cv
78.2113 206.31 88.4587 207.515 97.8874 207.712 cv
113.262 208.034 127.281 203.382 143.119 204.003 cv
147.691 204.183 152.067 205.312 155.946 207.392 cv
156.946 206.069 157.861 204.713 158.712 203.337 cv
cp
f
164.85 187.851 mo
162.842 187.55 160.814 187.218 159.967 187.278 cv
137.171 188.902 120.7 180.438 98.882 178.492 cv
95.8362 178.22 92.6779 178.096 89.466 178.109 cv
79.8303 178.15 69.7199 179.428 60.7771 181.663 cv
54.6225 183.201 48.7008 186.064 42.5471 187.426 cv
38.7852 188.258 35.1203 188.814 31.4055 188.92 cv
31.7544 190.564 32.1363 192.134 32.5422 193.667 cv
44.6689 191.687 55.7326 185.642 67.8464 183.83 cv
83.5619 181.478 99.3042 181.077 114.948 184.145 cv
121.841 185.496 128.467 187.952 135.418 189.277 cv
144.469 191.003 154.711 190.205 163.596 192.834 cv
164.123 191.182 164.538 189.518 164.85 187.851 cv
cp
f
78.2688 222.692 mo
65.8627 219.652 55.2633 218.532 48.2146 218.111 cv
49.615 219.219 51.1334 220.319 52.7849 221.417 cv
72.2695 225.315 91.1702 228.071 111.171 227.623 cv
119.209 227.442 127.146 225.863 135.2 225.768 cv
136.295 225.097 137.375 224.385 138.447 223.653 cv
134.678 223.361 129.926 223.072 124.682 222.957 cv
112.615 222.692 100.431 228.122 78.2688 222.692 cv
cp
f
63.9405 173.105 mo
70.1917 171.45 74.8094 170.555 79.0967 169.965 cv
83.0141 169.427 85.4931 169.283 85.4931 169.051 cv
85.4931 168.819 82.9925 168.546 78.9805 168.791 cv
74.7363 169.051 69.6935 169.85 63.511 171.478 cv
57.8093 172.98 52.013 174.971 48.4709 176.241 cv
44.6753 177.602 42.3672 178.523 42.4344 178.745 cv
42.5017 178.967 44.9405 178.448 48.8307 177.38 cv
52.7208 176.311 58.0533 174.663 63.9405 173.105 cv
cp
.65098 .392157 .145098 rgb
f
100.778 181.57 mo
115.224 182.704 126.587 186.18 126.727 185.738 cv
126.875 185.273 115.679 181.056 100.91 179.895 cv
86.1329 178.733 74.4 181.051 74.4562 181.473 cv
74.4561 181.473 li
74.5174 181.933 86.3322 180.436 100.778 181.57 cv
cp
f
75.0811 203.607 mo
79.9703 204.632 87.1614 205.931 94.8437 206.564 cv
95.0697 206.582 li
103.298 207.258 109.535 207.099 115.002 206.086 cv
120.011 205.158 122.889 203.782 122.813 203.564 cv
122.736 203.346 119.764 204.314 114.822 204.922 cv
109.29 205.601 103.507 205.566 95.2048 204.908 cv
95.2049 204.908 94.9814 204.889 94.9814 204.889 cv
87.4981 204.275 80.1114 203.151 75.29 202.438 cv
70.2486 201.691 67.1131 201.271 67.0688 201.498 cv
67.0689 201.498 li
67.0246 201.726 70.0771 202.559 75.0811 203.607 cv
cp
f
174.933 174.012 mo
171.518 178.939 175.309 197.898 177.428 206.533 cv
179.547 215.169 189.663 209.757 193.783 212.618 cv
197.904 215.479 193.666 223.054 201.024 227.981 cv
208.382 232.908 277.723 234.762 284.963 233.49 cv
292.203 232.219 290.967 224.167 298.796 219.346 cv
306.625 214.525 314.277 215.743 316.278 208.486 cv
318.28 201.228 318.103 189.574 314.689 183.322 cv
311.275 177.071 319.294 171.115 313.956 162.584 cv
310.13 156.47 279.371 159.642 274.014 156.887 cv
268.658 154.133 269.129 148.782 261.771 144.756 cv
254.413 140.73 214.368 139.96 201.477 141.019 cv
188.586 142.079 192.312 148.517 192.9 155.351 cv
192.9 155.351 li
193.666 158.689 191.252 163.615 189.84 167.165 cv
188.427 170.714 178.347 169.085 174.933 174.012 cv
cp
f
175.536 172.436 mo
172.122 177.363 176.713 192.408 178.832 201.043 cv
180.951 209.678 189.84 205.175 193.96 208.035 cv
198.08 210.896 193.842 218.472 201.2 223.398 cv
208.558 228.325 277.899 230.179 285.14 228.908 cv
292.38 227.636 291.144 219.584 298.972 214.763 cv
306.801 209.943 314.454 211.161 316.455 203.903 cv
318.456 196.646 318.28 184.991 314.866 178.74 cv
311.452 172.489 317.515 167.403 313.571 161.364 cv
309.627 155.325 279.548 155.06 274.191 152.305 cv
268.834 149.55 269.305 144.2 261.947 140.174 cv
254.589 136.147 216.74 139.273 203.849 140.333 cv
190.958 141.392 192.488 143.935 193.077 150.769 cv
193.842 154.106 191.429 159.033 190.016 162.582 cv
188.603 166.132 178.95 167.509 175.536 172.436 cv
cp
.776471 .513726 .258824 rgb
f
262.911 179.802 mo
262.911 180.024 270.235 179.366 275.45 177.896 cv
282.95 175.782 290.014 174.41 297.442 171.885 cv
300.305 170.912 308.038 168.106 314.885 164.93 cv
314.745 163.768 314.369 162.586 313.571 161.363 cv
312.69 160.015 310.464 158.966 307.543 158.101 cv
307.247 158.352 306.945 158.596 306.654 158.853 cv
299.22 165.419 290.771 167.57 281.052 169.931 cv
277.811 170.719 262.911 179.787 262.911 179.802 cv
cp
.901961 .690196 .458824 rgb
f
190.016 162.582 mo
189.013 165.101 183.879 166.545 179.752 168.921 cv
182.158 169.509 184.759 169.453 186.631 170.428 cv
214.192 184.782 234.615 182.536 257.977 177.497 cv
267.096 175.531 275.377 168.702 283.903 164.998 cv
288.895 162.829 293.91 159.855 297.953 156.11 cv
290.639 154.996 282.592 154.285 277.76 153.33 cv
277.76 153.33 li
270.809 156.366 263.167 157.637 255.855 159.488 cv
251.215 160.663 246.784 162.564 242.022 163.276 cv
237.029 164.023 232.064 163.747 227.041 163.807 cv
213.477 163.967 202.679 163.613 190.521 161.355 cv
190.353 161.761 190.167 162.203 190.016 162.582 cv
cp
f
203.85 140.333 mo
194.009 141.141 192.581 142.832 192.714 146.618 cv
205.884 145.888 222.301 141.606 231.778 138.491 cv
220.785 138.96 209.724 139.85 203.85 140.333 cv
cp
f
207.73 160.57 mo
228.733 160.234 247.005 162.329 265.596 148.391 cv
266.606 147.634 268.034 147.714 269.245 147.346 cv
267.664 144.986 265.987 142.384 261.947 140.173 cv
261.425 139.887 260.734 139.641 259.924 139.424 cv
256.26 140.57 252.55 141.629 248.879 142.59 cv
236.51 145.829 223.508 148.369 210.824 150.006 cv
205.093 150.746 199.035 150.941 193.066 150.652 cv
193.07 150.694 193.074 150.726 193.077 150.768 cv
193.521 152.704 192.887 155.174 192.008 157.6 cv
196.989 157.869 202.75 160.65 207.73 160.57 cv
cp
f
285.14 228.907 mo
287.202 228.545 288.567 227.622 289.659 226.391 cv
284.07 226.579 276.565 227.668 269.772 229.272 cv
277.512 229.348 283.313 229.228 285.14 228.907 cv
cp
f
216.298 220.278 mo
210.732 220.278 205.086 221.04 199.467 221.962 cv
199.965 222.458 200.519 222.942 201.2 223.398 cv
202.289 224.127 204.856 224.782 208.26 225.377 cv
222.241 222.995 236.733 223.226 250.498 219.854 cv
252.45 219.376 259.812 218.865 261.093 216.888 cv
262.706 214.4 254.691 213.979 250.414 213.932 cv
250.414 213.932 li
248.989 213.917 247.978 213.942 247.879 213.947 cv
232.093 214.759 212.169 212.991 197.05 216.649 cv
196.905 216.684 196.824 216.709 196.682 216.743 cv
196.949 217.951 197.367 219.169 198.119 220.336 cv
206.435 219.77 216.335 218.755 218.065 218.715 cv
218.499 218.705 226.83 218.52 226.54 219.431 cv
226.125 220.74 217.438 220.278 216.298 220.278 cv
cp
f
178.133 198.296 mo
180.777 198.42 183.458 197.809 186.012 197.234 cv
212.76 191.216 234.423 196.318 260.769 195.406 cv
272.065 195.015 283.601 191.928 294.469 189.075 cv
301.744 187.166 309.218 185.048 316.422 182.666 cv
316.007 181.217 315.492 179.886 314.866 178.739 cv
313.959 177.078 313.73 175.501 313.795 173.965 cv
308.434 175.868 303.091 176.169 297.616 177.65 cv
274.275 183.967 250.717 188.221 226.54 185.552 cv
221.269 184.97 216.718 183.664 211.618 182.533 cv
202.468 180.504 193.015 179.705 183.776 178.188 cv
182.673 178.008 178.595 177.161 174.393 176.142 cv
173.822 182.001 176.34 191.317 178.133 198.296 cv
cp
f
317.404 187.61 mo
316.005 188.229 314.671 188.869 313.511 189.34 cv
300.746 194.523 283.385 198.478 269.57 198.478 cv
269.068 198.478 270.57 198.559 271.07 198.611 cv
273.211 198.835 275.239 199.306 277.34 199.75 cv
282.997 200.943 288.768 201.643 294.557 201.709 cv
302.391 201.8 310.071 199.4 317.557 197.343 cv
317.829 194.174 317.803 190.79 317.404 187.61 cv
cp
f
291.877 223.095 mo
293.439 220.336 295.091 217.153 298.972 214.763 cv
304.675 211.252 310.272 210.933 313.672 208.221 cv
310.919 208.337 308.156 208.296 305.418 208.2 cv
290.063 207.664 275.105 204.929 259.917 202.902 cv
242.712 200.606 225.135 200.104 207.793 199.883 cv
207.793 199.883 li
198.462 199.764 189.252 201.352 180.304 203.935 cv
180.283 203.941 180.177 203.99 180.152 203.999 cv
183.432 208.505 190.435 205.589 193.961 208.036 cv
195.745 209.275 195.966 211.414 196.236 213.824 cv
214.791 209.032 238.863 208.015 255.178 209.709 cv
257.199 209.919 274.549 211.5 274.426 214.372 cv
274.268 218.067 269.4 218.733 266.774 219.324 cv
253.188 222.381 238.975 225.501 224.891 227.308 cv
234.37 228.083 245.262 228.633 255.263 228.953 cv
261.886 227.258 268.504 225.6 275.132 224.357 cv
280.236 223.4 285.711 223.276 290.908 223.086 cv
291.232 223.074 291.553 223.098 291.877 223.095 cv
cp
f
240.739 205.54 mo
218.638 206.025 203.704 203.924 193.515 200.962 cv
189.061 201.666 184.651 202.68 180.304 203.935 cv
180.283 203.941 180.177 203.99 180.152 203.999 cv
183.432 208.505 190.435 205.589 193.961 208.036 cv
195.745 209.275 195.966 211.414 196.236 213.824 cv
214.791 209.032 238.863 208.015 255.178 209.709 cv
257.199 209.919 274.549 211.5 274.426 214.372 cv
274.268 218.068 269.4 218.733 266.774 219.324 cv
253.188 222.381 238.975 225.501 224.891 227.308 cv
234.37 228.083 245.262 228.633 255.263 228.953 cv
261.886 227.258 268.504 225.6 275.132 224.357 cv
280.236 223.4 285.711 223.276 290.908 223.086 cv
291.232 223.074 291.553 223.098 291.877 223.095 cv
293.439 220.336 295.091 217.153 298.972 214.763 cv
304.675 211.251 310.272 210.933 313.672 208.221 cv
310.919 208.336 308.156 208.296 305.418 208.2 cv
290.242 207.67 275.452 204.996 260.445 202.977 cv
254.442 204.467 247.891 205.383 240.739 205.54 cv
cp
.878431 .643137 .396078 rgb
f
286.558 191.122 mo
289.224 190.452 291.867 189.758 294.469 189.075 cv
301.744 187.166 309.218 185.048 316.422 182.667 cv
316.007 181.217 315.492 179.886 314.866 178.739 cv
313.959 177.078 313.73 175.501 313.795 173.965 cv
309.844 175.367 305.754 176.411 301.679 177.455 cv
297.499 182.259 292.493 186.966 286.558 191.122 cv
cp
f
313.571 161.363 mo
313.472 161.212 313.35 161.065 313.218 160.921 cv
312.074 162.982 310.771 165.146 309.311 167.365 cv
311.163 166.595 313.049 165.781 314.885 164.93 cv
314.745 163.768 314.369 162.586 313.571 161.363 cv
cp
f
272.719 198.831 mo
274.27 199.078 275.784 199.421 277.34 199.75 cv
282.997 200.943 288.768 201.643 294.557 201.709 cv
302.391 201.8 310.071 199.4 317.557 197.343 cv
317.829 194.174 317.803 190.79 317.404 187.61 cv
316.005 188.229 314.671 188.869 313.511 189.34 cv
302.013 194.008 286.795 197.67 273.79 198.354 cv
273.434 198.513 273.081 198.675 272.719 198.831 cv
cp
f
178.133 198.296 mo
180.23 198.395 182.348 198.029 184.41 197.587 cv
181.072 196.016 178.621 194.396 176.756 192.887 cv
177.221 194.77 177.699 196.606 178.133 198.296 cv
cp
f
285.14 228.907 mo
287.202 228.545 288.567 227.622 289.659 226.391 cv
284.07 226.579 276.565 227.668 269.772 229.272 cv
277.512 229.348 283.313 229.228 285.14 228.907 cv
cp
f
216.298 220.278 mo
210.732 220.278 205.086 221.04 199.467 221.962 cv
199.965 222.458 200.519 222.942 201.2 223.398 cv
202.289 224.127 204.856 224.782 208.26 225.377 cv
222.241 222.995 236.733 223.226 250.498 219.855 cv
252.45 219.376 259.812 218.865 261.093 216.888 cv
262.705 214.4 254.691 213.979 250.414 213.932 cv
248.989 213.917 247.978 213.942 247.879 213.947 cv
232.093 214.759 212.169 212.991 197.05 216.649 cv
196.905 216.684 196.824 216.709 196.682 216.743 cv
196.949 217.951 197.367 219.169 198.119 220.337 cv
206.435 219.77 216.336 218.755 218.065 218.715 cv
218.499 218.705 226.83 218.52 226.54 219.431 cv
226.125 220.74 217.438 220.278 216.298 220.278 cv
cp
f
202.674 168.616 mo
202.674 168.616 li
202.674 168.616 li
202.674 168.616 li
cp
.776471 .513726 .258824 rgb
f
214.162 173.411 mo
232.083 178.07 262.321 169.353 276.575 159.251 cv
264.679 167.388 240.875 171.927 226.774 172.493 cv
222.348 172.671 218.133 171.348 213.787 170.845 cv
210.051 170.412 205.953 170.742 202.674 168.616 cv
202.983 171.398 212.165 172.891 214.162 173.411 cv
cp
f
242.153 152.421 mo
247.416 150.653 252.393 147.836 257.429 145.566 cv
252.206 146.66 246.902 149.15 241.779 150.811 cv
236.402 152.554 230.773 153.119 225.192 153.789 cv
220.911 154.302 216.49 155.501 212.227 154.332 cv
216.211 159.625 237.325 154.044 242.153 152.421 cv
cp
f
187.44 190.218 mo
191.775 191.258 195.912 190.579 200.281 190.405 cv
209.179 190.052 218.248 190.977 227.086 191.136 cv
211.863 187.711 195.457 185.057 179.802 186.416 cv
179.803 186.416 li
179.657 188.638 185.94 189.858 187.44 190.218 cv
cp
f
309.749 179.898 mo
295.427 180.819 281.601 187.323 267.273 188.457 cv
268.791 189.232 270.825 188.759 272.496 188.813 cv
285.496 189.231 297.826 184.454 309.749 179.898 cv
cp
f
229.857 183.575 mo
229.857 183.575 li
229.857 183.575 li
229.857 183.575 li
cp
.65098 .392157 .145098 rgb
f
236.712 184.415 mo
241.161 184.48 247.069 183.926 253.921 181.847 cv
256.374 181.102 258.853 180.212 261.405 179.18 cv
266.733 177.026 272.053 174.363 276.117 172.308 cv
280.293 170.199 284.022 168.673 286.452 167.291 cv
288.881 165.908 290.102 164.843 290.015 164.716 cv
289.928 164.588 288.567 165.401 286.067 166.538 cv
283.567 167.676 279.829 168.969 275.483 171.004 cv
271.466 172.879 265.909 175.546 260.776 177.624 cv
258.258 178.643 255.834 179.531 253.438 180.291 cv
246.753 182.412 241.077 183.15 236.693 183.377 cv
232.445 183.598 229.88 183.38 229.857 183.575 cv
229.835 183.77 232.376 184.351 236.712 184.415 cv
cp
f
225.677 197.561 mo
225.678 197.561 li
225.677 197.561 li
225.677 197.561 li
cp
f
261.359 199.774 mo
270.524 200.548 277.746 201.653 284.189 203.029 cv
287.802 203.79 290.678 205.248 292.776 205.882 cv
294.873 206.516 296.113 206.586 296.137 206.461 cv
296.161 206.335 294.996 206.036 293.016 205.211 cv
292.075 204.819 287.225 202.493 284.481 201.787 cv
278.119 200.162 270.644 198.878 261.501 198.102 cv
252.004 197.295 242.294 197.195 236.173 197.202 cv
229.686 197.21 225.684 197.329 225.678 197.561 cv
225.672 197.792 229.671 198.095 236.146 198.393 cv
241.796 198.652 252.401 199.017 261.359 199.774 cv
cp
f
267.839 216.785 mo
265.795 218.072 263.148 218.82 261.212 219.413 cv
255.789 221.058 253.065 222.768 253.108 223.016 cv
253.128 223.132 254.006 223.148 255.51 222.717 cv
257.004 222.289 259.043 221.228 261.544 220.632 cv
263.527 220.159 266.268 219.5 268.644 218.118 cv
269.197 217.811 269.808 217.382 270.291 216.722 cv
270.631 216.266 270.795 215.637 270.648 214.948 cv
270.433 214.284 270.031 213.806 269.611 213.502 cv
269.042 213.049 268.426 212.723 267.817 212.457 cv
266.702 211.962 265.543 211.592 264.349 211.285 cv
263.726 211.125 263.104 210.985 262.496 210.857 cv
257.379 209.771 252.499 209.437 248.612 209.378 cv
246.123 209.339 244.154 209.427 242.446 209.626 cv
241.489 209.737 240.738 209.871 240.098 210.034 cv
238.996 210.312 238.466 210.646 238.51 210.752 cv
238.51 210.752 li
238.55 210.849 239.116 210.715 240.197 210.625 cv
240.856 210.572 241.54 210.539 242.505 210.525 cv
244.233 210.501 246.062 210.549 248.559 210.711 cv
252.379 210.961 257.181 211.415 262.144 212.496 cv
262.738 212.626 263.339 212.763 263.931 212.915 cv
265.068 213.205 266.14 213.539 267.146 213.98 cv
267.694 214.224 268.189 214.468 268.584 214.786 cv
268.848 215.029 269.071 215.215 269.083 215.379 cv
269.144 215.448 269.068 215.636 268.972 215.815 cv
268.753 216.178 268.31 216.474 267.839 216.785 cv
cp
f
332.525 132.163 mo
330.494 235.757 li
470.236 233.69 li
465.733 130.15 li
332.525 132.163 li
cp
f
465.733 130.15 mo
332.525 132.163 li
333.113 228.367 li
467.911 227.042 li
465.733 130.15 li
cp
.901961 .690196 .458824 rgb
f
466.379 158.878 mo
452.879 172.116 426.22 192.744 381.352 199.502 cv
355.868 203.34 341.263 203.475 332.952 202.106 cv
333.113 228.367 li
467.911 227.042 li
466.379 158.878 li
cp
.878431 .643137 .396078 rgb
f
343.975 228.26 mo
385.133 227.855 li
378.844 226.522 372.633 225.903 366.357 225.91 cv
359.066 225.919 351.667 226.792 343.975 228.26 cv
cp
.776471 .513726 .258824 rgb
f
429.453 227.421 mo
442.458 227.293 li
436.536 224.158 424.618 220.043 423.607 219.736 cv
405.708 214.292 386.788 210.966 367.947 211.218 cv
361.667 211.302 355.397 211.783 349.175 212.716 cv
343.937 213.502 338.19 213.679 333.033 215.252 cv
333.052 218.214 li
336.922 217.085 341.065 216.501 343.405 216.16 cv
347.274 215.596 351.042 214.428 354.944 214.093 cv
376.795 212.22 410.208 215.276 429.112 227.231 cv
429.219 227.299 429.343 227.355 429.453 227.421 cv
cp
f
467.589 212.721 mo
467.525 209.864 li
460.107 211.341 453.218 212.935 453.863 221.987 cv
454.002 223.936 455.453 225.619 457.533 227.145 cv
465.827 227.063 li
461.002 226.657 456.958 225.744 456.836 222.226 cv
456.647 216.801 462.451 213.65 467.589 212.721 cv
cp
f
409.804 195.209 mo
423.426 193.032 437.068 190.99 450.685 188.851 cv
455.738 188.058 461.554 186.641 467.005 186.714 cv
466.93 183.354 li
465.869 183.389 464.897 183.427 464.312 183.421 cv
452.13 183.29 439.944 185.6 427.993 187.764 cv
417.952 189.582 407.995 190.843 398.15 193.619 cv
395.501 194.366 385.515 196.804 386.17 201.327 cv
386.954 206.737 398.779 207.181 402.005 207.313 cv
421.499 208.11 440.218 206.367 459.425 203.075 cv
461.172 202.775 464.171 202.445 467.349 202.046 cv
467.292 199.487 li
465.237 199.781 463.309 200.001 461.898 200.24 cv
445.218 203.073 427.969 202.915 411.099 203.207 cv
407.919 203.262 394.971 205.411 393.175 201.459 cv
391.457 197.68 408.162 195.471 409.804 195.209 cv
cp
f
461.015 174.786 mo
459.168 174.73 457.327 174.702 455.489 174.699 cv
427.929 174.661 401.442 180.511 375.546 190.042 cv
365.613 193.698 343.578 203.428 332.964 203.88 cv
332.996 209.246 li
333.198 209.194 333.474 209.148 333.606 209.088 cv
343.383 204.635 353.527 201.927 363.655 198.466 cv
391.555 188.934 418.701 178.607 448.596 179.475 cv
450.875 179.541 459.068 179.332 466.845 179.606 cv
466.739 174.931 li
464.791 174.877 462.857 174.841 461.015 174.786 cv
cp
f
444.799 148.165 mo
428.438 150.108 412.015 151.521 395.648 153.411 cv
375.84 155.698 352.46 159.606 332.659 154.142 cv
332.68 157.552 li
332.778 157.541 332.891 157.523 332.987 157.515 cv
343.333 156.628 350.921 160.747 359.564 160.747 cv
373.322 160.747 386.564 159.779 400.151 157.383 cv
404.17 156.675 407.838 154.881 411.776 153.887 cv
418.157 152.275 425.071 151.742 431.583 150.708 cv
442.795 148.928 454.719 147.893 466.129 147.721 cv
466.074 145.335 li
457.46 146.273 448.01 147.784 444.799 148.165 cv
cp
f
463.772 159.343 mo
461.696 159.329 459.62 159.355 457.543 159.422 cv
421.961 160.584 388.189 175.758 352.471 176.879 cv
345.657 177.093 339.316 175.427 332.781 174.039 cv
332.804 177.917 li
336.78 179.194 340.853 180.227 345.055 180.163 cv
352.562 180.049 359.82 177.829 367.187 176.614 cv
367.484 176.565 372.067 175.278 372.22 175.448 cv
373.076 176.399 369.789 176.249 368.599 176.719 cv
365.708 177.863 362.788 179.002 360.065 180.507 cv
355.363 183.107 350.762 185.951 345.496 187.288 cv
341.34 188.343 337.02 188.389 332.876 189.622 cv
332.898 193.105 li
346.907 190.898 359.845 183.82 373.044 179.023 cv
385.972 174.325 399.295 172.256 412.571 168.906 cv
433.366 163.658 446.869 161.71 466.458 162.393 cv
466.391 159.409 li
465.518 159.39 464.645 159.349 463.772 159.343 cv
cp
f
418.634 131.876 mo
411.518 134.37 404 135.804 396.795 138.021 cv
391.077 139.781 385.455 141.993 379.549 143.107 cv
362.535 146.318 350.429 144.833 334.813 137.12 cv
334.047 136.742 333.291 136.341 332.548 135.922 cv
332.574 140.193 li
332.866 140.343 333.54 140.684 333.723 140.775 cv
339.928 143.87 346.574 145.769 353.295 147.371 cv
368.402 150.973 387.388 146.894 401.681 141.915 cv
404.899 140.794 424.734 136.487 430.808 130.678 cv
420.578 130.832 li
419.748 131.326 419.026 131.738 418.634 131.876 cv
cp
f
345.036 215.489 mo
344.683 144.635 li
452.727 141.959 li
455.64 213.608 li
345.036 215.489 li
cp
453.757 139.443 mo
343.123 140.582 li
336.059 136 li
342.062 143.416 li
341.68 217.396 li
336.147 225.846 li
344.977 219.012 li
457.288 216.919 li
465.382 224.072 li
458.965 212.523 li
456.787 139.575 li
464.145 131.999 li
453.757 139.443 li
cp
.65098 .392157 .145098 rgb
f
371.658 159.485 mo
376.074 159.826 381.135 159.58 387.638 158.635 cv
387.691 158.627 li
393.843 157.739 399.331 156.656 403.316 156.016 cv
407.301 155.375 409.788 155.074 409.776 154.843 cv
409.764 154.612 407.233 154.496 403.172 154.839 cv
398.135 155.264 394.516 155.943 387.451 156.965 cv
387.451 156.965 387.399 156.971 387.399 156.972 cv
380.784 157.918 376.21 158.308 371.704 158.301 cv
367.69 158.294 365.198 157.978 365.157 158.206 cv
365.157 158.207 li
365.117 158.435 367.569 159.17 371.658 159.485 cv
cp
f
401.43 170.604 mo
411.48 168.167 420.69 166.217 427.323 164.676 cv
433.956 163.134 438.021 162.035 437.971 161.809 cv
437.922 161.582 433.774 162.268 427.08 163.51 cv
420.871 164.663 410.653 166.634 401.034 168.97 cv
390.546 171.518 382.349 174.094 375.63 176.679 cv
369.287 179.12 365.535 181.065 365.628 181.277 cv
365.721 181.49 369.627 179.935 376.03 177.794 cv
383.017 175.458 390.781 173.187 401.43 170.604 cv
cp
f
435.175 178.522 mo
435.161 178.059 426.888 177.724 416.803 178.981 cv
406.718 180.237 398.898 183.059 399.033 183.502 cv
399.169 183.946 407.046 181.884 417.01 180.648 cv
426.974 179.412 435.189 178.986 435.175 178.522 cv
cp
f
436.647 187.687 mo
436.604 187.226 429.812 187.358 421.577 188.738 cv
413.341 190.117 406.935 192.461 407.068 192.905 cv
407.201 193.35 413.709 191.757 421.854 190.395 cv
429.999 189.033 436.69 188.149 436.647 187.687 cv
cp
f
189.302 353.528 mo
195.078 359.929 305.135 359.967 314.25 353.375 cv
320.281 349.013 298.358 305.788 277.749 279.371 cv
264.117 279.635 li
271.8 275.171 li
273.048 271.905 li
264.722 261.661 259.378 259.321 253.78 259 cv
253.536 258.986 253.297 258.985 253.062 258.997 cv
252.358 259.034 251.694 259.191 251.077 259.475 cv
244.442 260.034 212.286 297.035 196.496 324.826 cv
198.842 331.237 li
241.239 333.368 li
189.492 338.573 li
184.125 348.515 187.767 351.827 189.302 353.528 cv
cp
f
186.763 348.621 mo
192.539 355.021 302.596 355.06 311.711 348.468 cv
317.742 344.106 295.819 300.881 275.21 274.464 cv
261.578 274.728 li
273.11 271.82 li
264.785 261.576 256.839 254.414 251.241 254.093 cv
250.997 254.079 250.758 254.078 250.523 254.09 cv
250.523 254.09 li
249.819 254.127 249.155 254.284 248.538 254.568 cv
241.903 255.126 211.991 297.061 196.201 324.852 cv
238.7 328.461 li
193.59 329.567 li
188.223 339.509 185.228 346.92 186.763 348.621 cv
cp
.901961 .690196 .458824 rgb
f
311.711 348.468 mo
315.817 345.498 306.956 324.511 294.383 303.081 cv
285.508 313.319 270.934 326.219 249.956 332.847 cv
224.297 340.953 201.793 339.024 189.853 336.917 cv
186.963 343.044 185.638 347.375 186.762 348.621 cv
192.538 355.022 302.596 355.06 311.711 348.468 cv
cp
.878431 .643137 .396078 rgb
f
212.576 298.499 mo
211.147 300.647 209.741 302.794 208.356 304.943 cv
211.672 304.328 214.839 303.423 218.144 302.617 cv
236.572 298.122 254.605 293.223 273.544 291.286 cv
277.909 290.84 282.238 290.481 286.578 290.476 cv
285.013 288.082 283.42 285.752 281.819 283.464 cv
272.014 284.485 263.11 287.917 253.669 291.323 cv
241.88 295.575 228.338 298.101 215.813 298.366 cv
215.514 298.372 213.765 298.447 212.576 298.499 cv
cp
.776471 .513726 .258824 rgb
f
221.445 285.557 mo
220.829 286.428 220.21 287.32 219.591 288.205 cv
230.478 287.364 241.475 286.327 252.232 284.486 cv
260.928 282.998 269.595 280.712 278.309 279.449 cv
278.353 279.442 278.835 279.408 278.93 279.399 cv
278.436 278.723 277.941 278.091 277.446 277.432 cv
276.118 277.613 273.872 277.909 273.689 277.931 cv
267.244 278.713 260.944 280.233 254.564 281.397 cv
243.577 283.402 232.59 284.589 221.473 285.554 cv
221.471 285.554 221.448 285.557 221.445 285.557 cv
cp
f
196.2 324.851 mo
198.266 325.027 li
200.446 324.283 202.635 323.604 204.928 323.332 cv
215.394 322.091 226.016 321.76 236.457 320.242 cv
239.698 319.77 242.779 318.514 246.009 317.939 cv
254.314 316.462 262.631 316.027 271.026 315.728 cv
278.929 315.448 287.825 316.47 295.416 318.668 cv
298.458 319.55 301.396 320.746 304.403 321.715 cv
303.715 320.3 302.998 318.863 302.246 317.395 cv
300.885 317.077 299.52 316.78 298.143 316.534 cv
290.279 315.127 282.393 314.577 274.504 314.574 cv
257.147 314.569 239.772 317.215 222.556 319.231 cv
213.557 320.284 206.51 321.398 198.036 321.695 cv
197.418 322.753 196.781 323.829 196.2 324.851 cv
cp
f
261.509 259.544 mo
261.075 259.175 260.647 258.825 260.223 258.49 cv
253.667 261.298 245.827 262.915 238.603 263.245 cv
238.052 263.878 237.509 264.493 236.93 265.183 cv
243.956 264.374 250.761 263.369 257.706 261.018 cv
259.003 260.579 260.26 260.068 261.509 259.544 cv
cp
f
229.964 273.935 mo
230.526 273.752 231.083 273.542 231.65 273.38 cv
238.111 271.528 244.723 270.98 251.359 270.178 cv
257.593 269.424 263.615 268.194 269.831 267.934 cv
269.43 267.475 269.038 267.059 268.64 266.618 cv
267.968 266.613 267.299 266.593 266.626 266.598 cv
257.277 266.663 247.809 267.676 238.726 269.259 cv
236.74 269.605 234.752 269.952 232.767 270.315 cv
231.851 271.479 230.917 272.684 229.964 273.935 cv
cp
f
201.135 316.483 mo
205.278 316.257 209.392 315.73 213.087 314.454 cv
217.389 312.969 221.445 310.794 225.802 309.472 cv
241.957 304.569 259.077 302.394 275.895 301.793 cv
281.728 301.585 287.638 301.549 293.495 301.584 cv
293.032 300.804 292.554 300.025 292.082 299.246 cv
287.877 299.276 283.669 299.49 281.806 299.508 cv
262.96 299.697 243.861 302.981 225.636 307.675 cv
218.431 309.531 211.188 312.242 203.673 312.339 cv
202.804 313.739 201.964 315.114 201.135 316.483 cv
cp
f
297.069 330.419 mo
291.458 330.574 286.034 331.579 283.761 334.458 cv
282.8 335.676 283.537 336.79 284.095 338.016 cv
287.41 345.287 289.186 345.869 295.646 349.704 cv
296.566 350.25 297.416 350.81 298.279 351.365 cv
302.053 350.952 305.193 350.476 307.55 349.937 cv
305.779 349.177 304.306 348.453 303.512 348.093 cv
298.707 345.913 288.85 344.89 287.612 338.466 cv
286.446 332.409 301.823 332.6 309.588 333.484 cv
309.284 332.694 308.968 331.89 308.626 331.058 cv
305.468 330.657 301.224 330.305 297.069 330.419 cv
cp
f
186.762 348.621 mo
186.843 348.711 186.951 348.797 187.071 348.884 cv
190.602 347.979 194.06 347.232 194.96 347.063 cv
207.2 344.765 220.835 342.289 233.315 343.767 cv
242.342 344.836 251.345 346.073 260.349 347.119 cv
265.118 347.672 269.744 349.707 273.253 352.925 cv
273.259 352.931 273.281 352.958 273.288 352.965 cv
275.23 352.896 277.189 352.83 279.05 352.745 cv
278.951 349.842 279.846 348.425 276.623 347.7 cv
273.397 346.974 270.23 345.932 267.071 344.965 cv
256.848 341.838 245.769 340.643 234.89 340.698 cv
231.264 340.716 227.658 340.875 224.116 341.145 cv
218.022 341.61 212.007 342.858 205.886 342.998 cv
199.776 343.137 193.254 342.202 187.218 343.306 cv
186.33 345.98 186.089 347.875 186.762 348.621 cv
cp
f
192.081 332.434 mo
191.326 333.891 190.618 335.296 189.995 336.605 cv
195.596 336.714 203.73 337.271 205.886 337.248 cv
219.878 337.102 234.262 335.831 248.029 333.39 cv
252.808 332.543 257.797 331.182 262.367 329.57 cv
262.536 329.51 263.637 328.956 264.573 328.585 cv
264.189 328.658 263.85 328.73 263.283 328.802 cv
261.037 329.089 258.787 329.329 256.54 329.606 cv
252.428 330.113 248.299 330.521 244.199 331.124 cv
234.904 332.49 225.189 335.043 215.771 335.3 cv
209.087 335.482 202.727 334.284 196.167 333.203 cv
194.803 332.978 193.444 332.693 192.081 332.434 cv
cp
f
265.621 328.253 mo
265.38 328.274 264.982 328.424 264.573 328.585 cv
265.345 328.44 265.88 328.31 265.864 328.295 cv
265.819 328.254 265.734 328.243 265.621 328.253 cv
cp
f
299.995 339.29 mo
299.537 342.007 306.28 344.604 312.704 345.834 cv
312.773 344.037 312.286 341.503 311.328 338.401 cv
309.089 337.877 306.908 337.639 305.281 337.717 cv
304.03 337.777 300.286 337.561 299.995 339.29 cv
cp
f
256.187 292.811 mo
259.348 292.087 261.83 291.145 266.172 289.684 cv
266.174 289.683 266.451 289.59 266.454 289.589 cv
270.67 288.205 273.271 287.44 276.199 287.063 cv
278.706 286.74 280.303 286.876 280.34 286.65 cv
280.376 286.424 278.786 285.873 276.121 285.898 cv
273.185 285.926 270.014 286.62 265.924 287.995 cv
265.829 288.027 265.733 288.059 265.637 288.091 cv
261.744 289.395 258.347 290.792 255.857 291.672 cv
253.375 292.549 251.786 293.01 251.828 293.243 cv
251.828 293.243 li
251.868 293.466 253.548 293.415 256.187 292.811 cv
cp
.65098 .392157 .145098 rgb
f
251.395 282.43 mo
251.398 282.429 251.444 282.419 251.447 282.418 cv
257.358 281.121 259.949 280.509 264.152 279.807 cv
267.412 279.264 269.46 279.052 269.455 278.821 cv
269.45 278.589 267.365 278.383 264.011 278.631 cv
260.313 278.905 256.397 279.605 251.086 280.777 cv
251.086 280.777 251.034 280.789 251.034 280.789 cv
246.041 281.887 241.572 282.99 238.321 283.686 cv
235.07 284.382 233.034 284.752 233.056 284.983 cv
233.078 285.214 235.174 285.259 238.516 284.857 cv
242.285 284.403 246.005 283.619 251.395 282.43 cv
cp
f
248.836 269.88 mo
254.427 269.04 258.932 268.345 258.904 267.883 cv
258.876 267.42 254.208 267.375 248.586 268.218 cv
242.964 269.062 238.491 270.101 238.55 270.561 cv
238.55 270.561 li
238.609 271.021 243.244 270.721 248.836 269.88 cv
cp
f
241.71 318.917 mo
250.102 317.794 255.5 317.187 261.271 316.694 cv
266.287 316.266 269.414 316.1 269.414 315.868 cv
269.414 315.636 266.274 315.383 261.205 315.511 cv
255.801 315.647 249.486 316.183 241.488 317.25 cv
234.677 318.16 226.065 319.559 221.923 320.238 cv
216.931 321.056 213.843 321.593 213.868 321.824 cv
213.868 321.824 li
213.893 322.055 217.034 321.935 222.08 321.417 cv
227.969 320.812 233.233 320.051 241.71 318.917 cv
cp
f
235.532 342.817 mo
243.99 343.06 250.771 343.976 256.654 345.254 cv
258.508 345.652 261.178 345.718 262.384 345.826 cv
265.919 346.188 267.639 347.188 267.749 347.053 cv
267.858 346.918 266.023 345.446 262.505 344.894 cv
260.885 344.621 258.94 344.554 256.95 344.02 cv
251.096 342.482 244.087 341.392 235.58 341.141 cv
226.634 340.878 218.027 341.617 212.248 342.269 cv
206.301 342.94 202.668 343.564 202.692 343.794 cv
202.716 344.025 206.397 343.821 212.352 343.457 cv
218.033 343.11 226.81 342.567 235.532 342.817 cv
cp
f
314.35 291.811 mo
312.896 294.126 312.752 294.805 313.671 300.946 cv
315.232 311.386 345.983 349.437 354.106 351.503 cv
362.228 353.569 466.851 355.264 472.067 351.715 cv
477.284 348.166 479.221 258.637 469.981 255.988 cv
460.741 253.339 364.552 250.8 352.634 256.836 cv
352.634 256.836 li
344.617 260.896 322.58 278.706 314.35 291.811 cv
cp
f
352.899 344.386 mo
361.021 346.452 465.644 348.147 470.86 344.598 cv
476.077 341.048 478.014 251.52 468.774 248.871 cv
459.534 246.222 363.345 243.683 351.427 249.718 cv
341.994 254.496 317.571 282.563 313.088 293.847 cv
310.799 299.608 344.776 342.32 352.899 344.386 cv
cp
.901961 .690196 .458824 rgb
f
470.86 344.598 mo
473.852 342.561 475.753 312.258 475.096 286.266 cv
463.156 299.573 443.587 315.239 414.95 320.302 cv
376.87 327.034 339.828 317.145 322.01 311.067 cv
332.11 325.306 347.729 343.07 352.899 344.385 cv
361.021 346.451 465.644 348.147 470.86 344.598 cv
cp
.878431 .643137 .396078 rgb
f
382.927 267.378 mo
378.692 267.179 374.454 267.087 370.214 267.087 cv
356.438 267.087 342.349 268.565 328.748 271.285 cv
327.307 272.983 325.894 274.689 324.546 276.386 cv
326.598 275.91 328.655 275.452 330.715 275.007 cv
350.719 270.685 371.237 269.617 391.64 269.974 cv
408.378 270.267 425.105 272.269 441.821 272.703 cv
452.549 272.982 463.589 271.847 474.326 270.611 cv
474.235 269.477 474.137 268.369 474.031 267.295 cv
466.472 267.991 458.973 268.731 451.357 268.941 cv
427.222 269.608 402.758 265.282 379.013 261.365 cv
367.593 259.482 356.149 256.419 344.514 256.565 cv
343.857 256.573 343.198 256.6 342.54 256.629 cv
341.375 257.716 340.179 258.877 338.948 260.117 cv
345.538 260.034 352.279 260.913 358.47 261.683 cv
368.394 262.917 378.332 267.51 388.461 267.51 cv
387.755 267.51 li
386.144 267.51 384.537 267.454 382.927 267.378 cv
cp
.831373 .592157 .34902 rgb
f
317.145 303.787 mo
322.586 303.593 328.253 303.652 329.861 303.641 cv
366.837 303.387 402.739 310.26 439.171 315.613 cv
443.808 316.294 462.809 319.346 474.444 322.801 cv
474.54 321.311 474.622 319.765 474.701 318.188 cv
465.589 315.568 453.388 313.499 448.442 312.46 cv
411.879 304.785 373.301 300.235 335.895 300.038 cv
329.09 300.003 322.146 300.103 315.283 300.591 cv
315.824 301.586 316.449 302.655 317.145 303.787 cv
cp
f
316.353 287.773 mo
321.077 287.725 325.54 287.782 327.301 287.721 cv
362.133 286.511 397.593 288.195 432.197 292.144 cv
444.203 293.515 456.23 294.361 468.22 295.853 cv
470.551 296.143 472.895 296.475 475.234 296.832 cv
475.234 295.52 475.212 294.225 475.2 292.916 cv
467.374 291.569 459.622 290.555 458.655 290.397 cv
422.723 284.517 385.69 280.814 349.168 280.965 cv
346.733 280.975 344.3 281.002 341.87 281.047 cv
334.878 281.176 327.803 281.2 320.74 281.373 cv
319.079 283.634 317.599 285.787 316.353 287.773 cv
cp
f
446.618 256.413 mo
454.923 256.044 463.19 254.325 471.462 252.837 cv
470.696 250.603 469.809 249.167 468.774 248.87 cv
468.53 248.8 468.194 248.73 467.832 248.661 cv
451.062 251.208 434.525 252.249 417.686 249.605 cv
410.394 248.461 403.106 247.531 395.898 246.059 cv
383.48 246.176 371.909 246.574 363.531 247.392 cv
369.279 247.557 375.003 248.103 380.602 249.154 cv
402.161 253.203 424.608 257.391 446.618 256.413 cv
cp
f
439.465 338.949 mo
437.892 339.019 430.657 339.359 431.755 342.551 cv
432.349 344.28 433.337 345.587 434.57 346.623 cv
453.59 346.493 468.945 345.901 470.86 344.598 cv
471.448 344.197 471.993 342.658 472.486 340.319 cv
464.043 339.713 454.275 339.811 450.267 339.531 cv
447.547 339.341 444.887 339.018 442.186 338.936 cv
441.285 338.909 440.379 338.909 439.465 338.949 cv
cp
f
473.86 330.207 mo
462.549 328.541 451.288 327.178 439.879 325.996 cv
435.522 325.544 429.007 324.354 422.722 324.339 cv
416.437 324.323 410.382 325.483 406.944 329.731 cv
402.958 334.657 406.527 341.345 411.094 346.569 cv
413.134 346.589 415.124 346.607 417.156 346.619 cv
415.003 344.466 413.445 341.584 413.3 338.524 cv
413.075 333.766 417.055 332.423 421.071 331.691 cv
428.313 330.371 436.438 332.498 443.645 333.175 cv
453.495 334.099 463.5 334.011 473.394 334.692 cv
473.563 333.34 473.711 331.766 473.86 330.207 cv
cp
f
339.203 328.692 mo
338.136 328.7 337.069 328.778 336.001 328.855 cv
337.709 330.827 339.374 332.656 340.996 334.382 cv
347.979 334.906 355.142 338.92 358.852 345.014 cv
358.857 345.021 358.86 345.028 358.864 345.036 cv
361.28 345.21 364.229 345.376 367.731 345.532 cv
365.55 339.344 361.403 334.795 353.996 331.452 cv
349.631 329.482 344.464 328.653 339.203 328.692 cv
cp
f
388.359 346.185 mo
392.294 346.279 396.259 346.347 400.439 346.414 cv
399.119 342.944 396.845 339.804 394.2 336.75 cv
379.504 319.78 355.149 313.315 333.116 313.676 cv
331.647 313.7 330.189 313.754 328.744 313.837 cv
327.271 313.923 325.808 314.08 324.354 314.293 cv
325.923 316.416 327.556 318.565 329.259 320.713 cv
345.109 320.185 362.354 322.61 375.481 331.691 cv
380.491 335.156 385.776 340.375 388.359 346.185 cv
cp
f
332.593 301.9 mo
331.237 300.005 330.097 298.345 329.278 297.081 cv
328.621 296.065 328.375 295.555 328.271 295.393 cv
328.282 295.275 328.266 295.207 328.357 294.989 cv
328.657 294.275 329.265 293.16 330.122 291.849 cv
331.836 289.226 334.529 285.774 337.81 282.06 cv
344.207 274.819 353.215 265.162 361.491 259.278 cv
372.316 258.296 383.41 259.137 394.552 258.913 cv
398.839 258.827 403.081 258.79 407.226 258.793 cv
419.661 258.803 431.222 259.185 440.488 259.761 cv
446.665 260.145 451.83 260.617 455.501 261.11 cv
457.336 261.357 458.805 261.613 459.771 261.84 cv
459.969 261.886 460.031 261.915 460.183 261.957 cv
460.307 262.448 460.45 263.091 460.597 263.981 cv
460.931 266.002 461.274 268.872 461.582 272.258 cv
462.197 279.03 462.688 287.902 462.865 296.751 cv
463.042 305.601 462.902 314.453 462.291 321.116 cv
461.985 324.448 461.548 327.245 461.047 329.083 cv
460.806 329.968 460.547 330.593 460.373 330.917 cv
460.202 330.932 458.232 331.343 455.359 331.575 cv
452.294 331.823 448.219 332.032 443.501 332.202 cv
434.066 332.542 422.627 333.871 410.633 333.954 cv
398.639 334.037 386.087 332.872 376.732 332.797 cv
367.377 332.722 360.257 332.553 359.271 332.47 cv
359.845 332.519 358.85 332.293 357.714 331.415 cv
356.578 330.537 355.103 329.181 353.478 327.523 cv
350.228 324.209 346.347 319.687 342.62 315.06 cv
338.893 310.434 335.307 305.691 332.593 301.9 cv
cp
359.007 335.586 mo
365.276 336.116 454.632 336.593 461.842 333.786 cv
469.053 330.978 465.433 262.4 462.607 259.593 cv
460.665 257.662 434.017 255.494 403.033 255.679 cv
388.95 255.763 373.97 256.333 360.008 257.633 cv
342.467 269.87 323.748 292.225 325.073 296.013 cv
326.397 299.801 352.739 335.056 359.007 335.586 cv
cp
.65098 .392157 .145098 rgb
f
353.573 283.897 mo
353.573 283.897 li
353.573 283.897 353.573 283.897 353.573 283.897 cv
353.573 283.897 li
cp
f
392.473 284.55 mo
392.541 284.551 392.61 284.553 392.678 284.555 cv
395.756 284.646 398.822 285.387 401.896 285.536 cv
406.775 285.769 411.21 285.425 415.01 285.944 cv
419.891 286.607 424.002 287.885 426.909 288.204 cv
429.815 288.522 431.476 288.234 431.47 288.093 cv
431.464 287.951 429.826 287.974 427.025 287.431 cv
424.225 286.887 420.287 285.422 415.215 284.585 cv
411.246 283.932 406.703 284.178 401.982 283.906 cv
399.106 283.742 396.051 282.986 392.731 282.876 cv
392.657 282.874 392.583 282.872 392.509 282.87 cv
382.801 282.663 370.918 283.107 364.962 283.305 cv
357.928 283.539 353.579 283.666 353.573 283.897 cv
353.571 284.128 357.927 284.42 364.976 284.49 cv
372.025 284.56 381.757 284.318 392.473 284.55 cv
cp
f
415.8 307.828 mo
418.778 308.205 421.556 308.614 424.247 309.093 cv
430.221 310.154 435.364 311.782 439.105 312.488 cv
442.846 313.194 445.123 313.211 445.144 313.022 cv
445.164 312.833 442.958 312.475 439.329 311.503 cv
435.7 310.531 430.675 308.709 424.542 307.511 cv
421.83 306.983 419.008 306.542 416.012 306.162 cv
408.994 305.273 399.118 304.592 394.938 304.267 cv
389.554 303.849 386.219 303.542 386.185 303.77 cv
386.15 304 389.432 304.725 394.813 305.449 cv
400.189 306.172 407.656 306.797 415.8 307.828 cv
cp
f
433.326 255.338 mo
433.326 255.338 433.413 255.338 433.413 255.338 cv
441.187 255.375 447.353 254.774 452.454 253.758 cv
457.252 252.803 460.086 251.699 460.024 251.476 cv
459.961 251.254 457.037 251.947 452.259 252.59 cv
447.044 253.291 441.256 253.688 433.42 253.658 cv
433.42 253.658 433.334 253.658 433.334 253.658 cv
425.399 253.613 419.728 253.174 414.466 252.297 cv
409.706 251.504 406.822 250.62 406.746 250.839 cv
406.671 251.059 409.448 252.35 414.234 253.46 cv
419.382 254.654 425.464 255.308 433.326 255.338 cv
cp
f
404.489 269.581 mo
413.365 270.737 420.641 270.556 420.669 270.094 cv
420.698 269.631 413.455 269.044 404.705 267.914 cv
400.041 267.312 396.714 266.698 393.617 266.032 cv
390.803 265.427 389.051 264.987 388.973 265.205 cv
388.973 265.205 li
388.896 265.424 390.522 266.264 393.308 267.174 cv
396.217 268.124 399.919 268.987 404.489 269.581 cv
cp
f
360.722 321.496 mo
361.793 321.862 362.835 322.263 363.851 322.699 cv
367.009 324.045 369.825 325.738 372.267 327.515 cv
375.148 329.612 377.687 331.656 379.974 333.177 cv
384.639 336.278 387.602 337.713 387.739 337.534 cv
387.877 337.355 384.955 335.45 380.645 332.226 cv
378.491 330.617 376.064 328.503 373.18 326.293 cv
370.7 324.393 367.801 322.592 364.511 321.165 cv
363.454 320.71 362.371 320.295 361.261 319.917 cv
353.229 317.184 344.367 316.742 338.965 316.554 cv
333.166 316.353 329.608 316.363 329.592 316.594 cv
329.592 316.594 li
329.576 316.825 333.13 317.243 338.892 317.749 cv
344.181 318.214 353.085 318.879 360.722 321.496 cv
cp
f
353.86 335.811 mo
353.868 335.816 li
356.366 337.284 357.885 338.278 359.457 339.455 cv
360.817 340.474 361.631 341.185 361.809 341.036 cv
361.978 340.896 361.481 339.891 360.249 338.576 cv
358.95 337.188 357.146 335.778 354.715 334.365 cv
354.706 334.36 li
352.55 333.1 350.007 331.901 348.608 331.266 cv
347.029 330.549 346.011 330.146 345.888 330.342 cv
345.888 330.342 li
345.641 330.734 349.325 333.162 353.86 335.811 cv
cp
f
44.9377 321.604 mo
51.4117 320.717 58.8454 320.027 66.1207 320.078 cv
58.9964 319.86 51.5302 320.281 44.9377 321.604 cv
cp
f
174.572 299.086 mo
186.606 302.518 li
186.565 301.69 li
174.572 299.086 li
cp
f
29.6905 282.106 mo
25.4144 283.68 21.1035 283.982 19.3755 286.181 cv
18.4367 287.376 19.0382 291.315 19.0382 291.315 cv
19.0382 291.315 26.8484 302.255 36.4215 322.947 cv
38.9482 322.494 41.8381 322.028 44.9377 321.604 cv
51.5302 320.281 58.9964 319.86 66.1207 320.078 cv
71.2769 320.113 76.3472 320.517 80.9205 321.495 cv
76.5265 320.746 71.4205 320.24 66.1207 320.078 cv
58.8454 320.027 51.4117 320.717 44.9377 321.604 cv
42.8782 322.017 40.8947 322.508 39.0464 323.106 cv
38.6772 323.226 39.026 327.795 38.6656 327.914 cv
40.4305 331.908 42.2318 336.177 44.046 340.792 cv
108.416 315.514 170.818 340.807 170.818 340.807 cv
170.818 340.807 178.844 324.551 186.804 306.556 cv
186.606 302.518 li
174.572 299.086 li
186.565 301.69 li
186.606 302.518 li
188.373 303.022 li
190.796 297.46 193.164 291.819 195.243 286.515 cv
195.56 285.707 195.745 280.152 196.048 279.361 cv
166.989 261.841 144.421 264.255 99.6748 264.018 cv
99.6748 264.018 li
54.9282 263.781 29.6905 282.106 29.6905 282.106 cv
cp
f
196.173 279.162 mo
167.114 261.643 144.421 259.302 99.6748 259.065 cv
54.9282 258.828 29.6905 277.153 29.6905 277.153 cv
23.0913 279.582 19.0381 286.362 19.0381 286.362 cv
19.0381 286.362 26.8483 297.302 36.4214 317.994 cv
47.9662 315.925 66.805 313.521 80.9204 316.542 cv
68.4059 314.409 50.8993 318.922 38.6656 322.961 cv
40.4304 326.954 42.2317 331.224 44.0459 335.839 cv
108.416 310.561 170.818 335.853 170.818 335.853 cv
170.818 335.853 178.844 319.598 186.804 301.602 cv
174.572 294.133 li
188.373 298.069 li
191.165 291.66 193.884 285.145 196.173 279.162 cv
cp
.901961 .690196 .458824 rgb
f
196.173 279.163 mo
191.917 276.597 187.804 274.391 183.732 272.435 cv
171.463 295.611 136.649 315.276 86.0529 309.914 cv
59.4486 307.095 43.4524 309.398 33.9001 312.727 cv
34.7303 314.434 35.5578 316.128 36.4211 317.995 cv
47.9658 315.926 66.8047 313.521 80.9201 316.543 cv
68.4056 314.41 50.899 318.922 38.6652 322.962 cv
40.4301 326.955 42.2314 331.225 44.0456 335.839 cv
108.416 310.562 170.818 335.854 170.818 335.854 cv
170.818 335.854 178.844 319.598 186.803 301.603 cv
174.572 294.134 li
188.372 298.07 li
191.165 291.66 193.884 285.146 196.173 279.163 cv
cp
.878431 .643137 .396078 rgb
f
174.338 328.56 mo
175.361 326.437 175.858 325.386 177.298 322.333 cv
174.06 321.644 170.805 321.04 167.547 320.587 cv
161.983 319.814 156.879 317.751 151.46 316.411 cv
141.432 313.932 131.197 311.508 120.846 311.073 cv
117.781 310.944 114.741 311.512 111.689 311.448 cv
111.588 311.446 110.765 311.293 110.731 311.354 cv
110.634 311.528 111.117 311.457 111.314 311.485 cv
112.534 311.655 113.757 311.872 114.978 312.028 cv
117.217 312.314 119.477 312.418 121.72 312.665 cv
128.09 313.368 134.404 314.456 140.617 316.036 cv
149.491 318.293 157.409 322.813 165.965 325.963 cv
166.544 326.177 170.504 327.371 174.338 328.56 cv
cp
.776471 .513726 .258824 rgb
f
56.4968 322.461 mo
50.7149 323.479 45.0628 324.147 39.3991 324.667 cv
39.7102 325.38 40.0236 326.111 40.3366 326.842 cv
45.9591 326.24 52.5239 325.936 54.4782 325.701 cv
80.713 322.553 107.382 316.635 133.562 323.885 cv
137.527 324.983 142.54 326.035 145.861 328.547 cv
145.981 328.638 146.103 328.77 146.224 328.883 cv
150.057 329.684 153.423 330.511 156.456 331.32 cv
153.627 329.337 150.839 327.383 147.776 325.701 cv
136.302 319.4 122.77 317.046 108.825 316.805 cv
90.8968 316.495 72.2868 319.68 56.4968 322.461 cv
cp
f
146.715 271.478 mo
142.923 271.007 139.105 270.75 135.33 270.148 cv
130.498 269.378 125.735 267.884 120.846 267.545 cv
119.42 267.447 117.987 267.393 116.549 267.374 cv
112.238 267.316 107.892 267.567 103.613 267.844 cv
92.5589 268.56 81.1416 269.947 70.3366 272.414 cv
53.4452 276.272 36.6303 281.577 21.5105 290.123 cv
21.7226 290.458 21.9009 290.737 22.1374 291.118 cv
22.6298 290.855 23.1596 290.597 23.74 290.34 cv
29.9625 287.583 36.3196 284.417 42.6569 281.948 cv
46.5495 280.431 50.6648 279.739 54.6452 278.558 cv
57.7212 277.645 60.6203 276.25 63.7595 275.524 cv
69.0868 274.293 74.5301 274.002 79.9519 273.52 cv
86.0979 272.975 92.2283 271.779 98.3694 271.291 cv
104.925 270.77 111.484 271.412 118.036 271.666 cv
126.812 272.006 135.448 272.477 144.258 272.227 cv
146.736 272.157 149.29 272.083 151.751 272.395 cv
152.718 272.518 154.983 273.74 154.644 272.826 cv
154.205 271.642 148.142 271.656 146.715 271.478 cv
cp
f
182.113 311.973 mo
180.091 310.978 178.053 310.015 175.996 309.069 cv
168.851 305.785 161.346 303.913 153.623 302.514 cv
143.446 300.67 133.292 300.002 123.149 300.033 cv
100.833 300.1 78.5702 303.551 56.2258 305.305 cv
47.9093 305.957 39.471 305.938 31.2356 307.388 cv
32.0744 309.024 32.9259 310.725 33.8137 312.547 cv
42.48 311.096 51.1416 309.634 59.8484 308.376 cv
91.937 303.743 115.748 301.261 147.963 306.053 cv
155.104 307.115 170.87 310.04 180.871 314.713 cv
181.271 313.847 181.703 312.867 182.113 311.973 cv
cp
f
193.369 286.185 mo
193.725 285.311 194.056 284.463 194.4 283.601 cv
186.265 282.049 174.999 281.215 171.251 280.937 cv
165.064 280.477 158.77 280.249 152.454 280.265 cv
141.929 280.291 131.343 280.995 121.095 282.435 cv
111.931 283.723 102.844 285.476 93.6657 286.705 cv
78.3553 288.756 62.5919 288.87 47.4236 291.875 cv
40.3593 293.274 32.8698 295.12 26.0105 297.67 cv
26.1253 297.872 26.226 298.04 26.343 298.247 cv
39.7218 292.471 61.9497 292.519 75.4768 291.37 cv
83.3994 290.696 91.371 290.247 99.2644 289.289 cv
110.12 287.973 120.935 285.659 131.856 284.908 cv
138.048 284.482 144.226 284.814 150.418 284.814 cv
160.956 284.814 171.609 284.714 182.114 285.638 cv
185.823 285.964 189.625 285.902 193.369 286.185 cv
cp
f
117.734 286.703 mo
119.086 286.502 120.466 286.299 121.852 286.099 cv
137.79 283.8 147.316 283.137 156.798 283.347 cv
162.114 283.47 165.059 283.354 165.093 283.173 cv
165.126 282.992 161.944 282.746 156.846 282.362 cv
147.7 281.677 137.211 282.18 121.612 284.434 cv
120.219 284.636 118.84 284.842 117.485 285.049 cv
104.226 287.068 99.2055 287.995 89.8505 289.06 cv
82.8407 289.858 78.529 290.08 78.534 290.298 cv
78.5387 290.516 82.8777 290.691 89.9547 290.187 cv
98.1947 289.601 105.67 288.499 117.734 286.703 cv
cp
.65098 .392157 .145098 rgb
f
126.007 270.379 mo
126.007 270.379 li
126.007 270.379 li
126.007 270.379 li
cp
f
97.3911 270.638 mo
97.4596 270.63 li
105.711 269.655 112.08 269.513 117.628 269.801 cv
122.782 270.068 125.96 270.606 126.007 270.379 cv
126.052 270.152 122.932 269.196 117.724 268.619 cv
112.218 268.009 105.509 267.978 97.2614 268.962 cv
97.1921 268.97 li
89.4992 269.889 82.017 271.502 77.1732 272.642 cv
72.1078 273.834 69.0099 274.708 69.057 274.935 cv
69.104 275.162 72.2935 274.698 77.4113 273.805 cv
82.0684 272.993 90.032 271.514 97.3911 270.638 cv
cp
f
127.574 301.483 mo
136.109 301.954 143.657 302.787 149.637 303.535 cv
153.273 303.996 156.205 303.999 158.187 304.271 cv
160.168 304.543 161.252 304.879 161.296 304.76 cv
161.385 304.523 156.787 303.446 149.822 302.278 cv
143.88 301.274 136.239 300.277 127.666 299.804 cv
118.065 299.275 109.924 299.548 103.588 300.109 cv
97.4472 300.653 93.6931 301.378 93.7208 301.608 cv
93.7484 301.839 97.5429 301.532 103.664 301.293 cv
110.08 301.044 117.946 300.951 127.574 301.483 cv
cp
f
147.635 317.609 mo
150.147 318.642 153.346 319.456 157.382 319.872 cv
157.421 319.876 li
160.9 320.238 165.144 320.33 167.265 320.373 cv
169.767 320.424 171.332 320.431 171.362 320.203 cv
171.392 319.972 169.873 319.549 167.361 319.191 cv
164.854 318.834 161.373 318.6 157.595 318.205 cv
157.557 318.201 li
153.519 317.772 150.642 317.212 148.02 316.489 cv
145.635 315.832 144.185 315.256 144.079 315.461 cv
143.972 315.668 145.26 316.633 147.635 317.609 cv
cp
f
144.078 315.461 mo
144.078 315.461 144.079 315.461 144.079 315.461 cv
144.079 315.461 li
144.078 315.461 li
cp
f
78.0915 321.388 mo
82.227 320.999 87.9011 320.2 94.1534 319.524 cv
94.1535 319.524 94.2105 319.518 94.2105 319.518 cv
100.893 318.802 105.69 318.586 110.215 318.677 cv
114.307 318.76 116.845 319.054 116.884 318.826 cv
116.922 318.597 114.429 317.886 110.283 317.495 cv
105.858 317.078 100.62 317.134 94.0305 317.848 cv
93.9729 317.854 li
88.2479 318.473 81.4329 319.62 77.937 320.21 cv
73.8588 320.898 71.3299 321.351 71.3526 321.58 cv
71.3526 321.58 li
71.3756 321.813 73.9524 321.777 78.0915 321.388 cv
cp
f
174.166 404.372 mo
174.671 396.763 171.737 386.516 162.479 386.544 cv
153.22 386.573 128.044 396.936 121.041 394.026 cv
114.039 391.115 110.403 385.927 104.646 383.16 cv
98.8891 380.393 89.1597 380.019 79.3966 384.371 cv
69.6336 388.723 64.752 399.819 37.1798 398.781 cv
37.1798 398.781 33.0353 408.742 33.2862 417.861 cv
33.3504 420.194 34.6031 423.666 35.2272 425.498 cv
40.6474 427.169 46.8756 427.89 46.8756 427.89 cv
35.5068 441.46 li
37.3481 448.9 li
37.3481 448.9 54.5513 445.961 57.4465 451.782 cv
60.3418 457.604 62.3618 459.42 75.2557 460.861 cv
88.1497 462.302 106.127 459.939 109.797 455.097 cv
113.466 450.255 113.466 447.344 119.593 444.318 cv
125.721 441.292 124.509 437.141 125.889 432.588 cv
127.269 428.034 130.03 430.541 132.016 424.576 cv
134.002 418.61 132.184 413.681 132.184 413.681 cv
132.184 413.681 134.002 411.808 144.27 411.347 cv
154.538 410.886 173.661 411.981 174.166 404.372 cv
cp
f
172.135 397.035 mo
172.64 389.426 168.735 385.536 159.477 385.564 cv
150.218 385.593 126.013 389.599 119.01 386.688 cv
112.008 383.778 108.372 378.59 102.615 375.823 cv
96.8583 373.056 87.1289 372.682 77.3658 377.033 cv
67.6028 381.385 62.7213 392.481 35.149 391.444 cv
35.149 391.444 30.1328 409.169 33.1964 418.161 cv
38.6166 419.832 44.8448 420.553 44.8448 420.553 cv
33.1964 423.925 li
35.3173 441.563 li
35.3173 441.563 52.5205 438.623 55.4157 444.445 cv
58.311 450.267 60.331 452.083 73.2249 453.524 cv
86.1189 454.965 104.096 452.601 107.766 447.76 cv
111.435 442.918 111.435 440.007 117.563 436.981 cv
123.69 433.954 122.478 429.804 123.858 425.251 cv
125.238 420.697 127.999 423.204 129.985 417.238 cv
131.972 411.272 130.154 406.344 130.154 406.344 cv
130.154 406.344 131.972 404.471 142.24 404.01 cv
152.508 403.549 171.63 404.644 172.135 397.035 cv
cp
.901961 .690196 .458824 rgb
f
172.134 397.035 mo
172.332 394.065 171.847 391.671 170.645 389.847 cv
164.951 391.502 155.757 392.782 140.195 395.495 cv
106.466 401.375 117.502 421.004 84.8034 434.486 cv
64.2905 442.944 45.5703 438.735 34.4597 434.425 cv
35.3181 441.563 li
35.3181 441.563 52.5205 438.624 55.4157 444.446 cv
58.311 450.267 60.3314 452.082 73.2253 453.523 cv
86.1193 454.964 104.097 452.601 107.766 447.759 cv
111.436 442.917 111.436 440.007 117.563 436.981 cv
123.69 433.955 122.477 429.804 123.858 425.25 cv
125.238 420.697 127.999 423.204 129.985 417.238 cv
131.971 411.272 130.153 406.344 130.153 406.344 cv
130.153 406.344 131.972 404.471 142.24 404.01 cv
152.508 403.549 171.629 404.643 172.134 397.035 cv
cp
.878431 .643137 .396078 rgb
f
32.2155 410.581 mo
36.2472 409.42 40.5498 408.879 43.8816 408.635 cv
53.3397 407.94 62.9162 405.334 72.3728 404.105 cv
77.4323 403.448 82.5263 403.774 87.5295 402.569 cv
106.38 398.029 124.804 391.523 144.009 388.531 cv
150.508 387.519 157.129 386.686 163.674 385.89 cv
162.418 385.675 161.029 385.56 159.477 385.565 cv
154.362 385.581 144.719 386.786 135.902 387.393 cv
127.62 389.166 119.475 391.333 111.017 393.378 cv
94.6613 397.334 78.0861 400.137 61.4524 402.649 cv
52.7772 403.959 44.1459 405.489 35.5832 407.416 cv
34.4776 407.665 33.3817 407.953 32.2829 408.227 cv
32.2395 409.019 32.2188 409.804 32.2155 410.581 cv
cp
.776471 .513726 .258824 rgb
f
99.6291 374.718 mo
97.9221 374.233 96.0122 373.918 93.9543 373.805 cv
88.3941 376.345 82.0312 377.795 76.1682 379.234 cv
74.8543 379.556 73.5335 379.828 72.2072 380.069 cv
68.5876 382.597 64.8869 385.641 59.3181 387.96 cv
67.6147 386.115 75.6795 384.605 83.7912 381.909 cv
89.1648 380.122 94.5044 377.481 99.6291 374.718 cv
cp
f
43.1169 391.383 mo
43.4007 391.383 43.6891 391.398 43.9709 391.392 cv
45.2688 391.365 46.5816 391.193 47.8996 390.941 cv
46.4057 391.139 44.8133 391.287 43.1169 391.383 cv
cp
f
32.9582 401.893 mo
34.9365 401.865 36.7399 401.897 37.76 401.775 cv
53.642 399.869 70.2822 398.591 85.6164 393.749 cv
94.8723 390.826 103.728 386.348 112.911 383.161 cv
112.304 382.718 111.711 382.272 111.135 381.818 cv
107.426 382.912 103.732 384.066 100.067 385.326 cv
92.4399 387.949 84.7893 389.778 76.905 391.524 cv
62.5033 394.712 48.1752 397.788 33.5163 398.68 cv
33.3221 399.708 33.1309 400.752 32.9582 401.893 cv
cp
f
120.289 435.175 mo
121.146 434.391 121.705 433.552 122.104 432.673 cv
118.519 431.777 114.881 431.138 111.193 431.044 cv
109.874 431.01 108.563 431.007 107.261 431.034 cv
88.9823 431.404 72.2811 437.576 56.0559 445.647 cv
57.2961 447.944 58.5489 449.561 60.78 450.73 cv
76.1982 439.327 93.1212 435.741 112.37 435.069 cv
115.049 434.976 117.679 434.968 120.289 435.175 cv
cp
f
123.858 425.25 mo
123.889 425.146 123.926 425.064 123.959 424.968 cv
120.276 424.318 116.555 423.878 112.84 423.654 cv
100.876 422.931 88.8789 423.416 76.905 423.309 cv
71.3039 423.26 65.7798 423.101 60.2644 423.173 cv
54.749 423.246 49.2422 423.549 43.6765 424.421 cv
40.2628 424.956 36.8758 425.664 33.4973 426.419 cv
34.0466 430.987 li
39.4964 428.932 44.5712 427.288 47.0603 426.806 cv
53.0523 425.646 59.3916 425.722 65.4558 424.978 cv
67.554 424.72 69.6724 424.538 71.7839 424.448 cv
72.6759 424.409 75.2758 424.055 74.4616 424.421 cv
69.9984 426.429 64.375 426.823 59.7165 428.871 cv
52.5548 432.021 46.1823 436.675 38.8205 439.361 cv
38.459 439.493 36.4351 440.075 35.1848 440.45 cv
35.3181 441.563 li
35.3181 441.563 41.5012 440.518 47.0793 440.927 cv
52.2265 438.031 57.4662 435.298 62.9245 433.109 cv
81.9541 425.477 103.275 423.941 123.474 426.812 cv
123.579 426.297 123.698 425.777 123.858 425.25 cv
cp
f
164.67 397.139 mo
167.171 397.006 169.658 396.722 172.151 396.534 cv
172.185 395.704 172.168 394.916 172.09 394.18 cv
169.004 394.452 166.164 394.732 164.759 394.808 cv
153.58 395.415 141.901 395.904 130.971 398.464 cv
116.282 401.905 102.197 407.863 87.4709 410.939 cv
74.7552 413.595 61.8829 414.862 48.9441 415.84 cv
43.5608 416.247 38.0299 415.486 32.6272 415.839 cv
32.7754 416.655 32.9524 417.443 33.197 418.161 cv
34.1529 418.455 35.1283 418.71 36.0959 418.947 cv
36.2726 418.931 36.5186 418.896 36.6716 418.886 cv
41.5361 418.568 46.3557 417.759 51.2395 417.72 cv
64.6522 417.611 78.9696 418.685 92.091 415.336 cv
105.225 411.984 117.438 405.503 130.589 402.014 cv
141.849 399.025 153.069 397.753 164.67 397.139 cv
cp
f
73.2253 453.523 mo
76.9182 453.936 81.0266 454.027 85.0979 453.847 cv
87.1712 452.374 89.6783 450.85 92.9157 449.268 cv
97.3825 447.085 103.401 445.61 109.357 445.449 cv
110.096 444.289 110.713 443.241 111.354 442.276 cv
110.72 442.269 110.098 442.245 109.449 442.257 cv
96.9113 442.488 81.8765 446.391 70.6369 453.186 cv
71.4807 453.299 72.2661 453.416 73.2253 453.523 cv
cp
f
96.6505 411.485 mo
88.4924 414.201 76.7132 415.381 76.7132 415.381 cv
91.1355 418.921 119.189 403.038 119.189 403.038 cv
119.189 403.038 104.809 408.769 96.6505 411.485 cv
cp
.65098 .392157 .145098 rgb
f
53.4989 399.03 mo
57.6637 398.863 62.5961 398.214 68.6996 396.852 cv
74.2495 395.613 80.1315 393.909 83.5806 392.875 cv
87.3509 391.743 89.657 390.98 89.6032 390.754 cv
89.5494 390.529 87.136 390.884 83.2827 391.72 cv
79.4295 392.555 74.1464 393.906 68.3322 395.21 cv
62.1156 396.605 57.6591 397.351 53.4062 397.853 cv
49.5603 398.307 47.1362 398.429 47.1332 398.661 cv
47.1304 398.893 49.57 399.189 53.4989 399.03 cv
cp
f
80.0998 438.026 mo
81.4779 437.68 82.895 437.369 84.385 437.074 cv
88.6245 436.234 92.6362 435.647 95.9231 435.022 cv
101.265 434.011 104.619 433.261 104.599 432.976 cv
104.579 432.691 100.973 432.961 95.7036 433.658 cv
92.7154 434.052 88.0694 434.631 84.0585 435.427 cv
82.5447 435.727 81.0933 436.06 79.6872 436.437 cv
75.0042 437.692 71.4679 439.374 68.8996 441.036 cv
66.4375 442.63 65.2262 443.931 65.3515 444.088 cv
65.4768 444.245 66.9001 443.249 69.4292 441.951 cv
72.1099 440.575 75.4902 439.185 80.0998 438.026 cv
cp
f
90.661 447.231 mo
94.0496 445.918 96.8994 445.478 96.8876 445.015 cv
96.8736 444.461 93.7199 444.269 90.0585 445.661 cv
86.4704 447.025 83.9911 448.919 84.2025 449.332 cv
84.4138 449.745 87.2725 448.544 90.661 447.231 cv
cp
f
67.5719 429.859 mo
72.108 428.18 75.529 427.279 78.6836 426.695 cv
81.583 426.159 83.4521 426.016 83.4521 425.784 cv
83.4521 425.553 81.5547 425.279 78.5286 425.532 cv
75.3365 425.799 71.5354 426.612 66.9898 428.28 cv
62.7387 429.84 58.6507 431.859 56.0781 433.209 cv
53.37 434.63 51.7612 435.599 51.857 435.81 cv
51.9528 436.021 53.7454 435.434 56.5802 434.297 cv
59.4151 433.16 63.2835 431.448 67.5719 429.859 cv
cp
f
167.765 466.155 mo
167.872 468.92 169.619 472.307 169.651 472.913 cv
169.828 476.25 320.518 475.032 320.518 475.032 cv
325.816 422.533 li
323.746 415.586 li
299.327 415.381 li
308.569 391.595 li
308.569 391.595 308.488 385.605 306.335 384.587 cv
301.134 382.128 286.988 382.906 255.474 380.47 cv
210.914 377.027 184.1 386.273 184.1 386.273 cv
192.372 414.375 li
167.885 425.764 li
167.885 425.764 167.282 453.673 167.765 466.155 cv
cp
f
167.671 466.066 mo
167.848 469.404 318.539 468.185 318.539 468.185 cv
323.836 415.686 li
297.348 408.535 li
306.589 384.749 li
306.589 384.749 298.054 377.067 253.494 373.624 cv
208.935 370.18 183.506 385.649 183.506 385.649 cv
190.393 407.528 li
165.905 418.918 li
165.905 418.918 167.495 462.729 167.671 466.066 cv
cp
.901961 .690196 .458824 rgb
f
318.538 468.185 mo
321.824 435.623 li
307.081 445.169 284.324 454.643 249.486 459.358 cv
198.435 466.267 176.439 456.989 166.997 448.456 cv
167.281 456.062 167.608 464.883 167.671 466.067 cv
167.848 469.404 318.538 468.185 318.538 468.185 cv
cp
.878431 .643137 .396078 rgb
f
320.781 445.965 mo
315.854 444.756 310.295 443.965 303.72 443.718 cv
302.209 443.661 300.723 443.631 299.252 443.624 cv
288.953 443.574 279.326 444.665 266.358 445.839 cv
257.92 446.599 249.102 447.555 239.977 448.744 cv
228.934 450.182 218.448 451.829 208.581 453.61 cv
195.562 455.96 183.841 458.347 173.911 460.184 cv
171.665 460.599 169.545 460.971 167.489 461.325 cv
167.522 462.114 167.618 464.759 167.636 465.129 cv
169.842 464.886 172.144 464.609 174.565 464.284 cv
185.941 462.759 195.185 461.133 209.473 458.825 cv
219.324 457.233 229.708 455.702 240.696 454.27 cv
249.768 453.089 258.5 452.074 266.881 451.191 cv
282.168 449.589 291.586 448.104 303.651 448.027 cv
310.19 447.986 315.583 448.432 320.447 449.274 cv
320.781 445.965 li
cp
.835294 .596078 .34902 rgb
f
266.243 460.332 mo
264.324 460.498 262.394 460.683 260.45 460.886 cv
243.725 462.629 227.27 465.6 214.102 468.186 cv
223.938 468.294 234.461 468.351 245.024 468.378 cv
250.361 467.659 255.734 466.978 261.027 466.427 cv
262.944 466.228 264.845 466.042 266.734 465.872 cv
287.301 464.018 304.171 464.212 318.812 465.478 cv
319.237 461.268 li
310.437 460.043 300.689 459.287 289.799 459.283 cv
282.449 459.28 274.604 459.607 266.243 460.332 cv
cp
f
240.65 409.534 mo
240.656 409.535 240.636 409.587 240.595 409.692 cv
240.578 409.702 240.545 409.712 240.525 409.722 cv
240.595 409.608 240.642 409.534 240.65 409.534 cv
cp
212.576 414.528 mo
211.641 414.621 210.706 414.739 209.771 414.894 cv
207.398 415.29 205.043 415.768 202.833 416.209 cv
192.579 418.253 184.566 419.818 176.223 421.347 cv
172.511 422.018 169.195 422.721 166.07 423.405 cv
166.094 424.065 166.165 426.012 166.205 427.112 cv
169.044 426.649 172.241 426.129 176.879 425.507 cv
185.038 424.424 193.758 423.043 203.784 421.285 cv
206.016 420.894 208.342 420.471 210.597 420.138 cv
211.401 420.019 212.223 419.929 213.064 419.86 cv
218.177 419.429 223.035 418.617 228.219 417.808 cv
230.957 417.382 233.885 416.966 236.79 416.41 cv
237.95 416.191 239.169 415.944 240.418 415.609 cv
240.709 415.531 241.001 415.448 241.294 415.36 cv
241.806 415.215 242.424 415 243.119 414.66 cv
243.441 414.836 244.199 414.132 245.136 412.439 cv
245.304 410.802 244.993 409.712 244.318 409.235 cv
243.691 408.641 243.171 408.304 242.819 408.175 cv
241.753 407.665 240.763 407.37 239.916 407.163 cv
238.512 406.792 237.077 406.49 235.611 406.288 cv
233.134 405.958 230.663 405.868 228.275 405.876 cv
225.886 405.884 223.577 405.99 221.422 406.046 cv
209.221 406.331 198.482 407.127 188.728 408.302 cv
176.482 413.999 li
178.945 413.705 181.53 413.422 184.442 413.157 cv
195.398 412.16 207.369 411.557 221.508 411.435 cv
225.151 411.413 228.924 411.24 232.464 411.515 cv
230.759 411.798 229.043 412.069 227.35 412.345 cv
222.103 413.197 217.417 414.046 212.576 414.528 cv
cp
f
322.194 431.962 mo
318.611 431.578 314.774 431.312 310.597 431.228 cv
308.795 431.189 306.991 431.18 305.179 431.198 cv
292.494 431.322 279.426 432.8 263.958 435.141 cv
258.342 435.987 252.689 436.872 246.833 437.801 cv
212.366 443.271 194.217 446.231 170.057 448.692 cv
168.933 448.807 168.093 448.869 167.018 448.974 cv
167.078 450.585 167.107 451.302 167.161 452.744 cv
168.232 452.7 169.237 452.67 170.356 452.614 cv
192.644 451.483 215.362 448.454 247.709 443.312 cv
254.789 442.184 257.72 441.708 264.8 440.58 cv
282.507 437.772 296.392 435.959 310.578 435.767 cv
314.636 435.718 318.335 435.821 321.784 436.023 cv
322.194 431.962 li
cp
f
282.383 381.024 mo
277.132 380.472 271.532 378.447 265.133 377.123 cv
262.616 376.596 260.044 376.082 257.432 375.594 cv
251.988 374.576 246.847 373.769 241.949 373.134 cv
241.791 373.133 241.628 373.126 241.471 373.125 cv
230.174 373.07 220.398 374.218 212.24 375.831 cv
224.737 376.212 238.484 377.767 256.41 381.09 cv
258.986 381.567 261.532 382.059 264.027 382.553 cv
269.907 383.73 275.827 385.69 281.892 386.209 cv
291.167 386.957 299.397 386.482 306.301 385.492 cv
306.59 384.749 li
306.59 384.749 305.127 383.476 300.48 381.743 cv
295.042 381.9 288.98 381.746 282.383 381.024 cv
cp
f
265.928 412.497 mo
265.929 412.495 265.929 412.492 265.929 412.49 cv
265.885 412.523 265.785 412.608 265.652 412.764 cv
265.31 413.073 264.785 413.343 264.154 413.65 cv
264.124 413.664 264.094 413.679 264.064 413.693 cv
262.473 414.429 260.636 414.901 258.715 415.351 cv
256.713 415.808 254.657 416.161 252.595 416.482 cv
251.238 416.691 249.805 416.857 248.258 417.159 cv
222.315 422.283 197.954 425.435 181.495 427.521 cv
175.393 428.287 170.369 429.355 166.318 430.175 cv
166.351 431.106 166.37 431.602 166.408 432.658 cv
170.633 432.25 175.851 431.545 181.846 431.138 cv
198.632 429.994 222.892 427.575 249.305 422.568 cv
250.554 422.329 251.936 422.182 253.427 421.957 cv
255.557 421.641 257.744 421.271 259.943 420.778 cv
262.002 420.328 264.193 419.739 266.366 418.766 cv
266.408 418.747 266.45 418.729 266.491 418.71 cv
267.37 418.32 268.311 417.784 269.236 417.028 cv
270.009 416.451 270.735 415.51 271.23 414.2 cv
271.657 412.832 271.622 411.396 271.139 410.059 cv
270.601 408.719 269.835 407.685 269.021 406.937 cv
267.02 405.044 264.758 403.842 262.678 402.954 cv
260.436 401.957 258.164 401.168 255.938 400.503 cv
254.507 400.075 253.084 399.701 251.689 399.355 cv
244.889 397.682 238.106 396.987 231.625 396.91 cv
223.291 396.811 215.459 397.732 208.738 398.904 cv
201.179 400.214 194.635 401.655 188.987 403.067 cv
190.08 406.538 li
196.205 405.334 203.064 404.056 209.397 403.221 cv
221.091 401.691 236.013 400.805 250.354 404.595 cv
251.697 404.946 253.034 405.314 254.344 405.723 cv
256.418 406.37 258.469 407.095 260.413 407.983 cv
262.269 408.866 263.997 409.723 265.134 410.904 cv
265.541 411.352 265.863 411.706 265.92 411.98 cv
265.981 412.123 265.985 412.346 265.929 412.49 cv
265.959 412.469 265.968 412.466 265.928 412.497 cv
cp
f
186.04 393.704 mo
186.777 396.043 li
191.008 394.258 197.17 392.05 205.194 390.787 cv
213.141 389.536 221.751 389.318 232.153 390.024 cv
238.695 390.472 245.298 391.257 252.443 392.246 cv
255 392.6 257.559 392.97 260.054 393.334 cv
269.983 394.788 278.041 396.035 286.763 396.768 cv
291.91 397.188 297.154 397.045 301.95 396.689 cv
303.581 392.492 li
298.294 392.586 292.433 392.497 287.27 391.846 cv
278.293 390.746 271.337 389.463 260.878 387.853 cv
258.368 387.466 255.801 387.082 253.208 386.724 cv
246 385.726 239.188 384.996 232.464 384.674 cv
229.795 384.544 227.22 384.486 224.731 384.5 cv
217.266 384.542 210.572 385.236 204.401 386.595 cv
196.233 388.391 190.098 391.221 186.04 393.704 cv
cp
f
265.929 412.49 mo
265.929 412.492 265.929 412.495 265.928 412.497 cv
265.968 412.466 265.959 412.469 265.929 412.49 cv
cp
f
291.72 414.17 mo
283.55 416.153 274.687 418.824 265.187 421.065 cv
255.566 423.335 245.102 425.733 234.396 427.954 cv
206.628 433.717 185.404 436.554 166.6 437.921 cv
166.674 439.923 166.676 439.992 166.753 442.062 cv
185.642 441.606 208.038 439.12 235.53 433.418 cv
246.353 431.174 256.807 428.679 266.453 426.22 cv
276.151 423.749 284.92 420.845 292.88 418.593 cv
302.472 415.899 309.138 414.24 315.852 413.53 cv
306.745 411.072 li
302.26 411.744 297.395 412.783 291.72 414.17 cv
cp
f
258.865 390.457 mo
267.154 391.702 274.62 393.107 279.814 393.924 cv
281.307 394.16 282.899 394.119 283.865 394.104 cv
286.155 394.091 287.32 394.182 287.393 393.967 cv
287.465 393.752 286.146 393.179 283.952 392.856 cv
283.043 392.716 281.352 392.529 280.173 392.21 cv
275.281 390.926 267.448 389.102 259.251 387.877 cv
251.106 386.66 244.363 386.289 238.891 386.44 cv
233.666 386.583 230.459 387.165 230.48 387.524 cv
230.501 387.883 233.721 387.951 238.859 388.275 cv
244.496 388.631 250.564 389.211 258.865 390.457 cv
cp
.65098 .392157 .145098 rgb
f
265.441 415.31 mo
264.147 416.941 262.285 417.412 262.382 417.761 cv
262.479 418.11 264.287 418.535 266.712 416.657 cv
267.861 415.692 268.63 414.357 269.225 412.78 cv
269.871 411.163 269.942 409.082 268.898 407.198 cv
268.706 406.88 268.495 406.578 268.267 406.291 cv
267.282 405.052 266.048 404.184 264.911 403.56 cv
263.095 402.532 261.212 401.856 259.796 401.408 cv
257.009 400.518 255.296 400.138 255.123 400.484 cv
255.123 400.484 li
254.95 400.83 256.539 401.918 259.056 403.208 cv
260.3 403.848 262.133 404.742 263.618 405.702 cv
264.572 406.341 265.572 407.058 266.242 407.901 cv
266.399 408.098 266.537 408.301 266.654 408.511 cv
267.298 409.51 267.302 410.867 266.978 411.981 cv
266.467 413.514 266.147 414.52 265.441 415.31 cv
cp
f
216.912 446.657 mo
216.915 446.656 li
224.045 445.367 232.472 443.54 239.603 442.25 cv
245.401 441.202 249.027 440.69 249.003 440.332 cv
248.979 439.973 245.275 439.839 239.348 440.428 cv
232.454 441.114 226.263 442.3 216.447 444.093 cv
216.444 444.094 li
206.706 445.862 200.399 446.788 193.684 447.298 cv
187.84 447.741 184.18 447.676 184.152 448.034 cv
184.123 448.393 187.777 449.11 193.749 449.135 cv
200.223 449.162 207.492 448.383 216.912 446.657 cv
cp
f
310.515 445.587 mo
310.53 445.648 310.629 445.787 310.785 445.577 cv
310.801 445.556 310.808 445.526 310.807 445.498 cv
310.805 445.456 310.8 445.414 310.801 445.362 cv
310.595 445.208 310.216 445.028 309.828 444.788 cv
308.903 444.501 307.785 444.287 306.125 444.041 cv
304.876 443.856 303.454 443.683 301.84 443.523 cv
301.087 443.447 300.199 443.351 299.314 443.31 cv
295.695 443.138 291.713 443.2 287.265 443.521 cv
281.966 443.904 276.793 444.604 272.962 445.203 cv
267.219 446.095 263.722 446.891 263.741 447.315 cv
263.741 447.315 li
263.76 447.738 267.588 447.667 273.198 447.266 cv
278.088 446.911 282.564 446.475 287.454 446.119 cv
291.921 445.795 295.651 445.618 299.279 445.561 cv
300.061 445.547 300.961 445.577 301.723 445.588 cv
303.262 445.61 304.821 445.629 306.002 445.637 cv
306.989 445.645 309.456 445.632 309.704 445.629 cv
310.13 445.489 310.28 445.411 310.515 445.441 cv
310.574 445.415 310.621 445.4 310.655 445.4 cv
310.677 445.4 310.687 445.41 310.684 445.415 cv
310.658 445.465 310.501 445.526 310.515 445.587 cv
cp
f
2.14838 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
192.816 412.74 mo
171.791 422.519 li
171.991 427.99 172.918 453.205 173.24 461.249 cv
173.768 461.295 173.975 461.339 174.601 461.382 cv
178.571 461.657 184.429 461.883 191.463 462.06 cv
205.53 462.413 224.363 462.574 243.189 462.63 cv
278.266 462.735 308.707 462.488 313.341 462.453 cv
317.629 419.962 li
295.849 414.081 li
292.785 413.254 290.973 410.099 291.801 407.035 cv
291.854 406.838 291.918 406.643 291.992 406.453 cv
299.316 387.601 li
298.102 387.087 297.29 386.65 295.074 385.974 cv
287.922 383.792 275.031 381.052 253.05 379.353 cv
247.666 378.937 242.579 378.806 237.8 378.896 cv
213.261 379.358 197.311 385.375 190.449 388.572 cv
195.873 405.804 li
196.739 408.555 195.431 411.523 192.816 412.74 cv
cp
@
480.916 406.307 mo
480.916 406.307 480.083 399.208 477.812 399.01 cv
471.158 398.43 456.25 404.259 446.069 404.3 cv
439.476 380.538 423.995 376.198 398.978 379.29 cv
373.961 382.382 372.313 403.052 372.313 403.052 cv
338.584 407.446 li
335.513 469.885 li
337.995 477.592 li
481.152 476.616 li
480.916 406.307 li
cp
f
443.269 396.885 mo
436.676 373.123 421.195 368.783 396.178 371.875 cv
371.161 374.967 369.513 395.637 369.513 395.637 cv
335.784 400.031 li
335.196 470.177 li
478.352 469.201 li
478.116 398.892 li
478.116 398.892 456.926 396.83 443.269 396.885 cv
cp
.901961 .690196 .458824 rgb
f
472.334 398.39 mo
465.302 416.568 449.008 440.276 411.182 450.222 cv
370.047 461.037 346.87 457.435 335.339 453.296 cv
335.196 470.177 li
478.351 469.202 li
478.117 398.892 li
478.117 398.892 475.629 398.667 472.334 398.39 cv
cp
.878431 .643137 .396078 rgb
f
419.917 379.93 mo
423.163 378.673 426.102 377.229 429.043 375.604 cv
427.617 374.748 426.104 374.026 424.504 373.426 cv
422.129 374.334 419.729 375.168 417.399 375.96 cv
404.256 380.425 390.804 381.098 377.267 380.245 cv
375.709 381.768 374.452 383.366 373.454 384.935 cv
389.201 385.984 405.587 385.477 419.917 379.93 cv
cp
.776471 .513726 .258824 rgb
f
338.327 406.426 mo
337.462 406.382 336.597 406.351 335.731 406.335 cv
335.696 410.508 li
339.887 411.404 343.976 411.669 348.282 411.796 cv
358.694 412.103 369.303 410.541 379.674 409.785 cv
393.823 408.752 408.459 407.893 422.377 405.126 cv
435.118 402.594 447.963 397.892 461.094 397.55 cv
455.142 397.171 448.637 396.864 443.27 396.885 cv
443.269 396.881 443.268 396.877 443.267 396.873 cv
438.245 397.693 433.229 398.57 428.259 399.349 cv
404.39 403.09 381.079 407.086 356.851 407.086 cv
350.683 407.086 344.488 406.736 338.327 406.426 cv
cp
f
335.576 424.861 mo
343.314 424.678 351.244 424.959 358.887 423.936 cv
374.6 421.834 390.018 415.85 405.777 413.984 cv
426.669 411.51 447.21 416.418 467.626 420.093 cv
470.729 420.651 474.579 421.385 478.196 422.414 cv
478.184 419.057 li
474.97 417.982 471.708 417.106 468.503 416.403 cv
455.053 413.453 441.737 412.185 428.453 412.017 cv
406.312 411.737 384.261 414.509 361.829 417.624 cv
354.532 418.638 346.652 419.812 339.261 419.533 cv
338.026 419.486 336.824 419.39 335.623 419.337 cv
335.576 424.861 li
cp
f
369.513 395.637 mo
357.424 397.212 li
357.692 397.219 357.969 397.23 358.237 397.237 cv
369.404 397.521 380.096 396.622 391.042 394.692 cv
399.723 393.162 408.68 393.008 417.371 391.408 cv
424.742 390.051 431.76 388.273 439.26 387.947 cv
439.477 387.937 439.692 387.912 439.908 387.901 cv
439.61 387.299 439.303 386.716 438.986 386.151 cv
431.776 387.111 424.568 388.075 417.343 388.965 cv
401.339 390.936 386.166 393.289 370.329 391.815 cv
369.654 394.091 369.513 395.637 369.513 395.637 cv
cp
f
335.196 470.177 mo
335.883 470.173 li
335.659 470.101 335.423 470.043 335.198 469.972 cv
335.196 470.177 li
cp
f
449.157 461.557 mo
430.792 461.582 410.262 465.306 392.993 468.884 cv
391.514 469.19 390.031 469.5 388.55 469.814 cv
413.107 469.647 li
414.018 469.344 414.929 469.04 415.845 468.756 cv
423.976 466.235 432.855 465.838 441.241 464.787 cv
449.773 463.717 457.632 463.86 466.127 464.787 cv
470.202 465.231 474.254 464.908 478.338 465.144 cv
478.329 462.556 li
471.191 462.142 464.002 462.23 456.88 461.782 cv
454.36 461.624 451.78 461.553 449.157 461.557 cv
cp
f
335.429 442.421 mo
347.899 438.756 361.033 438.204 374.075 437.095 cv
387.661 435.94 401.224 433.48 414.912 433.48 cv
428.974 433.48 442.91 435.813 456.937 436.61 cv
462.247 436.912 472.758 436.81 478.256 440.804 cv
478.24 436.01 li
470.097 433.354 460.148 432.157 453.26 431.394 cv
443.583 430.322 433.893 429.8 424.202 429.692 cv
408.049 429.511 391.89 430.473 375.771 431.927 cv
362.379 433.136 348.928 435.073 335.485 435.771 cv
335.429 442.421 li
cp
f
335.284 459.765 mo
340.181 460.319 346.16 459.855 348.452 459.696 cv
360.653 458.852 372.792 457.299 385.019 456.819 cv
397.177 456.342 409.336 456.753 421.501 456.159 cv
436.821 455.41 451.984 453.566 467.173 451.552 cv
467.972 451.446 472.958 450.812 478.287 449.757 cv
478.278 447.267 li
473.258 448.479 464.149 449.323 462.932 449.438 cv
445.483 451.091 428.288 453.45 410.725 454.172 cv
403.819 454.456 396.89 453.907 389.996 453.868 cv
378.642 453.802 367.203 454.659 355.861 455.19 cv
350.233 455.454 344.7 456.362 339.064 455.929 cv
337.718 455.825 336.506 455.653 335.321 455.39 cv
335.284 459.765 li
cp
f
384.072 408.108 mo
398.798 406.831 413.731 405.073 428.246 401.949 cv
431.621 401.222 434.997 399.68 438.258 399.073 cv
384.072 408.108 li
cp
.65098 .392157 .145098 rgb
f
416.057 429.36 mo
394.078 429.734 372.083 432.289 350.588 436.767 cv
433.308 429.793 li
427.525 430.06 421.836 429.262 416.057 429.36 cv
cp
f
356.894 457.561 mo
394.235 455.41 li
381.722 455.019 369.232 455.08 356.894 457.561 cv
cp
f
434.468 455.805 mo
443.042 455.183 451.434 453.375 459.836 451.631 cv
394.235 455.41 li
407.672 455.83 421.136 456.771 434.468 455.805 cv
cp
f
340.803 409.126 mo
347.112 409.752 353.646 410.065 359.977 409.508 cv
340.803 409.126 li
cp
f
374.032 393.906 mo
386.798 394.749 400.37 393.232 412.975 390.801 cv
374.032 393.906 li
cp
f
420.752 375.988 mo
386.815 383.776 li
398.693 383.841 409.627 379.599 420.752 375.988 cv
cp
f
415.916 467.716 mo
455.056 464.051 li
442.186 462.037 428.482 464.701 415.916 467.716 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 26.4.1%%For: (Yuge) ()%%Title: (woddenboard.eps)%%CreationDate: 02/09/22 10.43%%Canvassize: 16383%AI9_DataStream%Gb"-6pO;DKdK$d1^cNZZ7YhI"k@?9gi.M7>K?4bMbaC]hfsb/e'Mp!t*RB1ImdKuPC3<TX='+[eDPJr"hQOr*eQ7(q=%)Ap:bA^?%T\pnVMJA*iiiG^JnkHFUd=+ZgFq&IT+t+qI?E?^JU<WVQ=5"Sl"eOZ+5-\4ks4!n^ph6fbVFphRI^UBiCN>:#Zl[GF_B1qn+MFC!%`fL#YO<>cOO2h?Pp($:=3u$ldF:1=NT7_dE')^0%Fuo[B(_FR4/>TgaJ04%U=^IT9f8SFGphmNH]iu$'P3^@*-g/u>;Xe[q=DeoL%NhEYsHsr@KMtp6FQi2;F$#lSBq#Wa^e)LgdSq6u[^_^CMZP4V_Qk=g;Zpb$<'-or$'Y/#(rW\a8Hp/6Ur\@9<qZT9/<jNeHOR=RA%:nkB>'+<1doR;7?dfc?Dk@+BG%GEf;7I7fHXquG@IRG,9NW:J5`IAJ=\hI`HqM&+[f3K:eVoRiL#5o\sl3`3]ShL@\.M1#44eVZ`%4\A!*o:C^0Y^`(t@:-7:it0$LR%X_OZT:,DR]Rb=#_Ra23?,<r(rWd)jq!H)/&_75q"T=C>(HBc8$!3-!;r%[EVKQWeQQA!ghN?^%0-U9Cn1>(d@0LmdZ2S4(SNbLu_!Ck,"$Z[3n@/\)B.MW4k)k**)Di4Vn>JUTpRBTGZIW,Uj7SM\!bb+kb<3.H/bIZT^FjoBZ-'f:%,t>L(#rl@pXUi1_([rp!iS$2HO218Cql,QqG?JAV<Yl,Qo4r7:#I.BL3)DBtPl#7p=q9/B)7;U"`VlWaPIoL]6*u)<4$lY[,<0\=%2GNV=WOBKH0A(/fO%sX8I\qUKm=3+m%JkcYI0Df.`C;mF&<6l//b@6u*UE?XfJqgJIq=QI^0&Un8:34aNPpP`H%$Zmqs9J[!jZ\G%f'2O^j!rO+D:iQcDSUOnRNJoInI,[,M6UUG[/S!fUM4j/Uf<<X->GiJ`mgu3jss*0.Y+#a9gsO>I"dacE2tfiE$0&O:16M!f9>M4%_D[gaJ4eA#p9PdU:@EM>J[UKF28qKW/Z4U\>Ghu0"/#h-Eo-&F<ra;+H.;*pJ/&1MX)XaqC*OX@Y?$&S.N3]A9^!S#=uT:<,OeoQ%#J0c[>5h\X<oC"lr`S2Q!1H9MFc/E]"(1EZ`u_@p"R*^L\GN\-T=IlGM>n3K9eb-"%XS*>Ig8<)I6O)$CQ9Z@o^hEc"K`3)'Z)jL%WrnBCON/:Ipd4OiScHh!"urLm=Bad%\DIl4C^(qG6l\>=Qn_P`2r,.loa]k.[/V5CFR#!@'Fb,?&hQlbrD<h@J`idr'%DB8;p0p5%ep:,PL]X=iIM@)u7/5t33N<FoT8V?<Fnd*0_XW+LpA'3h\iQ1+Q\gQO(We_Bgs8aFKm>@:r&<j0qr#5&&7^+4+%:lF8/J/.k=;6=%>H7UnOXf#0R\/IQeJVOT9CB,!n+S;@=-;rAc-\bUS(Z+P$Ko$8@df@EMq,`^/[shR:!Jn*iI>LF*RLLH>2VoqchUJNK&qFs8lE[$%Ju.t3QOsZi+//@^+S"8kAZX/YRVmQg8hBnTA]%A'r:KL:'sce2=V`qWL-JPj0eVE:U@+r<F0heiB=mDkf_mM]SLa3>fZhsl(@(Jj%."p_q'/`hs"8uJ(4D1T@(]Zc:(%6hpQ/2N>s+`M/;1Y/mn?[]VkF-K!r`+g+$7;;qIM=sSoJbM/5:^o$(Ydk\R6.n1#![Cbn6dL=%FrP,(+n2hhd9YO^T;>KT'2nU6e+DD?QGDg!m:FRmM`QlsqdK?o\#9u"o](pc)[)aq/bi6hW0]0`eXRQ:)^;T'LP19FEM<s1Hthmc%B!j+)f)<qXSrXGT%Aq)1CT;R*r[dGU"J(V#YQ*\7r3%oU"1<fpHD&`PC!H.bU6oS^6"T2o&"ActKP:9D)t0[(aea$.>c?9bJmh6P%p+"IaP:(enC'#s]-rRZa$am7:&Oal(>Cf5N=YK!u6RT4[W!Lp)Un^-]m/prU1[<btf8JHY@HUR^_XNh67b=pD$2bb0Ce&3;HU>@$%W3NB&c&$(qQ*gkP=^n+br[n6I(K.A_hN7K0l_t7)(7-MJks(N:kR(^H/aDm2rPrG'=!5`e0*$I="M]ZDj>*uQ@XW3Zd=)cAmuWGs%.h[S$I[1_A1*Q%7j"f#f6(;3)<oXo\rH=TX]1i5\QO0[dT:TrmgL^5<0%9h$J)[s1r$/=VT?$iHp<\7mcU-sN+7Smg>\He-]O!8;%-9bSTIXao``!*$+hZ_W;p3?^*n8D.mT)Z8WrS*e?D,(&=VZ/5`)Q9O*^,>lDRf7.us0eeS>LOR-qPOPurm+ft@Gc@k)>0d&s1GFY%ljrWfl/9DQk-i:&fc:@fimFGu&&'097!OH_+6/E<rAM*6)r&,emGGqW^LqB[IMOQNNU7gs<.5e@;T:V9+D>XMArd&-k"sG:o7T-Y%PW8a?GZ6/6/o;&)iEsBpYENI(_TP0mb+=(J#(QBBWQ8SY<U4+EJHo\+6+JdD;WmUc/5i-DR=f0,T@O*?8OjYFl!QU/($mXG"J3dH%\U`,</$&?8/,BY7qH#B>33XCZ!QRA*p4eOVROpH+in+CaehsNt#QNDn_%06Ll2pZ%4LkrE"bL/YfLLEVIC*Q'7QiqbnF0U7V.!0P%l2:Zjb2C/rputS)]XF\cI7L\Tn8ke4Ta)EMgs!UF;%8::_[q)/'1Hpun--)O&N'->i<A]X:Y;R"n,9@K4*eRqdPTB"5`Xl11*KZE%*Hr:En>%#YFKdEHZ8q:6s5>MIrf7\_+(.7'pn,NL\AgLI+27p?JD[kG#^ejoXn,&3k!B-O]1Lq=`Ysfc,SociP;toN1sfDE0T?RT%69h=4Y)NPU+=+9LC9t^*eSoQS4Fi3#&(`d$er&hl4<A%@E=h[E0PrN1_`.bIK@*a50S;/5kpmFs_hT8J(_8c\;':BL"2e!Wko0go%c7g$RS7m/+q0_-d@-!erba0R(SPCV\(mc*QFJ!<>IRsVRU:$5aA+LJ@!()2Q9/\d!&;tf*nFna`4Z.V]_J:Ao,_;lWF1RcP*3BLN%duP$gX^H\\o#O<\N.\?n]&RiA%tZ+4_oI<%D?iEZa<C`%+#l9uLC8>i#PAa\pt&sL?W'2,r&GQHP1Ilt,m\IH:cQsG:oaJT-WW)s%I#-`C<9+QY5V8iJ2#pQD74"CC@$\,as++llEB'R%qN3i"7XJmZ?N*prGi,=MnObE9X@I=uaW1TQ<pLLjo*BGk?=Z4Y,Zoe[p/8bE%32<Zro)(WJ\6/Zm>]@Mgq8ndb-'@u4;j0HG2%<).Au#B5W';14VBD5>&a`*J`!?)PS<\m$jC8$(<bFe+6BlpJ@e8&fq'E&PPpZb4%Bo)[5L<)*Hq-W0d;aaQ?cu?Z#Q;X!8m#I+/!cBC+nqUUrNkcAJA%gR?QF"?jYg)]5]mib1m-#r.s)g$<NEh%FZh!9PrmeRan,>?`%f.'D:+2u'Di6Rg4W?*pT5#;4Qo;oL!/;f5UVo!<HC#XmMq)MX54hd<NP]_4ACjl5>8=e[&7qk>n^IWsNk[<=uCp&#eMl=M3SkL_e%XfF#BI[YTGJpr^sYoFD:;C9j8f9=nI^Gg(DnGe]4oAk!nZa-r<<0@2)dC=FkZNT1*JGTbt*<23Je2dI$jbY&jQD#XTrl:chrrTUi%J`giLn`3rTjRHn&5W',6+,%'sr3`<gOMuu2<Xj?VhN7Islr<5Z`L4PDJ)D$RdTdc`i,O4cS!co'.^`D$!:^8RqIG5>`r[b+W8[m`%^-c8&on!l7>2n'0KP%6[:$m.?D%igj"F5UDO86$,$%oGt5OOQ[fd^0!9-12PN72N3i[\br",`.gBtqaB=A,327!Snt&m%/%X[i!U%IKu=jpYE]`!PdOXQQFqW*M-B%dq`'t_)DK'L0X/71`DXm!BkpC&Oj&eD']a^;)!i^!&,%->Zi?a-[I7o0KerkcC5hB_eY5Kch:!`%Hc>s\q;sRErb3=C^?/^J\3:s1PNMM.Q460-r$R+$Na!a,l%s\!WcLWkE%K.YUV>W&^jO>?K:Yn$#Hirf^@q'KSAokrA=:mPkljA3%TnhN:jdlWu0aYhQis1UGCip,<mYpos^&G(a([J./j)(=CpeTZ19pb%TSp1=e:/4ak%)/+2#VEG/fCPc!5nt=,J8@5a);qm?=1ak9%XEg>qY=6`Rf`eSe#OR_:\+if,)SjUE5_E]-pnQKMa9b:E/6`BM0<W,JY?0N1?HL2)@^0<0UrP.?0#JU4P5XJYlSVh;9ISoI;Ar:k%0!rGb-SZ)IXTV($gZE4lL;G=A9WVZke\D40j-+1[i.rQ\Pdl6iZ!\\&d4O2N"KGp((07%l'U437DTW,@,YQ\C?b;LGQ"`jo1i?Ms%@X'$3:28H,bet)ODN4.\*t\!r0l>!UT"T4=c43'MjrC<C%5sFl?tj.ae.,iF:=PIP80/ibWR]TeYq\rc6#12[TNe%nY[<!>FR'TQ%8C<lD`H$YP"49h'>[bGM/t\'6YrY[Go)$Dc.+#T!!uOJ_OTP&ubTn[?MEn(Nf&W2Z(U-2BCVSOf-XHU3SH5![s+;FQjQoPed"4;Q%a+!i)r7G""s/aKD[98\TD0rD0Zs"+)\_t(I&.Aat&$+;j5K.fJW_MNK3AbDM@kB'g`C\esD-EYEK59C8!UN\O=PI<QnJ"9FDVq.D%6anM%o.nAa'C2*H-]=*QCn0N)E'R"k$!o0b7Z0EKG'^QNWqLO,.6OFEhe?m$k_p[<D1IlG99_3e7aJEkGl9!9+:+maN,.'Mkk"Y\%:>#X_R`)?,E3`f/JRX'jO,kt(g%dTb(2]C@Dgn8%(S;eTqorS.Ju3-$\F0jIBjuu"0g!?K"nW5mhJ^5)>L'kQq:@.$.Ocr>!Jf4=%UP1%Lp'jG$H'Xid_Y8G5pHf\1LKup3=(l6HGjWYIquZ#D-G9,\$)R\r0OR#>GuOMK"!i3.%)(l,_c-jnHH@O07"r+%=1o=[k@'(R%]N:*S(OEu6?90k1AT*9Ur$9N!JsLMB6Z]u#a3I]08Yji+WePGllObc3Th3#8qAjUYR1t$dr6ZnD)ONJ!CcFBh4+&3Rr(c\pel?+Q%*9Hu_FH,eIBP2$LM!MBlj@2,m1,-Y0V7R'kJ-E:^6@>JY9$@[Rj_"5p3^:Kljg>jdj#YPWk<b`GQu/MpF3O.9fZ[eBn"SB?@tCfh%i"L/_B@TI1gAtfbEVg"E5p*<U219T:eVopu4?5P-_g]sb(Dr,=4[AV/"p,E?NAJGnr%G1l`*`<X8R75MC!\Z[V+.:E0`%(&N&oT>%Hs9D^YUs=k?7C+!-f@B_;U$;]DYWQ1%!pDt/JHVoT@o=PX);NPr]6ZT-bks8r-\X$(&oCidYgC8lU"0A:a@ZAWfdBYgl,kI;rppl%7I6r[ENhobXQRD-+H^bZc1qSE!I+l;I)3Cj;?<d0>l19Rb[LNE9+kS3*"e6iqo7b8!ad%_Y*7?9F;t=JN>S:_Vfb5,GJ(sdo:ZMA%5"_F,*f\%;8#><Z_tWTfp!?,p1HZp,dS?i6_[Y^2&:Y5maiePkf>[srCik'l'ZfA=1BkHh;]Jp2SD`7,LZFhu>a,,$,Wk.71KmF1%fR,:6Y#>oZVqacB%@eiD?CpjpcGRBOp=+!=@aa0nRtEC#@Uc*naKZ+$?GMsQQ2nDQA@6JUq]R8-`Qq?u6Jm/RRCMHrUUb,B3%d',%Xf.clAOb`a(_Jres3#P(Yl,2%D%;h6dXs7SD&/mRdQiGq"MtnTNZAf,PlVnE&$b.jR5BfJmiUO7,tHYul(VH`^uH(SRZX+$6oiu;%::]&U!Qdo=ioHWh9e,H_T.L>'nH9J!5Y%LV4.hS1lR7iab?o>@>Yg7bJn2>h`FK;UJ3$)ere,hL%Z?/s@#@ba!)4sdY]dA/6FaQK%5+=W:mcH/NP+=&T[IAr&?Og^FqPll;SkXU?>0AT>bs_1^+\/&[&Wn=B4$m[/F#/OeL+^b-&^I=CXIq`t/!1&fh?CW59r/`rUi/6W%-Bb-A^`:X#PCn,CeP")Y"r9>&ec_4^PXQ!I]E?0m;,rI\J`)OpCA,&5[G3dA^`IL7`s>"Z5ob_,_+-$8$YQM,AH^5GZWEoRb8'(W%"\%p@Y$P#APWQ%ZNDfkuWo,oVC=U1bZ[aWX;e@Ofp'cFbZQpZgaAHM8M8@B_&lh\bfhn3J0Y\kq@q#MK,IsluL*%7PbcnEq,Ig8T%N=LPAe_5aO.o5!KJoi%%$C3S@`et9d=e?+&$-@88ft?-B;<uUcU&t`0p)[#X"HRHG3UsVJ<=6^/WBFMEUUb,/P$]H@`Z":\(=A:G%Ij^@%K*\6OQrJDM)jN.4&+0QhWFMCA=9_GQ2V47f',AHir=Z,rJ4C4i%bHV6$>XgdG>j*XBaNiG=@\kFRf$CDdK'6^AMIE2/0]h4%jgcBebL-%=XH*cCK-rHh*/UF=mUaUsP>9&qiG?!A2sRLgAcc+8C4RbjBM5m0^_71\S<ut1n=R#niM^2l>EME=H/5ZS-\J(RUJrWo%mK-7jL'?m77_caiH]#nI8+aMC2\nqsY(:lGVN*<ETnfbmfp3f^24n`93*OR,fLYdH+m0?^mGMtIq!(MC"V'?KAj14kP(FEP;J...%@3^p81J\TuP.NY#Mpi7>;,Wb4_\+[!3/%!EF4OB-2LqNmXlpVGiVG39oEE^@8hbUL:(D#Y1PrVm+M&;O>ikB/&YLu4HfF3$_=TsZ%7$Q[73@*r5?H-*Md?73;j!J`][WOm'kR97.r1#d#TUOXI'Gip01E$,cM41ZRFN<Q]7EOj-:fiI11:cW#A>k2S9ljMq#E01oGae]h%7V$Ob$%0s1"VMopTT0dpN=QnT!eJ@@M&B[r/RISsiN4R43CP]AdHS".Dp\P7^N;o]+Pjc^/S*U=!BYfRi?7gDGqK:`b7'c"m*6C@%-(%8.+\6$n.!X1X2s3C`^*`#-[L'aJ-R%S_LS_K%fPrY>8T"^m,<N[,"2JQE)/HU!?\)c$bUO7Emqf2raB'5$;R\CXMc_eAE^Ca7%S#)7lF-:l^P8V1g6p!RNFRd=d9FjDO-4WcoD([-u"4?$FU#=Lg.%%.8OCGZ*"I!hkd'Yp(J?pTOoq04Vd4Xp7Hp6u(B9?fM$dN(j%4$>YTbu?2l.Y[e'!\,br&4)E5527Qa#=q'#pL`7S@Q9gsNFXTrRagt0DtFW-aCc2Aq23F-Un6@qBDL99hk>@G5L#Z)e]m!$s,A/P%cRa\#bW5m3P][mSaC!3Bs(;95UEE[%Hn'EW#6P:I[St$:Y6F]/Hiee>TgCe3'PM_b;u#.?m(RD?i.K]VJ'ED%8nIcT8q0Q^6dZ&7%>%\b_?UbY&F[U^RKq>prnA1iOI6XMoNUI2KA<"F/D2kf.G,62:ZOJh@2%.G"UDJ;u4MnRKR2OOu_lkniriE0bUqd55LOP]<&EFUU%mD,pNgh2"MJKJk#-gXW=dih;4V/ZeDa9)>eq`LL=]Z:!]]EC.Agoue'ndjE%b2o`PCu2PRfgrN[PVJe'gFtm.bBn,?LqI=Ik+XS7%fm>qsP0q5?C5b">m3t1R`Nge.%EfYr,Nrdle,9)]e&FX""+g%0/'rJ5?a(O09Y74G\G\B/)C,/Q:GJBPcK$[)[eU=&,Nl%W"JjH2%+J%m%qFC$5ppgg[1fllVch#hpXY'ZfV`k)V8kg)T+O)M&VcG#&I=$']$L.O_1Y!Hm9^/'Omt:+3>[Q4rHT"'Kj\5!3XcRu>I&?(h%Yp6gHcdEe6@XG3Z5(ifScl\b>gXL9B[Eh(u9D(QC1?rI`Z!tYCX&V=)D.43dkGn?uJCh"IrVa3P?EPFEpl5b(.'tHo;CtCZQ'm&[%G8at1q%e0c#q?P2]hJ"]AE<9-m]K7M^>SS4dh+iDMjC;N4Z>bLqc'DqT7E@-[\o\TVq5a!>V^)Rks]XO9eZFa@5-oB-JfFs.XCCP%n2jkr\u.;#\[kPDp;kaTc=)o'b!S5Wac(M4$9;D'm)8_^c),9a\8Y'.\bqrZiP,u<e`0'i^kG$qj5N"LA=n:#B?:R6,g&1SVsZ6?%<nk4rYs.liLb07Jd6(1M.qip)Z'KV/9qSnr6g3EYBBR.'Uo[oHprEbe)_iKsdsD5F40jp'!OE:K@h:1s;loBl]Pih'"iQR+]HYp3%CQ6sr;&<\kd\ROGpS3X+hf@V1CZr,Lm]Tb%6'mQY`'X\7`2hc5&F[=H5l@L71(nQi5EMON5U)n4c&78H^*43S+<O-r"ODll@]&<2%&s&CF8>7(#6BWj[*D&b;=X<U=+!<QWBgD6KD%\992fD6d^<n/?k<=T!ET7%E9\?I<_\=LB:W(ZjBpEEsUkAA%89b*96[EN<%XAr1%VI5Xt?71PV4>#EOcaM_^%(jb"1@AufaCH9o,1AE`6fo`&Lb'eL/[DOk$HRD_]L?uRXJeKYpg0lUUh`"i>&VhlVS/#8Sk5S9-Y<5*%Tf"s4o6P.END\m=Ng+[[8$bW#NNCuYEARTe99T7U/i.@QFSUuT:KMiq/TfOP@U3%Wf6k0lib>7Tm(.%>*sMVUV%u,JTS3er_^-.F%&hRP'=U0&Qe8O2dRms=Z7bO1k!PPX))Y>@`@]Ho_L<k0Y.o=`B]`!rKDt;WTTd<Iu+$QG5IBr\IU<c#hlhY&uc0MFVo9d8^p>j]3%^LL#e?Z.gfhnpD(*cKu4T(m%Pp"rm5>@Z0dR[L.H18V\n\p@gp0KV$s#5^o!C-\PZDhB.r/.LRI_:B1$C_/r\lS0?9hNZJcZTn<r%9a;Ch4M)d@_je9m0]3QAX'no,9F^ShC2_bk$8*P9h8_?AUT*ui2;7fe2l#OJ?PrsXPhl-(BSmbXkbMc@9V83%=s[c<[XtZXZ*2pT%N$!uRei<Z#"cV>kc\?Eq)(eS()#'HBoC8$dAQitF^7[)nMDRH!VW9:>d25T35dt4&p#[c'gZ40Y?ChKk'9:@cVD#gdC0G2@?)G<a%qJ8&ecVCg1E;.Sjm^pX^I>Yb,e!7>e>cP9Qk/LUf@=FeN2Wg)!Zt>m4qKDJ9=rNcPo4.pD5BArA=Bq&/cOpKg,*pl*BP5HKUHM6Z%84?0ueM::ahXHY=>i&F3M_l?Vm*ZW>eXRsU<d2R?YQh/Y\2EeB\ZCL%QEiDRo<G])c9,;qf1<kAMmpMNf'O[B[i)MV]?Oo5e_:/o%frZi'oZ_5AYCWo@RF\mM^Eu-\^gV\uc"HLK[bZ9!C:@B]hX+EY4g7G7\tM:aM,*DuNpOX^>jIMq>Xo\!hmJQh^=+rl)Pb2*d&.md%^@^W6E3<Og3@[77e45b[d=6(Z*MZDKcESA7T:NPnHgYtoj*#&hi_2@2O5";[AMI=L]DaamoCM@[k+'&P;s4/G"a/MIY;KCs1gIPR%dg[/5<U!\Y?/=du_1brO7G"9H>.A]dmt9BJC_#9pZ/4rpm#)tRH=Z2]^N@U?DSV'WpU9TH6nO_S"7#:;k@h_nkL&k'Tgu_%fk5F%%jRo8u0WrGuZ;`\NO6=pUp;C.cWMbEE2,@j*`&pC_B'i_9)dU[tSY\"kB!u4>F`)b11*:qGB6+fl1!p>;gT',s[:WVnDnp#aoOe#n%*H*0i/plKnL8=RUqA&ScT'N>pk]?2JG$jSZB_%GcG+GgL1[KKWha$ucYCZ9!kI-pGr#F5^$^lt$hf78MrfQd[oktkZ@)-AI-NYI;%B/,KD]3Bi0ZS`!s(R@Kt)t'2I[PqP9(q,Ir5bAcT._T4KNm32dEbu1^A#NUHp#j[hZ+(*?121+Z,p%ICbppj(YeH^I_AH-aK[Zgd%-N'*t5(l-,"'G#c#=l]jlT[f^GoZrs<h^/i'@TZderF<!`i,T:=@[e-69^j_R]0s^qd,8BT?HB\%S*-5:lF31ON`*u*ZEL)klD=.%=Wb)9Qd;$TdEfbj[]q^`LegOG6.\qiD9@<Ggek#3nQ9u0*e19D9(B_j%Es9K1Y\90:1n11Ld.'kM>F+'8Dnb`2F26ME7/#F\<Enb%f:6Y[N(A!%S8V<Ha88!\`F!8WgpmBLHN&5^UqY+K1i7]/J#C1[qdm@E6-8ah\tDi;aH9b<bd\^2hFn9W`\XaQY+1mg$f.nX[i]78%og^K9Y.IrlpZH6?]D8P9Ec+g'Q:m!Lem.AI8`aQmANt*^rhf6`pGACi,j(ZqYeHk>8AlDspmn+>6HT'07Obth8%$4bDC(3S\<8:Q%)s"ZaS*&_LV/>a&EjR@e;T`bQ/p1JjRF6;h5aJO!m'.NXo_*=+4aetZ]0s;@WP;>rfZQdo!drHNOI*:ZeIj)'e^sjpCQ-f03G#6d%]<C*LWs@n?ij3a(f'^bdg35T84PGEpe&PE1p\O[Of0;GO+5X;G="PMrB0T4ori4^7lJ(+Lgq]es^/7M8m2L]6a6j7ZTBr1:q6fXi%*junC`i"YV?u9*&%CDPmIKu@uO?:ip5'G(#2du!Y$L[&\ohi29g5,1Ah@?q,&+)j);K%'P-Gtj\eCAckYE_ZAV3QGnOR;8Eli2cd%]!Z7bet&1Khp9kqbGR'YVnOLKkEh9-pIn?A\R(s(rnXX0/^`G,]Jf'057PGXp:W9K^V=6O(Bg@)?6[j5ihc$uXC%8RC\?46TkpnI%n(5VGpgY.jZc5JU>K/XLH$^KJipXt#bG6l,7irtnpWc^<qS$i#Jfd0=T`:r809_H"d+0)E3h>'!AFTd-UYaN"C%[bbT:(sWrqZ)q%)rZP"n-r/=]?g7FZI-P`V8gt<g2&U#h/TnY,]1H]..k%8C5eo'j`qlK.j]Q_E.!(pT114h??T\XKWg@2M+6hX9e8'Ik/:KZN[FG^%hL75P,e[PkbZjqD[nMFX3OM>RhPX@qg2J^We&@h&B>-<?FS=4@]ZsQ=<FC6(#9'AcGO*Mfr8)gd@e6g<0qNTqWSj<ChVa<Igf%n6%hg:0UY.'?CP7OeWncR(%=(Y+X]ZQX*Dl]!>NNF3ef5=kHHCrg<@JjPdTlp=2d2ICMeomjj0lB@NEW>aCK^21IlQXEGlb,q$Cr$0a%2,;$gDu:;s'_,82oV&b$PO<FJ>ToC_[I?D:g4$;rD&1&E'8pV2;,oO&!M&E;.Hn.IL8i+D%DJ<hjfY3\OY*c5`F;UjS#f3Kp"SAi%p6;3U/PZr4h3?8-[YM6>0j44r.C%<!9VO>WdW,ShM1JUpBBI/*7Q,arhK@3L)EYNOIV6FHHgPDG?<XP>`-;KYcpKVFIGqLIN8ARZ%EbN9sVcQq&TYPFS],2.6)'/"][0umK/:GMs9I0opKVdTMml3uhcI1J>CcBRO.t"&H"6e;LG5)rOh65u1.!Cq>.3W=(F9eK)&NSTb%_L!I=mUP;.%UY2kl+j#T)_gI[RiX(hANQ_m8sO-_p0-SG@4JX$b3u,IgU>5W&fq$*ZhMNG@<UGeOR"cb;nH[O#`AbL)q-ZLBl5Pi%ACDmq`;s#BAHVrV8uF3R$+,(:*ut!1PR3F3C]FRJ+:A1h&/K5lCiTuGY%c24Q?YU?Z$C3">*#QAH:_WJZSP*($Nn5>.:a5@a@bI2%<3Cko5Z/T?.MPI62-@OIH%;f<3U@H$KLCi_,T2!IS0'I!DE3N(E>Y,s3M>Rc<H`bDrA'B5!9<'dTdhuJk62Ua@OL$Xd$rB`6HRRn%F>9Adc3%"4X,Hg6>gW!+iYMcKQc9#]6S)IoPGC\/HAM$ipb.45P`nY?:I2*l5Y:BSfVFPMlr7ICRPhp.:O;D:I`4V-?m<n>e5VCG%!E&!U!aOXXNbD5_bM`f#*QqtI9L::d%7QU:V2";#A9Nik;[r'sHCq[k8\A!?MF71emdY"sHA.JfD9`_DC/?FBpb-@*,Tp)L]##i<%,u@9.O"&C#&7.P]87^MV5>"<f\P6`A4S*@%<)Srl9@5#FPJ'=r(Zp;6!ZL^W2*!m(8P6o4?_t&CP1^S&qdW>k&nU=Dl;dB%Pds2Z%I`*m"I4EO&O[)k5&<tB#J[I!]H]MsLaNI7@^SjOsr]HRko2>fj"P,0P3=,0n`N2t3P;V;K@5ji4UK:Cmif]IbEpnifL+EE/V\h7"%0[?3D8Hl;`,/-%ESD<s=0gAg.KqS,6R)BZ*o)KapS6&[he6?[mi*XkF4nkf+CTR;T.RB4OG:gWNL>t'!9e,QaUANL7\Gn?u:NVA0%e8;BLm>:)Q$U8(6LSot&o\f!+M1-$/-JH(RFqQFOMu%#ocVDi9*(;GY^q"pX8!EO1^6J0s,1WJR?!_3'*_-[]GYR8YakclNXZVUq%P"Ersq)W*opC1g+Z^_#GAEPR(jY)?QgP&bt3DD>oDX-O2o%p=!ZS1"M1n*oe>\WNPeB5Fj(>7L/V]GNa;SeV?a]P/l7Mspo!78dB%()ngL\YO/>/#/;%-]u7]AL,rr/.CrIi-V)"q5XP?RX3_d^/hQM%44fS"/,Y40Xo<@jSd%sd2t)T'DC[+qXY;7"Y7]J"+2+L60%MK%]\(<PP_FY=+^>id->GDk:_28-1R#ZpP,a#=48FZ%O4"lMGH1A&Re=P"jMJ0+Tu=U3E7`\:IB'0:n$/D-Vo(^3PnH\?rEJX[i@..3%j\+)fj(NEtA4SJ,m*hT7I4\G-N9V#(C1]!kGI8[r\D'WeGA(;mN4dcKlgSQ1R:6.:S,1eOTH!B)@1a"d%Gu9bJCMKlM7b1H?$p.1%f[0(.7`Lq^_^B%k56HFFZ0FE>ga;pEWEOdW8Og!ffeY*<Z[`qY.kGK"`A"@i\Xm'="SZ6O"(DK;<%4"&AS7sR2\.YX9<Y<bk#8?!%Qm.8gD!UXm6[O0m0E`*Md$B,uZ=j*Uk6"WWeEjHPfscZ20f1[%HO=bdT8-('j7C:]m-SnCauiBdSm4GdUM;@/FP`4`&kuNEEioY`%e,GPDfqis&4=BVa5ko_(-_@-jSsn$[US!!mRH'UmENWtQ>!)Fk0igd"^6Y7[3j;pmB%_[F%$mT\q$'s:ZP"BkO"MXH"1erJ=YQf!%ORUdG6.-TeM3haYo!r8jHi0\3H4?!1Kb#rsXLOmQ+Bo=kM#3FDa+q&?rD[8hJ)5+:\VGKkH(/5YmaEO?Qg<_k;\r.<Q5Gi=?ZdN1%qEQ+7Q9:df2#$AG*6?NO>'L;Vo_S"!@1G[0mA'J2q?R>6Se!jl(kPKJ,JZ`Y%a]Ub.4m7Z!PMo1>%:H_^8(Mu@T+s/U_koS-=X(&%C/+4af<_dDTI.n7cUeS'UBS[ci+-h4$dPQY1j&CY#;&&l\rq^B\+<Xa*n6C#S*0$%i@)pS0/9i&oO@H_o>DC81lbU0@5!"C3s2HA%h#pd@J/<`hg!?;9[i/c'QVR=koAE(DEcq:?3m**CqX!He6:gZ?#dZBQ&*odTLS,FC5Hj04L'!$(#j'G0W77%upB.NNl7F`42+C2>%g-s1le&bW1iJRH-ic;.m;06#FVdC@u<m;SZT0bP]Nc<O_8mj3e_P[QE`@$6)Ws`blCDHr^m-ML`cuuC"'qaAUA^ZA;]1rZSpUaJ6%n/<!0[u9Zd)Pc@%[Y[NK<!q\1g?g";#%UuJ/+B0sd-cZLc2u4TacrqH0Qlm:>TA@^49N,42Kpao@mUmjB1'RUS>!Eoi$k>OZa4G1%7-N;`F<_$ImEn@U:K*RX?4,KmqP"M7+(VY__DCi'&c3-3Tirp1HS$FREHE9q`&BHW=Tmq0Ab(1d>EM;jI37`hP3@A`)OmHH](="[%>Wui^F+iGfkXR#cQ'gI<"T%YNnqj.=\D46XF!APsbFeaE?+7'>h((P$T=3m%Ick./!+aO1Z6Kt^%nJB-/mH:J!A\Q_KKl`1`7(F:%P;[jMV4P+XPp]j?EqW"=cf6"78\@3pHMZM6PPA)Va/U/.fY%Q^T%8@TC6NQhNY;:q8Es$#gVGZ4+]PO,Tsu<(W3=R1EtB"GPbE[f%\m(,SZS.QI;6!.#>I-3W5ms!mpN>H"M@TKSYpBR+ZCXL`i+iQ*$`QGLaS4ECPJj-.GMg]rEJb;'PqJZhfK$,67:!Bd)YB5@hsNN<%K-p+R0Q6HbK*"e[L]%Lk1aE;8\gK)9pn/-'6B_/a*"I9AYsXQQUW06jonu6mC`*iE8s23HUkMQATkBE#84A0_&q+7U!qX82b!Apr%3$N)sL*#+;UG8#J3Yg^NmmotTTb*S-;t6PK*Q4%b)\tQF^/T*A\7ttn,forUX&#6\%F5u4'dGWje2m2a./bK`QS>j7`V<ANeJ5R_%*cr1?*&Ndep)U@i6;Ml2,+(c5@a^2*In.pl#Kc.BdOmZB^h91G$p$;]Ar_nIEP]/[9Pbn;n/ir@lObo/1j&&-pA#9pOEjLILSmf/%Uk>SlE_/LgVB3W$GHLJ*8R]`7eSB[!^3K!!0Tu`[fjb.[YrS"d-\?d),PTsGQe[3dA#*Dl9\MAHACBn'*K[&(@3L9uH\MH5>jjQ!%:,,I3I:om2ALZrJKiVg8*UE+Oe@boE9HI:WX6JHHf['sb:R;/_N&5dd-$>S8eo2\CZ;J<TTe(Cai0>0%OL8Im-nX[lIJk3MXQZ=m%&TLGRMWW[X-](+kHH>tCf7N,DlK`rB$sIV)3J3>d-9XF=8O`"4C@]f*daI\O?sdhUN?/<V/9h<K=h'+\=pB.Hi:M>#P(VI1U<=lr%]m'^jlF2?CS+rYjri>+QJ@nNK0W<"4-1JM%Q5nCR-)P1O5mcdA6]Y#+aC>jmU:J=rK#F<I*j30'J^g>gJiV?uh(sJtE<(OgFPuf4%g$FX+MlLHg0gb3+WiAR][DB3PEhs)hW!<#?6JfT(mh`(hJNbjG9ESbCaS<b1DP(UcY5"g5dIB1kIpT\6ne=USXJSej$?jd,,HHoi%)lE9om$V$KDBKH"?hPFuoH-&dcWn)B+&N0fA>'^`dnP'a\EmI1N/%e3#5H#F4T*$B=k5>kaPZ$p"cZlqT%lD-i1S6tKB)KlnaORr%>;NX;9'm=FAJ#+`!$9AR#friig-$af7ed3BA-+@)K1%Y,U'_Mu3H>Vlc[hZ]I,To()h*Aahoh3g@q7$<^l[-/UA-SWAc1aV9u6bt%1bq4H5UG""Aro*(K>$XX4JQ3$n6;N^fR(!GP\3eo^SkEAIqj5HP3L21$aUpp@G&9?hqX!nT^UKFktX__YGV534GB&q;*cc*#%DHE%Ic[JC/J(*RAB0E`^kqM4'KnH'g/HpOE<;OUHE8H^0?%YWGO4Ca3Tq:Uc[g8H"YW3SgfkSW'&2EHP4:e*<[IOk;lSW0RStk)m5-IY%;PQXtARb@57&Wek1Wigf(p$hEq!A!BK<_oK>N]b=C'\EOHGqnX:b`utYNRfSh'tCG-4='3dY&K/CMB$cFkd5I3H6ef7M+bD_N;@&%1VV$+CsH);&DMe6m]l3N0EP4:S4Pce^Gc7!YN@f9-&[Ej`:MXY5$^1B.l!UacN/.-h`okBAME1<6!e2a[,h9#(G<<F>]B#moalm=%8$i1?Aqe?$M/R`!-1_[>@n#k$Ls&u0U'G)VUSQBP@kkh`E>b7.S_o#qWX@:>h!B'01!k;QnDFLlnIF.!4H-N"H\bpt&M#cH.'hX<%J>HViAT<f,d(hm4HBAD(0<$JTWKWshK?XoT3]G+u(4+O&-XtFC.&LGX"iQ">_B$&.^t?bLSUD1-.liOTMY8T/B7,DR?"Zi4'D&YV%2i@.m\f3(VM-+*P7PQ=?Y3tWf1HWTbG4@.CAd2@>A&Qg/%nSKtM08_rP]R'd`\U[_>X90W9(3Tr3]9;tiOCAd]t*P`X0QD7=E5-Z%*]nG-Xch3()PWLs.RtB'jq*;.K1EW0-Yc-Pg'h4Y17;WN8E$9g'R5.aqtgp=oj3P%+=AVRqCbps"B,[6B3rkLO^IfKcS2X>=&?Lg%bj:MDG@Ec3ctd2i4"RO5[N7Y!$UF;h!`B$Ea[Sf("%WPPY]jiY&Cf&4`.uhDq(=+a*HE9B]d*U-:4F&\:_F$6.=Y]a!;J1G'`]/+%8.tX1Z^WV1fV0M9q?:hiJup0Vg4Lt1jP#85]CX\'hg#6Oo\Soq9Joh`+:i7[ou_tE#^?,`-5K<*JBNX>>_Z@D$X?)$SeI$s`*MP!%Hs*>5\>5=c3?LL1]&Y_:FLmB>#qYIG?+DN0pj&2c'aYBa-;]_a.#2=6C*']be0H@?ZKt;-gGL:,=>%8F22&H;^ort/E(F,-ANJ:4%"[X-&fPGPP7poP.*qr6Nb'TN3_3O4c'#q*hlP%9',U,-Xfm&LD.,[K3TFJdtVA#*3:1-bB'-3j*@%t"Wc*!C-Kl9Xl6b>b,@haQM%fb;+k&QXRNYW,-leY(uLfi7a(n2f'.<Z8BpT(iIeM$6;Gr1s*mA!GsEa:lGBI+KNPoVm`@aU3R@RC51)MaeFi"H#s=0QOVg;=?m;%n5Z"^F]@&"Ah^OIb\kBTS=BVp>#^0eQ!N$K95Jf=bi=nHGo%CBbI-.T!\`!TFn&M;Xu+.f(EZm=*`XsuQ<3%H=Y7+%4?NF@gT;u]%m_pg0bAi%3Jpn]+6R1AZUAJq:(AjHFHZW=A<Rul8SI2FjgtqD*fc>gB4XLj]WoJ)l1M(^(;<`9jaCI2W`:s%%fUpL5fS$6XM;jnp%EY8g@/q,<(9+?m_IZ:9[jA\[W%P,r&k!b7tl`Sc12!#!*m-Ic0G4I.LB6TGNeD,D+[1>4UYE2.b4Ed=pE/d8<]l55&DdVkZIU$W]%OktG]qf,9?p$V(u*]nD)\1PLU>/MeqbA@T+[LV,f<luT5l`a?]a(%2hNPf,R9SDs@C^*!MM$bDd26Lb`ot']5\WT9[Ck!OKG-P%#%%2[6:OPG1_.q\Vs'u%%EBfX(6A(-mL'FKWK^Y,u,HBE71psC/EI]dajGnC\AO4r).q.7WhF]sGJo>bCL+g*?JKt7iI<B35P05>p7%2LJPpI3e"G5p,DVd4C`M6"fqtn)(Q_\kjXV/'hlMSO1OhSJK+c[6&%Vd#2k`lIp^TO?l;/KAHb^O20Yf=rY<bF3;Ld0@tpjMaO-H%iG[.V!&kEhKf0'a]^Aaq:9eLM!.47,6jT3f6cpW"]-*qnh[6U]m7sp$fU:gSk"C.\X*[+3Z?1Bi,#,>XI@NqaP?m>T=_\S$\L/?-%AiSe7eYrm(PoOeP\.3LOJRZLE]tRF<R*IH7/l52mS?#t':,/`i>c[JSRNg2-;<d0gc70]uW,HcP[Opi>Q"goa]AZbe*':bK';t^g%PF?a%kha,.9I_CHEqdKu(Aj2V9>9M.KHs*)gl_k63\[Wr=-_<KYen]*dJFn-d*R*f-F4Y4&Nrd-)iWA'/]4gTYn(@/<%\)=VD,kl%pCrg)5.,^(G!)?uO"N9H0h8!@RYDsER!uLUi9aJUB?3*[(u]$A*lO1X5/YPp>)6ZBDBkHKlQ1Li^m5kV=W-upB>MMrlT(;Ja*8?6%\;jMb`E5aFijsj`jmjFqcAaRuf%dQ"IW6Aj.:k,4j[RiJ=l8:tlTUi%K;/0`TIqrI4QGI(L38l3INd9t>]CeDQQEM1+T&'&3ON34%,?)9(?0Cp3]ZZP04XHSf5m>5Md7*5\;pF89<\GelD&]I;ZbB[ah%qP!kjal;GS#`LY"\NJgt`uC%>r=;>!O;p?VFS8pf5m<%LUOM%kt$rg+Z:a>&OGG\1'qP-$4S@G4T4MHqmRZJC00"#r/<_:QF_AN;:-W!+3_86QZGb5[jpdTFMZ]AMa.frKgb3#OUQ9X'Zm-E)K2"/%!n6lp)LJ&P`3ZPACOS/s2SZcuPHO^Q8uK(eoSY2l89p<l.GE3.bb=ImhGnbT3Jr$[\mq\WcANs=bdo=h,fmNBbpqmhgMSIM4-*S&%V;P+!TB,u8XHGY@c+XZPQdU1W61b7MEg^,Mj!?r>A?F"W(I:B2hm!g:RbV+Z,ATFl/F-6AVsbaHNDnm`7I-pN=S8QJ8+,q%QdhUO%hl44.[8S^N%JsU_a$sp=RGh\ul8CMH]o#7.rJa9'j6)"7L6%k/(.)d)<J`CZ$bO@;;$'MLaQ/Ff)VbtDR$mo>4S2ctZMQ,O_um1.%mI-9\Q+phS's*CYcKMei^6$+*nkgUF^lPYNcgqI_"dl@+c!\5Y$nXk=8o/D36=%hW5AmGQ[9U)-US(TPE^BYeMA$M8CY#t].3mUo%aq>g;9PO>C&p6J0jLoZ[T%Ns\cFT]bp'aPS=7uKn3"hC:0NZlm#m3='>qo?Lb+5q@[hLE5:-9qp"]K>+P'_GjbnO)I`kRIA"8N$d%/u.&q^'[WL1Ob'XOCS`S:KhQNQPMq)fWsLJG5OM;dpe[16E.h']E:'dpf1:8p=^SMO+MK1-%p(2l?n%3h:ifIqWX/CBu`cKMCu'7%Y[_<LJgPJ0;>G3E81_@T(?m7_gE''-a^RpYCL<JL$FMtt@YgNe!6CkTD-Z`\A[rN.<R/uFZCr6U3tcn<L+[p'W[+em7I%hpG3%1r%FW<(mm#dPWV+/"R_A71B:Nm07!0F"IHL<u&RMGk:Z`%04Z6rKLTZm/('-#_hW^p.7!`P-eO>uhU"4UloR<+IM[FG7*n"&Yf&s3dW%n#N:Ks!!R"?BUt]a&Ajg<BZ*+7b"?"O3!.HR&=tGfV0pQaDfHK\^YIuQISH81ePjr!&aAmW53c<f=,*gG:"Dod25mE5f(#flkY6k%J%pASo[jlj)-DnH&WmZqf;D"RV6h"p7(optG=\9/G2E&7EcOqpb<1grQ4:qHT[$Y'/#2/%PrBK,8brY`Wk;CVSKqroW9%FqknJ.Q%mSl_)ae-f2^Jc;HW[tQI$gCVi4l;rp:9ogRMNb4nUm!@)j7p\3CigF2bDXME-*l##;^mC=<@8i=Y1spqop*Zh-gXMf"]R@?ASBb@%1QTA@`Cj#('1lDCM'_'dB4#47(TKUFg4\$//!/B++\6^%AlhVo!P.^,'>(WN#m5WmR-;&#=t:?0V])>AoMa,i%B8H:#m6l$,L![/%99PNV&Pr=VWk<Bt_J20i6\)R_7sA4L-;i$r%ZI3^fq?eBQVur,)+[IMohbAi3if7l+/28lT#9(i*aE['g@&9a^PbL,J/GlNS2g.]%N.9Yaq5F!D%/H>(fT5%3WX<G#:SCXN(s6&*iaHb[a"BQoe1.bh#A_m9p/X1V"KIb2QjD6-LiSb0\[T.\ota'Y)B&8Hi!\V5j>+rm%obEM@;.5I%>.bg1BR5HC^U_B?KY9q;0jikPdf!Ep.#gKM_1$9/L9MKN+r#mOW'0U/mS*VAa(&2P"Y3fij3cQ+MK_0D78s'H:c&!i%\(B!K=4#d.b!r7[md_hHnJXH6-WHm"iMmeWTfh77d+q[uG*`R(95<\O/*Lk8l\;C4P:uLSS@Idk)ER[>USA9>CCT)gfs\+ol@'I8%k1I`RIMG3^MaHe&P)>rh767#]EQ(bmU1RE*X"ZU\P2,J,p?kj61a)6i1"<g2`R)^\jIB'qW(X]hg)\\86;bPC,.OuaF@aLfg@J(9%k@cT\MQj/,C_3/(rr(,YkR6gZ\Aa1?;Q:3mjIU6=;fLr$PuK8t\r`W3[?cZt?!(JD5SE+5;q?r^*)uVA400>7BBS<7kk8,tk!U/s%+HS;0@'n.OP:Djg%)9e"GOs:RLH!gbPM9UeopY%)G>BruFJ-jcHPlF03*/lX==BM'S13n3i[fk+LDm^D\.=M`g@.lNZ&`.$=B,SS%7Mj[e][a7F6uS9>Ckkg!g+\]\(qDT'oBuj8f*ZQ$.0O[MGO_+nZ60V52D/8=B7I_2Up$07(hKl!oCZJO9(0JWP(TM)a^^5FLCme(%js^g1;M1"k/m_2[3.pcP__ahT5:**4dR(qJf!%8F.O[io8lrh0o#<XjbgC3uGM=(LK3Vm4JDSXX@NSKJE74E.n4)Y)jcdWJ^(+Cg%:buMd:8OuK>l6'H@DuU(/3,,,;lA]L8FkTik05=e53S?nkJK\i1G@db=A*)7O8X*qfIiiSIcPft_**Wa/cF-#h]7@XXAO79g%fn)%8)[o[SqW^+HW%j%=-4QKhcd=U7t=pPb3+cU'=][/\PE!+\Ee(9P66Yk^R.n?\&ujf]J(%D[elpW/<ps^\3SJ5@-0o#9R+f3SQi77%lHZ^tXtL1C+0m5V5Gl"C9[,^)kM.>k@g+qmRr>9ZT9IOc]=%!"l!>$m7a3+7nn5G2!/\*k+](d4R]*'H0L+tVF'(9H<_s9jH]-YR%45i2FYN1:M6)d6/0&#:_aPA@EeoqJ-C9Gji<Y;B5EH_1KmcLk)@I]jnY[4I`T=`"ol*,R'f!Eh6^"XRQ:5=L"E.HHYa'`P(4]+^[%^D>/=hcZUU,Niug\64mrO_(Mn)\nLs$gtT)&QLgGG'?=ODo7Wsak_,a9AL>0=.7QSGIQ@MGP03f(Ys4(9,L[<h'm,1BolkDs&#kf%j+AV*fA5PRO4W00-W0]<BF/!gf,]?RjHe*Pbe]3Tah7JQ4#,Jfr3j4QOb>XOh'f/[>_NPH]BZQ2'?(Z(]2QH0:--.P0DTg3Ko<b^%9=tn3dXlghLN42gV*0g0L]/N#gLiSmJ1t4'eZC`dTu[G'Q0VeQlHW?jMUFHF.G*]3(Tqa?Su_2P`%K$?[#Rq)nW%]3hj`O,h.t)O%;;mRAp85K\*'ago'S>CIIm/ge"8KKgmroeE#b?Frnbor^p]Ni^I;]p[9`C?#CaW,Ij=0OD^#08BF3F,;lB2PfMa971TtW.YI(*tS%AbdBi8VW&IEcWSgZ@&"M,V\Djf-M<O>NoX><S*1omo,PU9+(,dQNX>rmoYq;5*$%f.Ul6uM=W@\Fs&9$k:MSTQcP@Wk*fJ/g7.:/%c$.;MXp?dC`)'ApZO<F<]eq7B6>$ec>`Ajo$Dg[h(r&s;aX\nj]\sXFK<BkRKfA18<[9>l'&NY_S1k/J$Dg+>iiADiP+Edn&]dML%0MrG[VSEULMGC17lh5^7mYuP5dt"XI(KP[RSjm!b(NahY[QF?_b'3-M.ju+H;=BB(m-\kS'e4@(hSmjs,7>F'j@6i#-n=Z7];5Y%%odl?qe@T96K<DOWFf1hR`'MciogJ,b,cg[B]hqQfHVj'(4[F(onr7r^:L(38\\#TODI09u'^Ln3(H596C#O'*-Or5MioCKP47$/&%?5n?&[#VqhOM:T`\K=h@]CNSaF?_^Vk<\hDlX0)-O7Wa'Qen,SJ$ST%GG^1,<b-).hY=18lh4mL0lMbMj<?T0C.f;clHY@IaYBc+%#WbnoG"%,-dhi,!ht4B5>$'RXf,-1)8,Y3-c@PH@AJo[1I-E/]T"E,M;$mbZBaN6g5)<,0#m5t;jj)0hGh_)<BYgabC/VOaZ"Fe`%NnREE6"`-D3Pl]8B,,m'MGcr1Nmfkj5.WpP<E4^hR4>G545=NVH\'V3UQMbJ7lesgq8Q34]dLLqET)3'E.Q)H;(7i0#nQkLLn+bY%J%a#\'Y@&",KDF?hG\ijSjY^s^FJX5j@(]?mWMUmfk#IG`\%!#;gfRQP$^dfVl/7PP`UGZHG(_4Vl/*"Pe9]Y&62P(8p/<gHJF_U%eK$h2Ugsm$?Cm]+NSG>IpYSe[937t7jkV-27o,Z:Ce-u/eJp_lG'($!26._9e=8asY,W&)W2!f0kKoWMEe)\edOGcH`6#TP;\(EU%E[OE!-jO1P&o4ejo\(c@1*1</7Bq':ek<.;_7jPmfYkJ&Je`:Wer^2RO=F0XX>"!/(Wg5%)naFanEfe&&4+29X+Q;7G'<;qUtt.q%XI^iLZ3blY*F"$I"5m+OO`^'9R=+HT5K:oe?'^<Qdtbh\!pSm%EZ-/;H;&;HDA-97Vsj<u>TLnh=c6fsq\"U'et1*6I,t8_,$1Cl%g1h7Q#5!XXe+t\B+(&CK5/*"XHI.9CV'A"!\MSDVZ2TZcC<\5,'\MnrlLP-9CQphm@V[TMp[S'W<_MFp+]T4)F!%#,O1QYB7Iue"%"t/%!ltSZ?A+ij$-u^;Q24bs62X'Zp^;?*571<7dQ&PB=%@8!?.9CRnl1/;f!aKfW:7a\N#5H\fqK+,,gtQ:U($u!^mCaB:78*:%%(.kK=B90-<3ED(=SGU%l)q[qI=!YGKO\8328M_,Hmm8;`RMFE$>Z0h(NPg:\@iK!WR&fGH.gUEi;9G;4dcEt:L"dtS`fh>g`HrcX%"eb'@+8JFD?(K!''mdU,gDDT='0cu.0'--p>e#N&c$+]A0-WPc[3C#,^]jY3Gh!.2?)Y8hEIGTZ<5j2be:Jt8W^XQGeO3KM?q'a7%=j,VP`'C)pk`<!4<L<Yi=nHq"T#HCPJ$P=gk@K.+EG>6I1`]@m?hPk(RXEMTWY=+>ZG.mljNQtk0)N8dkjOZjmeVsgPsp0b?)_*&%G@f1Zg!9K6T"g_g^M>.>AOV*mW`39tG@d9N;XB"@^FP6AfUWUSAUh?<=7o"3r5o`(7:R,LrCLY#MO+3HSd]V;Ye-k#n&h@hdBa*h%Y04G[kYK,pOt6FAZKP*H^*M6?S'"0LlL,Kf^-Ytk)$IQ68nEKR(B$g+%9u^?Vc`S8!Q>b6K"-JCZ=SMe(B*'C@a]Q%,55/2g4pja%lJb7X/<n6hp*&XH/FTA`f4%GdV,aMI`E^M8qntZ\nB^8`mn58!i^JXI81'YMQI8i3ojKZ9/-%`hfp9Jb1hsTuIm:P5_&^5hU3)s(%El"<`7H5:donR9f8h"5bo>VLUO\r2E<4]&-i$1kuhr.:[dV;\M-:!TP%"TTJYOYCCcmY.b74=l&Pd"\BQebdt?!/I<Fdb*k,sjVg%$dYa1q0lSp!dghgHMM8SBa^..,"!U_V`Gdi];/J<*;<bcl#bVS<0BF#XCSs,YU$b'7#<]&UnVf``HA2aiFG4ebNFZ"F_^#h&kKa[%cFK)g6<($7k+?]@"&qP*G,Crn(Yc$XbNr>N%_FkjYq4cYfqV5f5s.s@nslM/Vdb_uS^>*e+a6nZN6)WNR?Z_ZdNN7`9J54oD?W)2%6NomRas&0`SIFfpjiWt?+]R=UV,fFc<HX>qM(GCa.[27&QnBt"JgH4\bpme?<1X*I@.u#%4-XZf=715.O#PIkX3%'#58e99\^)^B%bW1Q\DVJ,#kQ96XU33o]*"msG]dlluj'!8'bjOU+W60O+0nU3aQ_*1`=t>KcI#8jg90ag.Hc`8['bqOPSZHfgH&[gTdq%EU.M^de%*g=`^"9`o()Og-&i$`e1%Be<G9J.+!q:/GA[4^'S@^fo+Q8]nZ86:/DH`L';Q0S3CRp=0^8M^8"?=O.b\\gFbF?f?%qm9k0S1I9V%`ikb2Rs->gAHUT)@1ab`K&:&.>$BWY40RW`RkjQDAZ<s1KVa,MJ^(C"]-KuD:"\Muah.LAfnb10Re<`pR[Pbn1MTl1q>gu4Y-3Lj%Z_4qrqcFJ)=*Ha`&p1"Z&mBJG;tJ`OTBJY:mr?AZkf9ARq^VJ?PLck?>>=j5`=7&9d"hlSe7Wk2(<Ap'-dc^:p&[&Aeol4XP'O)^%&V<G">@VgQJHYo\B-6s#AI(>\h/='mA!5$>^U`o#!aat5T_E$sU*udn,\]f>33CiZA]mTnH_pVM_t!iA\CG:J`I8Lfr#G[0<5*^&%5dP]JOp;U*:'7pcc=9t\;X_U6WFHo[imHTD-Fo`3%Ck2^&_/gcijs\ubU/@<6g%ZGguO=XL,YIT519Ps)e4;<0q31iL#V>^9KtI*%Z]5d"[i^`-pEEIgERDIoYb.u!dhP%3k#jUena]o5S;5e\0>lY[DG?$k:`29:l)eY%;Z>6(:6gfr]8:l9]'Z6`d_"Dq-U$1#^HQPW%VjPV#86&*7/lhS\k8Uh!p_[<'-S:]=]JU.K`,^N%<'foRBrka1EB2>R_i.65:@FI'1;ZpRF]W=p)CsoB2,@p),!%t`;(g`IbIA8A%,5(+uA6aR0MQ&cl#'?`>pf3RgK;JH+'miO#RgXh;-.QhjaBki+Ur66(GeU#SHQXuO;H'r#=J-^'N_A`Pa=2mj8*\$,@;'kr57d.5%hkWWOEf'NEDCN*lON1-*:"U:`4LX58U`E.;_b_*i$!_83/C536'7gfc+$%%`C7t^S?/QrmC,Y+3j?27(-bD"4K$GIUS"tQ1;0UWl%STHVBNBX1BaGUuh^"ITpMA$kjN&PB@p[4`Fnq<T=:l?>%-0b7uHb4imM"/`-6K#saM#!f*79m+dPW]rBL@#N!B&DI:c.?V]p[(Fk%hp)LrY<6CDr-DC4$Vt1Y=tMlId->ZBL"7'Y'Q)C5@=V"_2!^kVC-"Ymk\brp5@T!3g"Ed+092&-I37b>kf623Je"7+*W#$fRF0?L%jbY8)S=?>2ekpJV=`qjb+Cq1H"i78tG9i%4bg+nO=>)jm-\.Dmmk8%(c"-/u%&)l/D/?QdA^ba=eEOj<7uMgN17!;r;gnGsb<FR=%-()d1Z10u+!YX!`bU%P6I(O5`%E'+]elW;rCgL*[1D'e?&M)TbCXS!5:kj')hY^<G#,WYYGIJ!oH*T/Qm:(\_Z,\ES^>V$`e1UW]%:K@"k<,BLFL8i1+25doX!(t_Bl[K$]L=W[pCRhS3<AUoLpfc.,@7qqKJOeesZ!msb:8?C,lDSJ/"/^[Z-s"a#EKu7P:)X6L0n6W(%0gLLtJ6nLrC\Q%Ai[s=%<__Jeq6K04?,#AfaP"0Eeg*/i_QB%"FcbSIY#")0\)<p`52P4q0mXM(I.=FUO/nb!d@3%^h4A=<g.FOH%LMh>'@mQi#LHXe-kN`jYTsIDoJQ-!RC7oolC)=@i][bAh/fB<YHt%o\D14n>0,?8=Lje7*,EBUM%"GK:GD"U>Y"-E]jYM_CQ?FCr%ORiRZc5(DEV<AkGMSb9>'?in=S2Hen6g"gJ5cJJuXPu-bNME<`Y0-YB*cKZa*&%YD6NR-4P=a*F/)ZKobuBo5POhahO%b2\@^DN@%EO.1i1=f06\02''"p<o^4Te=t)(C*IkIOMG>"(u5pW?`^BZ%.$=$(596mnOFS7Yl*gh]4EU=BfA;(B1Mf,Mj+I+Icd9XUYQQ>GeC%:^59KFNK;+hK@h_m6N)JbMGB>Y"18:/Y<"W&O7>-@C9WG!!F5MCrtnqFJ(@#?-Q/#1Pr5gq15<>:Y!3$Wi:0mB?3i>W$]1p.-03S%AJg_l^$+]%Z0\E\JFYR4cT7$^]VS`qn\h@.ONhN\_3$>AmA1=gB!u_uaYiAOc%BsfUMr"PR@3/2A?p"=D3O90ftRe(Di-rg1a$0?%Bi(N6"r(3*T!B$Y7N_/4ZGR[]3?!^ucp8o*F*'T5Ddh`FZCmK(CQ)TSmTS?]Kl@'aNNMA61%Q97UBD![A0eX4KCAk;1*:GF@UnOl%DH#t&[^;Q%q<Yt^7[\UJIG#JgF^;^jC'g1pO:D>hZ1n2%TJ>m.E2<P:6aSM$g$d1s/6Uu'JM"pD8iL6c`;P*>[9Qe4<2GB8frZPI%?o%8"`35[X^r\(b;%HB5/;/b\9"PK2-6c5^XQ]_#`_D&!ipDYpKH4R]Wa+1+QF4`2(*:K`M>Onh<o*<J)"7mslFSEt!?LR,P3*cg%Z$`H3?_jS$XRYFC3KI<,`l7!sXF!^eU90bm,gpiW=;T]q&F8@L(s74%P3=`%$'3;3Rp#cA34>;+e0S+n%4^:eP=-Cu?41aTP=\r#%!<$r=ndnkCO_PO\6=Q7P>:`PgUUh124YiglmnJW9$3Ym4IZP=DV*&YG@VTGLb@@.Lc&.$nM.F(..qst<_6/dY4p1JW,eHDZDf>tl%qk=o0$Zt.EaGU+<lG4H)fOL(")b=d.Q*\eCVQ"b5R?X<e0`8p5,+('/DGT.g;@lR@Y^*@DUut?[PS]Q#kqeC\!uKL#XT*;aFjBb`%:1?#keJDq],ToTpSm6-gT0R3Oq^V4UF5"`e0ZpC18f5#u-K_HX0J=nUlU<Vj2=;p=%+,Z31&el)idfnAar+CPo`oMZW9*EOG[V2u%>lKUH6dNJ'4HfQ"5?E:;,7'6KZ$qtI<k5R<^)6.T\$#=n7+RE)a,<SA3t>4dU:?hBoD%q&CRRu?af"(,j*oKJ*`BB^I0KMT`=1D>%H>YbN]rti)]ho08MLe#*r-88V97K.j+6ala\^2BJq"L@\mQ'+'-Jc:%,usR^AELRqD5D;U&N1LeEo]aO,Pk;DJVi^dhE[9+2!Lkq%;gQ;_^[X:q1Ddr=$HqpN_d?nQn3Q(4[0jfY5os]u$Hl824GYLi*5E5C4<L[BZ>\D_+Z9Qnn89lpPaK,_3+ui=YXIJpe7Sj%8rk18%mans\U,-nJc$sU3WHHH./jdE;@p,/ai>J"'n"+'s4E"QgRYci;;0tu?[9bjf^eU1N4Of`=.^^e2P:t:d!/@X"H`d%B9$(B`[KUgu%9ef7'3s4/khV#6NFscYJg?M9&'/o=qfEl&f#&Z>TkVMnS7m.f,$ERoK_aqW(EHkf.Z<KcX0I$!7BNhm(T(T#5WTiuc!V@oL/6K:Y%;P.BiNNBscYE*Pgg(t'Kk8U[%"ipSU-f6H<,W.0SB-/1b]8,_o03!4C[c>NEjL[":?ed_"+#0n(OfX!O5f&@\.j*@>j8#pQ3<mW.%?]=Efif:Ch7s6V._H&Y&n7Y:T>6P"n>Kms!;*VW1?'W^K7JR&36:Cl052Y7nr7-'aWg&!6>5996?I]t,dbtC59,Gk]"%l^%jPti2%"05?1?II(Z='ip]N)r'lWa+jq0<QX:X[Yj\E87,d,3rKpS6sFg;6i\K`d<B=Pa(R_9=c`XXEKrjE1W6.VnI^Qb9IDQAA1/&O#XI2%o&"#$bPSQ'0.%Su]49b-84ugFT>B(1N,#a$4@*$_*gPkjA"pt*!ts`<EPp_[/=ik`<l<,K\>Ct#E/RI4T1t+.BleG$N/a>VkstW/%jEr^L]V\q'LQtn7KB/%C]AEti?=,6q`%h4>B6IPI:V%s5Qe)i8k9P^?\fWrbd`ZIL?FLYrZn5k2H8ADu77TL0_tQm>/bECfFL)i4%gKNB'"%$4rs,]1]c[rk^W.'`meeg&<Z?/5-Ei#Yk-/B.4_lTp?Xgnsb`8+ViH=)s#J$n.j=Y?D.;gr*;2SDoL_l/B%+7qa_I9PK&%(eO`GqYM(SfU_I]e/R2JP#f'.L0ElXCplOO?FG\2k"hT[;_t>a\tB:QY:lBp/0>80C[9D$l,/F??@2ZkS!s"*5#8RFH:g(Rp,1%.%RC!@@J@jNb9K>"E1,XB(b\%T4IlZUmD9.)diTnmO.DR72gB[`jT,%$dM-X^3Hm_n^N,7m:>VZ9.^@OMVTg96@8,4c;m)%1n(32<<%U1nsI[6*7fW^J]B.6g)5Vauh.+<KsFe"c]o[lU[kr*[7Cj\lQb>E#&EjQF)"oHtu8$qV#d"$baKQ\$!:%2H3Qb\YDFOB8JdV9[.(%prR5+Q(j3K9)%hGJeg`(j?]<gjs$Z_gh:X-gMlh?>%lDRX]ZuW5/4O#/X=\%XFE5^Frb^=BYLH30#BpW--Z%.6S1.=]SOGR6e:\6%9'WAI?E^8e)U;dO0^:E>DW0Z7GR+,d3Ea-ZCAle7Lm&"4,NNA^hheT<`:KPV3gb&Lfi#Z<KYa/#'m#u*#@;@6`]m(pRXV!KM#7lJ%/X>'sPP*[&.gP:Ob2tcg!g>3X^7'ksnEPU.:3H?)EKO>BjY8WDM<gBEN=/`reXDY!;\^&`.Q*mnARiS^V&"D\X&`t_f1[qEid.GU%-@1J5WG.;MjZBGPG#$?5Fb3LkJ66<og(q8MC$7%l-WM+#2cs[6XA:,U(S7ga#"hNGn3e955k?U]7O!3KHKsS1TE-sc3'<s_c5#a:%?-PHG[pj:6A=cf)Js4a(M6DX\lF;M2)__4J-]@R+Ik):ugksW!SSPo[R#F-?(/MbY=skO8ZC(7pH=a9COm9G\mW9>F@+-poq?T0n%<E+!CYsHlq>-iR'pKC[@0JAt+j_cCmSVMTmkVl>>@s^_Tp,iD+59!ikDu;0"ph#hen$'E9$!cQB!XU+5fLf<IjSlJ(]Z@3TOjeX^%\!Fad;r"XkUK]6PR<"ko/`YD':Mm\.M</$,@i_1t@s^^Yi/jdYZ."2j>C/g"l3b"$o?TCZ!mZ?2;hF1U[oS?Ln)N!UM3AZ68&35=%M8m#GZ97S(]!^XZ-&!ohcWFnHVEBl40B*k;>$Kq9%Y6!f=[&U-m'@8g@Tf@K4bZXcc+fQcCQ"GAjNJsE$QFehNAY=_P4.[NN;':U%Pui&WCO*'^F@TD6+brH/Ju_r"dBe>q5,;@NGISktXg<ANX*]1-:6"bU1`P`V#g#MOF-Wf,S3t/%@dEMU='&o07iW9F2"ELKB?oq1%d$uZ>M]A$U?/7k3s$,jTdTOp5j;m-naVXKm26Q@9S:!nqK]hY",Fj/$3IFS&FEX4eVscbAfoOiL_b;`N[Fa.pcSY9uo]G\?a^$E8%kNG&%?:?4Pko*d`6YAd.34mS)C<`5BfV;I#EM`,5cTPo_^#L&Rj&GK/H;$:j\`YdM]]$<>`-T.:L\H7%\l-(O8s.t?p2>5u<$>V8%"8'@38Q;U9YK6fS,4Lq0E6=t"hlZ0H<D(B$g(fZQhE)*@4@`7[3N_Qj$/p?pAbj\fCOX(3>Z[G,=*oH&e@>Nl?Jc&-Q21>-_okqL%oWiI0Fm4"2278S[jr[4`dhnM.T7eNR&Bk$'R6M1"3mrNN'L$;*/6e].\SGFJ(<`.E9<Z&'g@3fdh%i&N0%27#iEDe2C/3n%=>.PH%T/?Z\7U!JP.hQ\P<V.pH5`L.TAm]TG!0\u;)],(ij]K6f#kmM\l-J()7^A0kf"];VP29hcb+7<s9>rfUT@>!gRrD"0LFO_os5.AA%]&AVQMT;OJ>Y07FCg6_2d[RR[0<DHVQPjm:*^4?G0fea?HMcGU/[*Y#XJAa85*`@F7<7SiB"?$;7XF6'ANm(C47OjgnrK#q?=01p%!6r>OnSq<>gt;G#4u+E+m(26*e%Xg6.f(:G,CYE3,nI34"aPM^P3W_-qWr=UQ6DEjS6g=/O/0.%mO1)XLcu5H&ClI*;VpWbq#dpX%Ru#Uj+"_tfL1GSiDLQ.DR,uf38o@qB(U*e6e`B:Y9o/K$d0Bc=>o8%7,)0pTc($m!IOi<F$9H67F<u=!5b':l(e-<>LI>U!)`f#t%\Xq9>)2Cf/GbVS?J<N*'p_+]_R*T3K&<2dlnb!Wp>tXs4ElcA*KB2bF_TNth**mIY.m/"0Eqo9$fYBR;L5Fmbf66r>IeXhd38ms%%iG6tfk[;hqluJls2N56G-1k0Squ$@%.(Td.!0%5cliSjEnX,m=!&nFt`s3J0qZ':(F:uV!,r^#^Y9Eb-3^0Qj:(KPPisS_.+_G56%j,RBc3&hF.,8Ws)\?9Z?mb=5%?J*%CqVHip9b73QS*2!QCEpsp4eV7*!5IV9Y_`ep&gC'A,!9m&";adg5&V#iWOnk)mf;0^%FBT=%FQdUZbiH8QY?lFT2>;^3gNI8Ek\9Pt#&jUje$$'1q)j[(bF05[er;n],$ujA-i];"I@m(e!"WFb69-Db+-2UL*IA\/0Wm/\H5,[@%,MFA<*a6a\Vf8Sr:R[,`[PX!f#?fgMH&hgW`_OCIKNT)nrIMZY\F8L:4[7t3p);MQO@0SiVA=RH\.=N_m%K1t\)HXmIqe\/`PWu1%bgd:!*^>X4F9dSXSN!*uIW<f64bFi&m_dfNfAhnWr.F+>+_FJKis08[@k[#]#N?a(@Jj<F5&4B_!LNU;^cT/\pomLKdm1X=?A.qo%cB7IP<FC:#0F4q5Que=LLLd1J?-dX3FECoUh$<3oG`ii`@lrI5Ig2Ob(u#ZZa-m"Ch7&GTs"VmqGMTpV)NP*7:0fIO=YkeHo>PJ`%:dMHnYku7A]a*o7DQcTT7@sj#oJ0l&'lB[sCYAK<opU+l\@\"?_Y.*Nek=<G#?u:frVr73caC9G/8P"f\-Gh:$(HT,Z685ApE!1p%9""k%chr'lrS),T315V'@VWW+B"ApM*YTo1a#7_F2cl)F4nIg%?(!f5!@I`t>b=*Dr8mU.fqhKjj.qL01CJObiA:8p3aG(pM<Fm;%H"RKmmUpStA"h5%(JZf^Jq_@@R40lG=e4N,bBc@>+XqEsd&_@2LY_G#rqqsQmmmjp]P:SSSYERo<LhI_ip'4tYkH^9F8<e]F5>LL%s.-bJ"<3\SW0R9[S#",TFj8"ejb5;ZilAWfn\Up1",hm9?.T,9RpcZ[jFutq9qCQokp_)$PeH_c_[B5mcJ>"E%(Mud5_RA7Ko=R/%r%N.GXJB9r>eb["nFbH.bBEm[[83?L\in<o-Pb;b2imXcpK^pl`Lbsrg#ZhA?+E'NC\Q[BqRgii_8Q(,c?$sBlXJSKl/ppW\jQ2i%lcJsbktY%"[Z3UjZgW$5&!o";B,COc=Fk)W=Bl]A*?:OW[kHV(ON1_7_n$'pE9@(NfqFp[F7&'oDt>2;2;G)I&<@MLDUTh=YPg2O%St1,oXq,55(c.N(gpo7pp"eC%LlG,i\9d0"TLq)mjQ(,MeV.$cGMC6RS-/:eS]+sLrn%:m=Pr\>m*"/dE0I8.b3)1=GWrM*h6MHt%R63:q[O]mUf(E<fT;LHe^].2":q.]6f\TAk>QiEO?`=Wiaj6P=rU#'k:\>,\r1Q?FrqbjPY\o;-VYbCBqSm>Q,l-`+hQag:FoKd[%p9V:+KCbM&3re4*O?P-93MS+eo:7ODUcmPL;VH[pF8#7KSQk"Wa1Bq4f)=1D?jXh"B3tN,n%2"JAI",I^&7fGlY[;\o:$L=r7t_3%f>C8>52PTY_=PJUaL>P@_i(aJmdK$b_RhV5#><u^I'mOi"?;[[iKq\"W0c\tLl9V!*$9E10Bj,I](#(*hK7-52=Pd/UH9D6'8&`@%#\u(goG?KN*d"&L6$3oLDBU:EPCNUg#N'`R`!?l]<9N9`LNs$WB^L3hFC4`&&a1ff\2h4t20:;Yp5&HY,91L$X0C>'<n@jBLJJik%DL"LAqDp>\<Ao2R4+DSSI:&n!gY'=<Cd:n%]1Ne7I)O4#LZL46hsA4U7bs'9msf2"5dt3l*q=W]8$&llFuO#n%mAkKo%uYia2-X2%F@`.;qdj98#KXB5reMX0^L,,(%sVH:\bk\ppP<J>#*1H>D`q=X"MDD6e'>:nfp^*fY&8!dna+NH;.sdLYBonkIp<48[e165>=i@t%FT1XU<WZtl2Yr8[p>l8WZC/_(IG[$FBDgJGl\PKpqIaUa45_+T2"pj.5CRh1gtKrf,:6/Lrq'TC%e&<Dc?4jenm3j:IeE0IbQ/@P%rMN!qeb_"8HW,SijLo`srV-!`1TjF_pj;&*')DLG`:,umr]%@NT-sWj]_a5.a+o0Eo',U;s8;G'dm(UND>NGQl^Rma^+oQ3YCB5^%4tg8=CmrMuks%*)F)KGp^+O65GQ%E9M6-`j[X%W!f@N+J)E'VJj?HF7eU^RT1%f!&T]"'nXXoOSdk5r:%.ar7Gpt66LGcJ[B9ljV%FTD1Y7,b:2R8O0]O)^#1IHjM4]'l_LD[=b>0D"VVeIQ`:J^o0?/-5M=)OBmV(d4B:4&c0?PAK07h2c!5"3m9pV[-e(Ct<]5SC`8)%>$E:VH.!d!F69S+'7[`&r7G0&2hn4jB>2.Js"H5CV^+JY:VQ;t1cP?M,Q"276Z;aTO(\LZs'US1fF/V()QH%1hXsBOLG$@4]!p,f%@=J!,T;N+;(-8AuW.>e95RlL\^u/M]jZ+.Gc0@adIp,)XpZD?RbAhasg_AJuh!=2N.qomI\S#O#:L3m0=0CE=5MK[LT"hK=K7%if%Q>eJDb(k'',FVB*q?uo!2dCCql\!;PF*7?PibA#Zq!:h<eE2"eh]SP.NN_ep*SBJ1$V0t[4O4E@R4f\;jNQtce%a>A8)a/>Ie@,A%4e'pH+&$cim>D"fpi\o/DL1?\QgVb`%$?FZGkEU=_^A(4mc*hRS[TL\*jP\:ooX$>D7k+qA[*j^^O+H/EZY<S5)K,l2pW<1`96\u%n(eNKk3G`aPIWUkpXLSYhG-<61t_ci_oVH(di\SSrt,%)qu+mN]R;Q?g^b^@J)P23j35s-Ps91n]Q%fJJa#,Xm.0qu5H`mAou'\)%edempi$UIdX`c@G[@l^\KR4CI<'>6t7;RHZI.t1$ST!+CrjJUbH$DMsQ63iPI.?O-Q)4?g?_4q&IX^enE4.R\-68tsr\JZsj/^sJ%;%'7:!-M`.binXQ4]L%J[7A;iW-@O_Z0Tm(X_sK0q8Z_N1aZHb^0K^)#MbK&4Q/kT$979,6Rq/hGt&D@POcWsU%t-P:&WoDRMP)F%=.+djlM9eW\];HGCcn?;5$!.s3qZt&p@,rW?M7gV'4ZYYe&uq&j<sT#].lImWTlMa@5hfq;gp#k](V=?.^F([,$u&PS9pf.LY1=k%r:oRJgFl2AJ;lemH(jg`SXLT"SjNN&<ut)PjnJ9TpsWL.HliH(qKB&NT#VX/d.PO%UX#gP#7R.&as0D`;W"a*0DtTpkJhNODS-,J%YD)im?WVa5q=XRDkO7GPA#I?_QEFBfkkg,WQ[c-?5$\&Yonu%82SQ;B?QVKi^9I6;q:`4h0<VJUpol671E%J3\`/"S$_+n?\D,m&%YTcp)Ko:H3.poIYEW>C;Mgq1.kILZEDsR,Z?U(ITm/)1]T/\XA4>sbBC#d?h5I#\!`57.\)n20h[>th7+$J>f@oeYENPX!dMA3h>%^\%9>kEk5ZV5s.9jMg_sT3a2W2;_Lu5:?J9R@bML*SdLS)`aC5p1sKM.k`99m_"!>LY!H]Tq3pJkHc+cIkO!qmG<6jn]/MK+(m6o%lZ7?n]fhS1rG;6_ANqb"4BVIPeUANNY[+'l`5[M?[l/+U>tlhn:7_1ZH0._(^U;-$^08AIeX_U_lIuR89='71eK%#+GF>=/Cmp\H%5'bT%SU,U.n]RhGpD7`Gr:/CuQ]&Ndf6_fBqr3qaX5=^h?$^d*n^Nu)5IX>Yf<98a^0g^4pojEIf6^.`F$D;'1?<Z<lI,8C1A180%/PL1RUVX>Y<ckCk^U9ZijRhm\5&]$HoX`qI34\,<J%.(cp#A((Vn_fYY.V8jF5d+2^TmEFn^1WXDu4[dHM.,_3HOqm7`csF5'-T8%C)1-.fB5>t)r<Z"!l$sMhridVs*aaqYITM#M74k+L-=C"\a.0%j-EmId':^k<tHB84D2TKTgMgR*lM.JR:@sLL@4$tUl?!91eLIN%A.'EXf^(#[Sn;g0W-`IM>gn#++JI2'KQaER4>o3'OO-OHOTrdf\'PL.f[7)tgFXgoCR4H\H+Eh/-=kbf2P5D_S(^aq&X=:/gKAIp%710'kRat\TZTTD8e\-CEeqK<(X*Q9ge'FN_b1+P$L"j<*FnQ]\<u6qt1,mK@paK\Ak,lV+q=T/[n\OAn+P68rkM*-,/cKHliBQ"!%p%IIm8&mJj5T&AJ]g[]So"g""Ien*O/%oK.[;Q"?Uf]!*rX6;cG)]"Q11pHWD+[:=1$p_"7h-M':p&LN`[2d$Sj?0/]A(m9ASgr:%b1gj"+"aPmBS*[JdapsfS%_hqdDOL/+2&cL!B]"k`\BB^s.0i"c]H"h=a4u_#l3paZVc4k..[$bD/Dc-@C<SQg55k@g>$U>"F;sa%C$1dHr)u5UGj_lJIfK1#fY2"ClIA,6/DbgJn>]bsqKgB355k2ngfXPX#>B&s,/?E<SJ97kr=oun(B8dW;g@l0?a&>D&Ng!bnV\@T%mbV)OppGSKW!`\L9p^^aW_JQ,f)*8\?u0@Rq_20K8)7`ck:BM[b<ENs*[L4A!-OM!]gH"HrXmUq7P`3mfc-juFG0H/]*R!Ff!IUR%[6sn>LFON5_Hq6$NiK/KXs/%iosuf_kVmYaJ(O4/['hmilhL5Nld,QXp/Uj:Umf*O0]=^\GE^]dhL6_%3mJpBq"O-"T?[ADc%[sW%HV.K(2XQfNHfEYLpQoci9m>E.3qjJ3G'WW$`J$lFJ,JK(=^Af9<A&QG)eb:gc-[g(,9u4?e!#?YV49\shEEP.s7ig<l/MN,9:jhF%>B4Q#-:dITH5P.Me8E^0TROLGgeIIQrj<M?6^?e(m"Tu9%*i/&JKrCDjh;^7j4N&@EbosbO*[U]V"_#O4!GY*RZ,_lgkTSh1J3))%,O!'*Jd+K$kX["`%[/<D<miBmeR:#_;/=(.>1[4rMfo=7Frt!$[iMGRN7k<Om*nlOZ^aRANpc(PO(cQD!G@Mks&OVVLj[_iIp:[u%8D5gVI;D^D2!q0hLGK/l_a^Rjnf'AY;s[[Goo;`Q<hK7&1RF4%E+e4ehb0S;?XC&hYN?lXgjab?o$XX)hQ6T);s*2)],0qj\XSp]%N9"uL\_ngs?XA$YR/J?so,IIu-bAEpVnX9\i,[^,CQ@*`qgVn^@C1p6#:oA=ERlAWP2A-Uhj&DH-MR7G:$r"\;boRiFFPqU]2MGi%O_QfB9;il:0D^LtUW+WN?(Jn*\CB`lIoGb[V06s&FO[J`#F#%3p\Q#6Iag9d^TW>/e\9msP".$g]H?Z%2S&9ok]W#)kg/*kG8J$U%j(@u<`)ZGf>8%ZXr[d,Zn,2OhrLXV'0=g[q-f"@mFD(-hP=tX>.)DPRoR(TQeb*rQrqYa5J$CWU-j=dL4X7S(fUY76(D\iNLg'Au%^QqZ<"a47Vr<BYNa`'C2J_dTQiEGeGO$@I&_'A5#TcpGJ9<lre,>#/8WQRCl1l&(m3:^l(C;!hEUu)aRY/*5)AqSs*#?m\C>mGj8%)g)#s8T#MiY@MKVrTrkJ^L*PZXOeJ*ZOO<+1rJ"GmHB[1nue4`S%&6R^[ghknig`"6p()rPUs2JqeTHCds!,rmF(+Nh"gg.L:*BJ%RU*EdGQ0-dZaHXurqcSi>Dk/;/`+22p85V&FR@30QT&Q\oLA3<I<&VQZao>>$.RRVWlCBm@JOT<ZCS56!t2MnaZlD&fL`%/kSY8[%'tYQ]2Q5'86X,E)#dodg1C?"0rBjUTs.)t"dnFg6r^B<0mofVD_`(b;mlcJ=D"<*eZ]dJqgc4t9PU`g8P%M-3lPlt9mlkC5TaI=9%E%?\#Xj359N-il_D"<[iI=F0p<attc4#.6nLGe%>2kSK&Z%o"5;7686;;rgqj?4r).j[uL6M0pE8EaJ1Gu*..Y1WF=Zb*bWT=Be4%l4*>24MTr09q8u(E9l[_0kO4O'D^X6jlAA0HL0%tdeuC_[J'4Bd5mp"350D&O4@GF)9S1]07WmeY'Zhlos^<rA!=MC[RY#^ma4W*%coUs;X<!f.G?UeZ4ogZtHQ7S]12D+&-G?CDdilui_fu+t`N8I<J*^Rq*h`c<KOc08F$R)*TUgQ+B@_6kZi==+^L'Fu^i8MROfR@V%-i5f;On3l9m;Xu*BpDD:12N#=P4q=*#;^-cVr[fMN18)GUSm1D-ta2>D`2EU12E6IrOYk][F[3U$b,0@Mg"gmfaIN&_T]U)Eq?KR%`P3eLe<5_SN\*FY3GSh2/Nel:V"%-oHG-:9X8K:_0n3Zl<@e*[1;>`IWJe5*.N<IT5rY=WF"gm<'N8'mrt4oTge6!k^5Qsr*^SE;%&WGOq'8>0Wo,KV+lKF5NSRY0620KKiRmB47XrcYlcfrQm`oW#R0"dqYK#+`EB4PAhmK$&</dcnmA+tM[fqW&s6&j&.9\gqijBX3I%QRM'[6D=rUanqd&O\OYa;t>B2h(B1\PHik`(U"4EaqnY;Qe^Td]*l)sfIussnr)VKq!dh2rkt5r2lqH((CI;B4>VSgMp=OOme#_M%]eKEXmId5gos;X.D>BGeh<JWCUpo7HkL>RML>Emq#3]F98_bY>s.)>f>N7Ydp@937e^#XHc\HH31V5YP$jati&2:O=R<F6#`Ih`Y%D2O)iqfc6BCfqP',5;sXr>]rbhak'kMW[4H<^5>XbC?A=c^&'(3W_NTWuo)Tj:Cf3)>eL;EE`4GEoQLrGlR`R?[@kf>'juGS%nl4%@VXm$>CY1/qgSR:\`"W*N?%ccq9Ai]jbN$5g_O%<LlS:+As2k7^&D4BS.-Lh&kPSiWSrqedRK)2h`I%oaJ*PG'Q8V;gOjSnrE#_1%%iePpoN=(6!N8(Mg[8Dbg,n&<B5N%GNhcoCqtoeP3pJV_9cg0#g8Os@8*\$;kY12;EYCq7<us=[iHL^CXWOOU0s;WY(24cR]$cI4%%]VEmR5cqNP%.FQ\`liGB7Fg!/R2qCg0!i$D(]<XOS`[GM\8C>)VW$XGAe)tTlPmr6l3TH4E:O'e'1Qk]t8OS;k7.&F^s^<?^`sb%ZkuRSiVZ?XY._>[kK]=\m]A]pIIZ1lM7Z.63]!rlD]hX2.8hBC:!DF>noS>UrnXi.n"S:H..9pT0:[8M1&^q6\V^.NpKf&UU4RS`%%X!u,lJ*88Kpt3gH8\aao%ihS0=@bCag9;sZ.04Xhlo02I&iRdYMIk]HX8kW^\V5p^^jMu^9EONTSjDO)U5[>0)*._Y4h^Q(b,YL%>Tr]DQl9]bLUKUTOh8V$6QP3AC+#WX*&Mba2;F8Ygu[D>%t.J25MS(_9oJN;r`cOq@MRAViKd#9('hP<?4XgHb2ko^[b%g8O+(f`%+q;r6ElXiYl"o\RG3+k8W1046%VBpOBA!s$FYLFSD8*'p\1uGBc/"jPD&[]ilr,Y3n(ouO4DJ#9>5n=sl[B1fs5%O]hb>3]9m9Tn%YAl4.LKi\"]@5Ncp$;?8aS8d6ru0YAL$[LkKgS(Ee+4WK9jZ4;B2:*44Z[TZmII0&j6+k.V=.3ea4u@b1Tt#6iK^>>d^Tg9T=j"j%PLo]$"&aErR\d^4hkHh,KMu0Hf"^&^H`We"#(=2?L$/FbH'XQ?R;;`$D=.4]Ols\slbP68HLcS:<d(U8j:ChBV5`$KDRefdQZn'k%amY"S*Idf$]#q\3j%p3Eo8bM2m25H?:&9T+a`$MA[B3$XR:09(It?%_It67=B(W9"0<`^e?UM/+s60,[HGWBh05[+QHN*<sf8G,R%Y!!JAib;5;j]m0JOaB1?ar#W"4OFN4Y-6rI7D2u?3P:<skkD0-L]Y`.)ZfL'4qhh;hjFd(h0-9i>jkO8\o@]4lGR.VGP[)#Gqjes%l2Ia?n\q\5j(%h,k*!e%GO<e7#JX]ae$krF[0E3AVs]-M?_*RR56#R,-@C26l`528W'>DQeIkM,cZK*S_9^+X3ZiqnOFWpN;rF-`%f)'mR:25@Ve\>/<V/oh0>P4J/Jg\%mTI8R;`JIZu[ek(UP^I\8Uq?-ll$?-@;1G0!29RlNa%p'R^?n2FL\$RFhq6A1;"s(6d0e0'%H@1m:SNApf:&.7/BKZ%1i`g:O%&tOjC@?GsYgXODYsTDafBeb1J#@a<jI-#A9l#l>jVM!akB-(HYrB_1PpcQfmWO(oL$#H-QdKR6%[N-!0=3odUlKn7WL<C_th.0Tuj2m.I5ukC*cNaU+Z>=.!5.L6YZNF9(D!qjXj2jRDG0:ERLFqoTrqJQlh!,sMG&lmN2W!?iH]t&6%6[-%sM6kOBp!'&pmH)3ki>f-:n]0an&+J1W%(`^S[0QO6/K'U,iD(m0>^gbB9n0d:dG/-P??uLs^_W>UA+0DgBk(M1bsJ!2\D.=l%HXH)Ks$_<XCR1iGb<F0%5+-[TB\kYZ>O+2t]SH>kY]X1%[;<>tdr'TWV?Zq'YJ+S=2VS$_=L!LdR!S4MFA&k%LR*JHo\'q2L#N#R%R*V*BXVYWb/],K7#Q7)93TP->^%()WIgM]a?@o`(&r]QQ\d3cThUGM/KQlVJCg)Kj^M/f#gWi%HmIdk!ReZ8B#;CX%,N>k[T6C/O%[>>toq8kP`Xp*Yf%If,M0.2OSE?C5Y4Fjj1GC%&D,iikbd;NX,dtu`S4>cF,lHS[(5%Bs&[m-O8.ee=DnFlY[IR]5<g8V"/^-2W.%:D^GNeJ=<_IF<:g`"$n"+0)+XEO+ILm3&<RC7$LFHGJ1oY)aEsb6-!t5aCPs2Z/A.G@PBT.X-;+2hs\[`8O2pk]6FR3.L5:pMLHs%P?T+_7$Xm0eUB_ms&;"eFVY(jgg_Z(&pXSZ1fl=oGX(Ecq<\"@/#NVGd9M-FTg.:EYI7ar$B<//%FNgo8PSZrqaOiDl.p&i<&1!c%d+AWEF[m@>hOF8!n/9,#-6Fs1@j?KCJAt(?3a6<7H8c`]Gn)&jjGB':?f#RZE,2X95@S5,,4B"O6P=ZV5aT*c`85RfQ1JjYaEt#,%bcjLl01Dg-Sf*57pL7A`#FENMD8dW':r%"jSoAJ;&8M"\<RdYY4;O.VcL`)nGM&_+\u%[70\>_F[p5M"B:Sq'hLr$_rp('N\b3XS%E5!1i4^u9VV:dfZiKhenF.g5bh7(=4mpn5aUK-j9XHo6=W*66oGZO^;acUr?9./G2]=cM"abSW<c(4e)VXoa_D^a-(AThRnQeC0=%fmYT\)oKA52K]a<)#iLWo#IH5%,8-u/^LAh4>cbFWo']@p2HM0.j%-n)]:[G?/C+dEO!&J`+8QuRCd?QYa<mD*^&H\a'#M2]k6B0%*7(OOeM;>Aj(@Z#r)jkSpD-p7[I`"SD"hbXj5)"Ee8$*"5DW?t:&CtK!LoYkd-;\_/W?/_^Nb(S#$h-#>C>;'qHpZhi,[:J0:t8_%'6eaD0\C_2cOO,$`V$j`=0K8_?9Tu)fJrm+ddmundAH?**RO7/6N-8Yn&Xg'(iGX_55.Y1aa=nEGOaNF%c<J(Npr[^ZerNL=6YS/%+JpLro1%<Z'Arg?kQ<H.rg!OAcF4!m/)9p_$Nlq!\`o^WI#-M3>PG]>\j#l+5@",,]UeIDJ&OU;R<Isnf-7hMmSGk;YH8i1?4Ab.%oI$O)?r::QIm&,[Zi-0Vs5eti-%Fq*a+2RA_gLlXIf&ono#99;IJNH1>E;F0R+B#@ZhjZ#,4IU+#3Se[R]4H(bgbs4!?\rHIGi/_%\")g_IYnG-GO'PK7q3uD^W^m#(CfWp/UTa*pOm#"Au`>kEQas-5)clZ5M5U*>H%4a5'F15_N"lW.5*f3Ct&b9]>#bTrOYR%(qgWU%X%u36\?L[ae]VHGBOZ`h0fQIJk*@'N%IdSnr7RrpDNSaWWqE&JGAX%7p%:4OIDXW1CNF[eNZC)\oE7(Rn*EaBICD'`6eREG"rP>H%H#:cMjl\'4MVA6GEKq:]S0h>*%mA[>Il+E=(@Eg#1nWd*[JtGgm.ApUqP1a7o_l[HDmZdk8JufX]"[\J(W86K<^2'4Ie2CqY5T?G%j8+6prX]%p@N<]/s)5n%#&h3tS%>i2I,iBJ4-+8dS0#H@I;JK!_U>X\Mk=)%5QCNXmaqK!T>Jt(>;mX0]/Y7SI+.2Ta/<H?k)J.=%^J:OSgD`5gE8eiuYP@4qjX9)Tro`I*?gHaBchPC"j3%rSr;O:JT@Z9As15f+HMRIt@qL*[rq#bHnm?U\bdcneR2peRDTqTKSc%[8%s2mR/b9)5Ud!s';)8A'.iftD]J@k92=lZ^dB)LCcCk(:%?he"-f`+<gqfD,d"^PD:CX-pKr\plpYftZ50)Eq8hmm_)ddk9\,HZ+g%g78utfA/nL4PVddi:3'k%mPJK]C^4\<&$PMn6l4HkO0M5VuGl6fC*b54T=[D]5O`rpWgPRoBtqaC4C`9I:(n0oD8LdCqn-*J%a>,%SfV.Co',bt&&2/[[qg0^YebuWJ,cg_o'Y]+WIIruXiXSXSahqXNq5$FnX!2JPjQ#QR=Fu(kGNNI<X)X?c8t!U.Gi\sl>1UDo&o9p%n+6!T:@IcKTau<:rkUr<^0?qj^Y`.#?#.qP^;C"ghpo+V+$T^hs.&rT@msJYGDkPLpsR3B[IoNeE@aY!m@TI>I@n7PZaP?EDI5K5%qt,ZXq:#2OYh"O.r9$;Xs7kH3?QU)S&Us[cq<:8=[Hfc\eJ\2#],Q'35;mtmXSsY!YhJug]"W.RiPkeWo;;7jrPO-PK(Qg'[oM[Q%bJ)&k]88q,9@eR+>?P69ps$_UIp\5Pr8rHTa#;6CIj]q/jSpWbHS1'n_mnqWmm<Z]m+G3UNYm\O(AV<ESW0&PE+D0W43#c+/rfa;%HFY:lmM(!p=W,A](MXpcan;C3(oY,U8sYUfoC=^+nts"gQ*HQ@ch`GP&L*T3b,$Ie3Z2p#(IVd]>TR@:Okc/d,4:X:NUpR`^7m!d%JsEBQ0?4^GK?:f;jT-2Qd5`),)._oU?[GhX,/@H@I%Qa<#4(B#Kjd4+75!`DMb6[7;^beG)/SU6-r^.Y%$(qLbF"J8PI%pE>3!Xj%%.\!LjPdLJX"9LJZ=e4'r8]?R$?\JP$H^hd;lF#/*KmL0a;BahK:jI[SX&s&SkMa?8!Z1Rq;`B(2j:=cLfXM:#sXWEiCD(^_=pj3%GoS%i:LC>?Qoi<fQQ*X("`)8*$l'`7QGM1sLWe\&Y+@EeX,bq>/Fma)]+#C2+istX.!pT/N(Ik5N>5=B9[?[J8d3bU+:AE01a0u!%71nic@r('@s,oTW\V^b;actmC5V#rnA>0lDP>@I1b/3hl;Nt<3K<%>bk9/N:M:kdK"RfY<9<t*SNeWM7jk/L%A@5;E]W-3`YVm5s%)YB$GEh/t1%RQ<pa!(m4UJRMhJU8Pe!n+puVJHm;?EJ#XQ8!R16O;=rbl(,H.#O.GaVJ+.7UqTAi75?;b/aFt_\?V2)\\Mratf>4%P^sFnBM>_E#$WMQliIu0kh]fE_9$aL^I8E**i*:;*_U70>m5W^$)F(1bm;G6lb!e5E"'EP-76)?HEIOYrmN8geEC:u:oR-Q,a+[h%'=h#5,r`p"Q#'^Jr4_/gieXcbo)n)M-)<"(PWNGZje5_HDMfDXlg_(CYVPds7Q+2*@Dp/udg!H..:]b[f!/,Z:0ooL,q&37/keou%[$P:]X6aD;Sl_>;!SM?NCYbrq[?-bK.X71?49^ZH1/&Q7_@gBS^A)"HobKVB;oldDN]EO*GS4<.JJ3QjM:j&:k2dLi?lUWCOSOG1%jB2";q,hZ.>@eCcGS2D7r)%>82b]l`jaAoU*"mOh8OD-=.A>tZ\W$,&*(A/]C^d:rg`tie<$$#EAIX>5HJ*jr=GKh.h%TW"VO\a2%WeJ)W0"9I8.iW7ea:m?#W7#`\.')oe(5i4mkX;*5=h/1H:!0#I_5q/Wgg_MX@Qh9#N2=b)-#X3Ghr7lh6\g"-$W*F(q*kIKi+58e%`JVVAJYeT9JgX3Rs7*b%-Bj@n'Md5'P:^/k1(@Y.Z5Blg<>Lmac'_(p5Xa`(a23):\oC^2=C`rN9)'#De0CS3]ERlLap6%Sa_&&C%j[[udP:akSJGOpVaOe!Sr"".AjG<@\A^=Z$",&B[PA92'+fm/p+kLlPa;=Sra:+nTE8Zb<=#rYX*?iHma>%diS/WUVf*L'?4s>:-%&T[:Ffli&84$nseOS`RYC*R6abXTXUdBS[jNd4#@5YI`07CG'7[N-BD7`_9HK^9X(]A+dqkW;]9*@\U\Pf&$9)^Pa@;0)"O\b%>]%dBO5BgI^FnP$4t*e0KWG";p>q4piQJHjBmZQ&nVb98)(?7bg7`M1T,o*duEL,3VaGW(U,>_EmZ<RCWYq=gJG=#Wl!S)ouFN,,I'o%=J9]VSiR<]+5BUL["9!EOZi;D>-a#L;f^%tQX%)-_Cu?f+Nbj]jR^/Dj]b,?;o2-NpO*2gViLUm8jSTBdg7e/!VGSD2oA2&iP6L8%CcUnsU,+.c.fBuN8SecK4$Y48_Iqt=7:_5;[ttBhWGi&1aA\mUKI.MV[,lY=7+k$@U[SPig6@k<MXnf(Yg&IP;^A1ID\<tS91VF]%r_ZYr@8<N)+WP%GOD&oMAAmK9Xh2"mUd/e%JC^d"&5G.C)i;X&b[:lH-5jr!=.K!lfd@"3g9@Z=T%i=(i44E7Mn2Xn>Z]KB%N.2+%>(SGj"QiY)!CT3e.`?`pP6jo$]31>HF7s"V7_ZE8d_Cu9n53;%n7WeHaE5'i#R3%IH$O.@7kbn031sIjW/Y=8M$gf[^.laX%#ALu%\TWst+)$7'2;/bB:D2bZ(&?*IV$e]tQ_Q,`1dT+MNVSHZO:QC,Z)XT2C.r0P?=p/]&02hSN=a,c\T'I!Hl4^O);kUgWgeVn-Bom5%;VhjW8k,gX)aIH738qPu(2X:R*AUC'XDG!/#8hWa?pm=/!BRQKVm*BB+IKr/8qf;MpPVou,>j.FO$e&Dr'T&AG/m-1(Z+?F`RNWu%F<iOo8+mAJ%4+J74ErD3*Zf83Tj3HNN\clQc@"P=,3e02@+-_W-Oc(Ii"2X]J8*)p*!E(9`BkPE8#Sb1h@1K)fj<`F$/^u@Ureh!%HHL?JCkE^kp[dl$%uETd'!W6P@3SB*E-fm/#FT!2%$jKA)\]UtfaNon2jh(g:RH-qaTEt0./0Fq)6;Pq,W21SB,q:97hVDPWDt/?%:W+rjo$F9Dc;'<Z@!q&m7DC"FA.Wf]_aW'(BKm\CC^;!m9a`0]gd)ZHkS-.R@(1u]U_')%jM_1nDCOlsia0@EiQ+lU&qV_MCfH1,%Tr'@ZJ8CHh3KYYFoOO]]=t[t33n:L7UgSbU=G8LS5='P8#n>7U?rb9s=P.FLTu&$::QYLUVe,Ifi^o=QN(GM1'9m>oBl]`LF`"3F%$cEo:1s3X>+hYM45.,0Z3<ZFUfSMq?Sg$@F0I@mX5Z;1!?pYnV$NUGH_lB^T?md86$JZA.R5!3f\cUqK-qII+o%=Fe<aI.1'WfSO%.EFe=]/E5W9>Xhf3h_?_!^?\JWQP#me/qP4HB>6?%`6%3?ghre0TmR5Red(l_(iV1-=aXu2Q;X[O@7M/BIM"m!X1L&@/i;"B@7(l%Od5J(Hbc0YYbWD%@<L<q"]U/+JYiQefiE`$`+*ce,>\Z/3d)Pm7&2RR)CH=!!FoHX=0D[2iTkIu'da$?JRjKALW,E*dWXYNfSG'Q%iV@F1O=f<I9h[_P`A(\%IhcQcnAdlUa;gD'nl.;*UaYl)@_fZ$,bXg8/i';8)N.W&7]>.jd&stMnj>$`>,kDLdS',CVh0ch?!(SF%aKFc%)4q5dBcU2XJ.f0QWnP#aM,iU>-SbPg+f0-r$<.hG;eV4]JYo5:^I$_?_HBs=*5WYKkm+8mb:onGXS\ag7<&p/%,FYAX;rJs%4E=H@iU5nLTG#lqX9jp&2T1$<cDXbRGq-0Cq.!<ub<[H]qiQ;@,@Y'._T;N5W]$OSdtESFXGKZ`2L0]IcG>Nmkj]7hP&M>E'f,J]%p*"b74op$A$DW]@4>h+(5XWOBjJ+FR$<N(K4kM[Fbs3^OL41O4:ecJ!QEu-R'=fF4`qpl/"4+T1iY3*$P$Q4pCgoiSJC$Ko*hOZY%W6ii;:gq:n%k@T2Fl<UKhQ)qbS#t8(pJ'4k?S%9&&5J[HTQ#dMH'l%uZ'7Pm5G68QUC,o1qlh:V=ZFn@99=,LXc?r=J#(>I=ULph%LT'_JX#I'd,,2nn#n2n&Hu=W)-LA02dmVbT<.7L6,.[e+#s^F5d]*q3K;8S0;akee!tl;FWAp$1QeWj%oMOQm#>bX$BumMq0k)OT%AJ9&!GooudAL,b<KFJ4?Vuc6nQ!o<IMJ*k.EInHa`;<:9X2'b2fgWc/GDd:h8f*N3Pf>f3Xe7_e/=0I:PogVg'H&'@';=aucOlF>%rY/Wg2?GGS36gj,:pOJdioH$]WoT7%1q^h?Hj)'/Tg0O667#Tk(%gk>/YK-]Z-E.8i$!DRbY<#>'--e]i"XK.!?e0,6fX^ZhgTai%+edXi."!d7@Gl\V;G<bceh&^/*ta`)Ae87"Z/4DDZ,H_>_MeoZ,SG'C4A/W\]daeLbZpU0,6k'$9UFb2/26T-7F.Z"$S*NBq*;YV%A+JVO_-s)oaU2qdBhepi5RR^^*haq&2cn^$[Bud;SMDdU54UF.Zsh*Zg&%Qn%kS=f6Y(<#A4.T9!XQT,W$'`::*<JDF9I&',cW_n%To%tje?>-2@j]VS?X9]FZhu1j+]ITt)k]$,6%l%E>#^5cbgE*!1_W_4$=$Bm.hMWAq:_dFai^)9=&$1Q?ACE/^sO?fB%#tqm06ch%fWPFq_dYHQ#b[3VQ4MFWj9"F5UqYq]"Y5-<(.J=1:8S2s!ZHqu*X*q=!PGP7L6`7:QB?j<l@JboKir*F\hu0L>oSD"LP$s$?.B/p%mtXDlDM'!+*L!I(+Oa/'/;uYs7@+2%.;7HQM>1e=8n&"EbV@i2U*Kg"`e-A^%F2RPa0qXocr=iM\PQ[g^cV^lNPkjcA*'/8*YUM"%F9RDSfH<;InAl=-4`H;^imTjkd,Qn2@;p4"h'Q#YQSDoGD9TW3kJ0jb.[unZCXe6B=d;X=jerrg%B=$j;B3H;42qkGhn%ZND\LDq%Z`]gRDNAMS"r/a_K_4+r.S;rMq'r=F,cA&8l8ptF"Tt&FP@,U=J5Y$DB]$o\'j"d@!GcOo7m0B_Z]HnM&=ND:JS>8uO\'n\AF)9B%e/abr\df]t!=pK:iP7mFhFBp;,6X#d!l_Q%GTIJ/!#91@(V/G2&`N)L:3gd)&Yk/TL].O++!u:lqL+'p\bm0#?NMqr5a2//("s&8%K]/t0daqkP(t`O_WL\iZAt(kc&C""k`#R\N''821X?&l8M89Ne@lkGo@Gqmn<,"Ys-ZX6$2djI>YYi3,<Dpt4S8K)7!1N\_)qbSr%F5*:eL1VUa"6#)eZh@,6*-?6,h'FKY>auj!>7&PW!+CmuAR^WnpCZAXE4&]&.=A6/\VG\A3[3:@*rjOU-aGZ3Fi:Q(q1n;J;GTpN%30MX5XiK$!6'SH`gX&lm^lEA'7n?F_"U0&h!++TpWh,WW8-D0*E[\aW#](^CTQrXod4Wh^!scc?iCuS&Z]5SU[M0';4e*B(BR(RI%7k!,XH!;E2%lG$A?nu]2`MP;#%*0$2Y(_ED$$ZOm'!3TA$f%as>s_L#<F'<6W(iaNbE(dM-38N5@d';10[L8b-4pM5F?QurLaE_J%JJaD@U'sLlBOY)u";o0'I,Ukg0m4c><rbhn<P_Ja'GRM,)9eJ^jjFioU,,@*p5>?A@eDs4XqadpC.!?4"kX!>Hfh-b"H37JX^1:J%k&g8f;-c2F>Z#XTi[U=j8LMe`Vt7*BB0d;;jZNh&%fft4E<(FlfZFbP&N(brQVt!5&_p_/TVHNS<RQ6KE@@GZpWB^c!JAa;:90-'%4^af>S%i($Al2h=\/RqW1:HZ.1;*bp%CZ?"loV;O^jZ0@doR4*_SlXuG@Ys`go/.=JD"&&mQFZqb@<R9Q!/q_0,!S?7tbhK2\N_7%]heEnK0"_*"bm$cbS)GCGpXG]Fel2VRp$QY&Z)U<F]N&)35i'r:43j(Kf0#-(F'u-+Vi^kT47!s"R#hKU*pN8&eQ>`8dB2Kk^QQf%`Y/[NlI"]#`9+<?;bD3g'"'K[;B/GA[7tbeG%3hA10K$s1p>Yimm`NW!1g"lO=%nc39[52j$0'O#bX=U8Vk6[XK7="90&mTB*,\D%P-o6t#PDe5k>dQsR4Oq>V)Hhj%Kpai^mW(`Q./%'R9$73=Q*"?/7:Gp^nm3E1$<!bPD@qh#:b<5@a)V/a#?&Z+Yr$aNYdo_82Jn+%egLWUG!IZ,@jSr=,P9pqn&$\&e4kh":9D&27jo*tNC*1-%q*EbN@->i<!Ap[N66t"8ll!VEA3#FZO[_qJJOPg:`M[&[bD3Q.EhS0%\[XOELL34_-n`Srp+rPPE"kYN2A"-W1cp=B$i$d)bm#Yn>FE'R;_\?2M/%h_RU@,n(CS."[:"'PC%=+4q/E>dqDq8G"0\K+(nV$b%$EjOb"#g]$AtU[WKEYtDljP)<[VrI/'#kb;RM-UP9Br<3%/PT;UZDS.i@=sRTVE2,S-m.ilG/,1kuo'YkdF?Th6e@ViJMCG'hD&X%"Q7WWUoKlCijA8"JQI\oVi_Nf%]?Vrb'46.X;\a*ZVqE^JQZ.)33,Ib)"9HQ(c^o9Q5%]/[@olRIrA5?R971hk="BjVo,S=b0GZb%U-cnpX%J@2Ku@Q'BL7FD'TSNUD@:E#JoMiX4[uG4g)s1>TN_jRPbM=&7Wk2H:H\tQ8(G4bT^#&c%,KF,_Vc))q,<L,JI3nK"FiUk%Zbjb@Gmb]:5;<0&Mrg=RPH#us_<R0ubpDk+*L$c05_e]cqd<RfW51+5JtQUUqE(`J"B-/p:-RS`O+&#Ns3[+&"5mB7U2=TE$m:f7%q(S,SVl%M,4uq?T`/H)f#9/qo:kj6IF:MiK$6K/8r;g$4N5!HKRFsE6!>OAND35AQa:b/@NWlX=\9SEDCtZ[$;H6Os(tekI@BAVR%ksA'F`b'<@Ckfg^*Y]:n=0fsS;M_ctdf:@C+X!u(F+joP>73)jj@E=sPbFW_]"c4q&A;8M1)`[C&\!:XOY!N"_eg7l,Gb=/#dDCf%M&(uE.W>jFD[F1V(]Gf#$.buPK*X#!6".O<:VEJ\-!]P2M1io!5q0g%@MB"==9V=5!iko3Q^3<C0dU0D(KWGD;>*:>:WV-"7<-=7%7V,5iR&SpSro3o;Wdmo3&jgQk=;d'+[tK):+NK))hb"si*%hY>Ycbc\Tr8DPX"Z9\=bC9SCajO;BN\bT4(qk:4GZiT5fJVbaL4A)%R2Jj\-4^m5F"n#$Qi7&c->d1L[`,15r[OX+2_@iF)dXXVN+,`^$RFJkU$hn9FFM"sX<0JfYio?EFFZUXnAGbX+QoGq\]kAX5_[?J%#=uqN!-TGJ5ep?H*^2hSUN7J;5aAjfh0ab:k)Vk7W7$<*LCOl_\,p,l!sBtX6Al'R#d,,ffW?*@\54u0)WD"pEHsf/\IhU#kU(Cn%dm&klUDk7E$QoKXVs%h$gJVDi'YoPH0U6Hd0iZ+se">i\au-.&VNror'mW/D#RkZ_Na@iY#"f,pjr*TBP\lV4=A]p^)Irp8dOKa+%<2^?>!!0]*`_;HrndHuKB[7o*!<UF=`g/u"U_C0n%.V8R7r>`1^>%&jm:`u&[_JLf&lLVEG8o90drl.>GR%90+JLAR3sgRtj]egD%*s@K,J/pVT2$JGBZLkCgMr2J"g=]`^;eP@#5YPsW>(Zk/<]SZ['roZdQpgVkC<U8cFK:V)B5#ri@_ngtWQW0[aWeA*pLQ%Olknr[%F7ShlD#Y9LQ\FRGdBKoU)'i?mgG(km@q%*M@mjp2FTdi1(s0K(8Z!#n(^+JAg5iY!p/CGcJPlUK%s0?%>I)9:(U)i=d'93Ci$,rQ%;t>cBCl"L[aIX*[6-\&t3[.>(H-@-5Lh^.e1<,!u`\TjkkbiZ8KmtusUZa@@Mh,2e^+tYMb,IbM!`_;FIGdm]bGiWd7bdQ7`h^]j%,(,ZuAfRI@:h@m@7gOP$6)A[3S-Y+sJ1D0W_alg.SA[tJb[ZeI&!mm"M*)&@Iq]//$o9<@"nHq(R(4>]/?665m(n^#hb"jhSBF68%:/#U7G6peWn9e79&&V's66Vf<cN>Q9LkYT-KEJLkLrFG'oMIA0"MSF!+"esXRX$S!<Z'fO&]Om3*K!0[2("F:aD]&7a<7eO0P0an%"E`=<KHOGqqmZ,Kq*q%c$cF"C2P+@NKd4T``LeA_$/B1DO3TI89?%8QKtnj]6&+ZUOqH*RYu#ISKTUK_HRfM:1!k8DjCm8!HQl4[%G01&b,d7M"-&pJ/!-(8T0$q:h5\"b!/-o/b,$al$0?a_#jSC*5X@B&Ub'6_%kkh#0O,-=!81D@ueBUR,_@"n[D3HbCUak;Zi75,^%_?^brD5aCa'aOo_l;5IY"Y9*-PdB$983Od'Y9(H;:pjk4NY%Lk',C)",M)1:fTaPO2cCN[$<G!/W4GQO&LfOALf1p(L_n"j$QUug%*GSE4!$NO#'/8=j-d/M+q>og`cD'/"HEb6+@/3)t7!dlJ!q^'7.9;s*;8>u[6R3lBg'aU',;(`[60Uo4@)7C(bK>a%"#Ia5;X]J7%r`UA'J<1E?=;?n8iG]k'DkmCb=!=ijE2"IRVLWSj(TnN@XsqT!Rt4`jj;R65(4HR7)F?#`d)0r84F@HRF>WB$@nDAn];e5-2<15=%+>DXa%[nT%-u==0Au!]TDhA.q.a,(V27]?N7>c8g9iT-m@*@dXaTt2T%&O1qJ]^j?'2&GJO\J-D#d0RXUau58L#$M1$N_>(Zb/U4%L;BS:[Nq);QMP;mPg'kA016M+Aud2%A`Z$5klnR!:W&!_lAfRDWb,\WS&<P1EZA&>jeUM:;L!:,/;P+%\[/Rs+]610E:Uh[%L9M#%7qbtY)`9I4dp-],/iMc"d,e9#Sln&&9QRc[lG2o#UukG47rp*-97lf&Wlg(T)2-3=KAoG_K+Pku)i?HUqMdW1/,:#X8^p6!+<Z%W%FPd>`60\lG5_PV?a(./#'V]GHe7&I.aWOd4#bn&O&<c,actGi-Q\SY3R\'^,g_62ZN#)'IW4]&a**$@hNm96t1JjLM7_-@k=]`j)%4;/j=B1NEN<.#o]-1W6I=->,,=KB#&qDtRSSnMTa@%9+ZPoq=2-NaE\paB5P4FN/3L<,5\G0C4"TdS>6pa[):E!oC%7#9>?E.c:u%<-WmC%1EN,bVU\lOt0<^.&L`]!+PLSK$J'+iB`cC(^*-H<fuGGID3LUEh!+VhFrjP-\I?]T7a'CS71,Nhe:Xs>8'@0J:R_t*Ou2'%!giY#`/rGMpdE5*6n1O0`DC`j%=p-<D_%,8N$ri'7N<!i80aU%2eE06cl&ShcNnI.N,5K\fg3jcS00gE*(pQGPE/Wi(.ZG>[s]:3%=`lL-EB6aOi'V;fV%`e@Eml`S%E]?/OcV-aA$<%p"EOb8oT;1A"oJYCJk<n&*X9hcF0Gp?+USJC0NQ%5#/+[g6i\IQe6?G#o1ZRZ%BR>KT'%?K!r]R!f0`h_6PC*\nJQ#(8>,I5^"Tj82iiJ!QUcB45iIS[H`Af;fQ"UP2TJ5#kp246:B2f\0+Bk4p!c+W_>KJJr*B5`;%OE+#/Y_8NRS2beI)apXb=@+GD)RWo0NQ0b1%BIB8"?"h@.Y*sq*.*G;JKRk=LlYf_\en(:aG#fB4[^U[R$DsD*^Hr7N&nsd08t.i%+!XbDO<"XBiX#*Ye,]3Xd-9Vn70tIigEKW/ed\t0AZqE,odU5T:*Js6dnBa$@G=]R@RMQ>-Jmn(U_qiuomc"hcOBb<=M9)k@AFHV%1k(M5OeC;Kl6+c7(0G=)%Z?SY(<#o(%Nu0UFpi.2Ge7db21^E$HHd%<%eqJcR6*cE4B%I:Lkmc`LbUm4CclNeZV_/33O1W1n;J%j%qa3b)2Oul>$jspf[KAkEUQNsj@hf3(<(%WXp!:Rl5b(jN3`RQ0HBn"@RUqog;J:%^hl=-&\%"4R7[eYh1qSM*LnU5UH"DCE_[%`:%(Wcod$fcpPBbQYEdb/m<icl(V!p1B6MWlom$`kXfCb"4mKc6%,PbM$QNX?WOKK0*<PfOW!?@&Ik7%Ho,eM9]%,8$&_f^;X!5mp\/%R:IKuVhp6BRG^JF1S8Mm.ddEgaf.bXKr^XW)?F#i,H/I]+%Tq/Llt("9BnLFaBB9t:L@/oU^BV8[&47PH6K,9;*:^6-0@Ja\&,^.%6qN9ujUmFTAS-Y2E)I?ds.]Lt5VIgbJS7<lh.(U?UgF,o_\#TmJR0+/95LjJH@i)[hW3*J84L%9n]IPQpbW&>8I(4Z6!o^(^i:7.%##,c"?USiapW'45"%XO`EfTDcHMj-EWf_c:Z@PVJi?%#M--ch='2+5dA/#\*bLVF(_a#c7ImMt';"Fr;((_P;$"S*eXcQ:UoVrm2%7JBJSEl<oAH^Rt/b!^grC3bNt\eq2?$S].1<JE;]3:LW*;AEdM#egcd*?j]J(?d-)/gd#a4!Z-nO:0p2`+K9PAqWN,\.V)$2QL#`%Y%>cj%SL;kU$9YiUDk(S#sB:S"B]j*:sA04I08OU&hXPl$.3IW*6*Y'l;\%.dEm/tMR[j-n@%D05!(&OEA8h<`E\l6<[Ak%Xb@Y8%M%/M"$&'c9C,3#(">Yt0@Xm,j7Qc*P1!A!IZBl,Db-<1uKl9"A!l,YknP'q=L<pDe2Wn(!eZStYigNG5e.L&I<3_ffRQt_I">'Y_%?=>t%B:T>LWOCIsKS*<=&QXmdZPl>h#A)5s.WAm*#*:_'cglNZ9?S5teq+:/?OF=]+=d"]!<*!#(Pk^Ohsm";S(V(!_Oem(C?6g4%ep+E.g^04`\X&,'kQ^5]-7+X=B@&Ur(I%5f*dS?O^kF-W&J2eZ]6)g$XQ]@ck:&D2GRpEGoVt_Znjn)9)UMW^lF;DrYKkTal,V"B%@[L?H\<?6K]KDq_[f/41D_"pj,_h'G*[X-P!Xl=)R5#F!k).78JmCbe3,I'4U$i%CAd/@<&QF9B1nTjdJ8jNMbTFV4UXtUr<"R4b%k_"QVBa>sgpu!)_(<2;tJ>gek2)1%c`aIH>U7A8RJDSN3$7`PgPX>Qo6JsmPEeKKQA.s"JQ+nM^jk1J`5p&=s@M$J\Y=tCT$u@Hb%Q%d(1C\g0EU-^N;<>4X*r2&u?Nb)V*dYds%!W0g6ksTdUZa#B)%u&jXPQ7qg,$'>n4-]C\5O+UpjKaFuoK%6(9FK0tH?,3rPY5&I%&a=8e+Trf!GD);OVM.uBe)_'*dA_['Bpr4'!L6\2PS%@i5+\Nm?NJ"ilB"S+jE<"uFuUjebm\3+RO_GZW@g*I4#cmPG!*QZPKP^)%#U--3_FHR2'Z1>DCZ2Q5NB&:H_4?*`2;FJPY+X>V,PMf-MMOQ[MX-FikoqRPcAH!>C4[jUnr/V_Yh>DU#S9<DO4"l5!*Re0WaW<-%UkKiulOm4\]$rN\L(YoP,=PV;2NNrsBA@NkC'tl;U]N*RUOgr;,&V&C_S\sr6Wpo7fN%u9\.a.8XoZC+>;\+&=7^B5"\.X.:%+68%,,/5KmDlP#3Ene?beo(;5Yf(10B0Q:o>oBNT>cbF=qXF1>3=OSW&dK,X7<!$+55G\rmJ8:7g[k6D<\Ztmk;>7h84C%hCX'o/:6a7%3;;#fk"T>fGgDI:/pqQ7Dq"I:49A;j6$WHbpkNH&MpY\6H=(p@JbiD8-rL,_aWZt.N2.ea!`k&u)TIYMfg3JOjda2[;X(3#a?[Y,%>n*7=l83[r+HDjm)Ap@X_OSR*\!lK;<,dduA1;Rfj'(MG!SoBn)?K$>nIp)tS0^-b"\GU+n2RoBF[DP++]i+/-r+t+i`L^t$S8k%%oQ,_Fks#MKH.#@oTp*olG@nG$Y8Tr<&7A@m$N3Ab(;oWo.N)AD!_A6ld/:]U6Lr5%V4sn,+Rh[1DYqF=?NaYZNA5u%*]&(DKs%0H%G"%Q=BEd*I$mru.aF_rqf[?(c.'s:,*JPd)dATKV.]7#\-)7*/1?+B,1?-<n.kitM+RnANRdh*u"!(8V"/K06#N@g6'#[uTn5t"a%:m/c_^;H'J[H\J%'Fn9C+Urc'Y[WHJS5U(h'EHk.LfT>YpDotC&M=*Y9VGTaJ1[u[f!adh3p#Ed@8_2t3Q?bW?Be)^A"1$B(u`<O%Wps@c\8d2+!Gb_aQ\M-\ZApEu6Z20SXNV^']+jC-CHF?o+3P-Vrd]ACr/T+aBNdD4)"F7*QMq2DqI"VM"<K#g#a@b),-sdUK`[04%,=0,:kY-[P3l&t<*ibZgc$(BgOY_NPXd6E^)-'iH[VH(,o=YNNgsi@>!.GMI')$1mJ\]tG"f5.VJu5oj$Ia-%f!;8#$:)R:U#K+O%JZ$_hg>HK:-6.GlKN*3/$J\f%+f^P5Z)IPNq_H$,Fe&kk;K+NWU7YO`#6q1V4=qc]+@KcrC8iKBTL&*%Z7CQ$FY,,,m4(g%j>@L5%$$$at2cMHMJQc_V6CguI=6.un!1$[@-S'DB8>k"$B@%E5Q4eQH"/QM)Lb]3,CKWLh&o(N"i0XeL9%9DqB'M,9&"=$1O**_'b6'oZ%(h6j*5R=59!AMQX(2Msa<gm8^lSR/A"?t;i)*QA(3cNJOZsF#:jXRnHa_@:aO5OM%PbJ^Ol=gA9,9@b!dHgoODqG(4ZeF#+2):tY%-Db:SolQ'<T)(qJ4Q-Fg6`ZM@c<fGpf8'nQBOhlNYc:\e%$3-$,hKai_TRduXHck718WeQgnQ%IeHS3!],%-%HkS[jGno=!1?#qi%\^e*X8ES0^%#i?0:FsA8#K\;T41(eW(9K#6;SYnRc=n7="@O2cRbq+:YstGTj;:6hq3nB'W.h,XS)A'4M3HnZOX#h3QNhq@65)5M%H<F5N0d;cQ'mm,eW"_DLKb:C_W;DlM!MCJMW.k>'K!OVX4:]M(p2!ddbM&K9+dj#Tkhi[N:dt"gCsduX']gg*G[*E]^f.D;-dgH,%Ljh2=s4k@]o^>CimFtWla4%L;Ggpb4B1TEe]bO$0^p,ELd^j-:-);_G5ILFEOsu]jpNV[UV8inD%P"#h/^>2Q;3db?4K'a_JI,/g%gSi43Hk'o-1%,ffRIIZOEm%1:KX!%Kn;M\h$;Lc$16DdNq`o^t+IUc5^#hMXbiA6-Kk*[,A_u&D;^1FFgX]6`#d%VIl\C5'T`uu:%C.Pn:63VJn>)!>m]>3b74f]E-Ho\Zi(jK`P-U_)pbeU<[2h>9Sdc$'`,!\&pm1_5#la@\IE$u-YiocscL*`dkOM=75HFR92o]_I&%HTIs[<^[^kUa>./%E^b8ii+4D=U#a\HTL!i$!Or;%XK_gSLi6O>5]1>Bh27%K$X9?2637DK,58*$<,2"Jk*'@/CNO&.P'h1iWk>X%Qq7E]=Z=<uI.5MC4DcJoXAnY`c30%D3b?:k:h,KMA<?+%?^QB67?+G3q:TMB_=,FLPVh..L8J,u&rBICph&jt6<qUqOl-]tAc'';%nqrkl\rdDDOMsP7(Iht%(IGV8,Y;D6>oFe]6;`-O0Z%RD#_:T-VTmKBRs>8hMhlAklA/;5(%_qZ_`7>''eKGO/<UoHAkQrl;&:>m%_t!s^XK!`tF#(B@2bP/@44[dp-7=[Z$I=pUEQ%3DbqI>ZK@4O7JZs-q+bFA_9C3=3.(6A:&Co81ZtVAW(#EhA/rl3AOG&L9$]5PM%/4d_285`"#b`!nYg^o=\OIW'>#tn9816n0eSL]bG79WD[C8"&*]dcqjgT"5j[4FjSdMa<qW`,a6VJ/nd3iFS1*AoU5H0hb;UMoD1%2A=pmcDRYhW7h<UK+XhM(kE/dS11j\D^=sdhC#3cBjNl+>)Ga&J!95NkTJnd+H6e9^P1N8KIGP@2@-K%Eaj\/&QSmAM;U/E9a+Zt%2RZd'8JR$%@%'V;;@u=DQ-k1(*YoRn6uE#J8-$NRqpdim&RW[G39^;t;\K_P;MZu+*])_I.;]0W8i&^Q*>YaO8OrhWML$%HYpPVI%bO$EW&$a$+%MYL_n?#5%"R3`N!R#F<n6mH"*k!LbdOKAGL(i2TEQn'&g@n,Biu0%JYVIL^BJKZil=ueE#1\O!JI#.0V3V'Oe8nKM%`FoI[YuG.o'CRg?f`a5U:g,3Tls?$gU%%Zo<jMmS(`8KI*&!lt=KDp@QG+/S@bY]@!5PaK-3N4[3^^&B3e5blNA-T%N/@r$*(cP6%`b5p&%%J1[[4'D;dc&^(eOs-^Q<bZ[2$cPPT]le,:1iK8drG`=!(e^(":U_:A@!"k6V\L8N)f<8/7@8fBDNHC&S4R:ZNisOWC4^9%JIIEW"]hO?JI;Ts('bh7"qdIdGI[D0TmW[?_>Q2'&6j^iEF;LkI8aVo8_)OXa[I=9U%:"l/iBMoaBG;&dYW^bSI>f?;4g]k2j'O3%TY@(eWjT.2;Is!4qII7m&![K"el#$CYlL%D=1O#7<-jA"@3O<Zp_WK0.hNl$JI)V`Y0]dUX:"5P:U_,G>u%!r(h@1S_Octg24hT.%3f,)7+i&P:]+9\"W5-N20Z'"\NM=4GV3up5,mWVtM;TKX_<Ed.6FALe8&mWo/[%^(@<l=2$#a;&2kqaV[KJ'OR>EqTofM4mPWNF0%!,Bos?bA_e.^N50r#1YU1dHkd_4?8[BILDOUumI`b^UkM(L!2K`Pb%FUA.pJF5-sq50Nr",&0rWKaMWRfnM!H.e#@V)a0VC7Zrdf%nP6?f@pq'7P@Ka.gRbjNMG![!!t4?!#Mi.VA-_$tjCOFX5#HWVMrn&M/5^l9Wj-K,?W\M4A><&K]<&"OEo1_8>/I=D80!;s<%MQ+%En][;2-j;^.AhZ1W;d<Lh_6C52-q<J,[Z2`Ft'<8m"WTPa803si9,q4UhBT[#I<H4N(1Z7e'G+m"B#;*_1QbY^QAnh".2ugN(2@G%+.Q5H/I"mdk(Z`4&3:)o]koL7`,L'<pa)jfPN/s!Iakm?">(-[Ms)t43X&I_;45^tY(!;7Q:f=Z)5Qm,"^rC5)?`nhb1`j8,.H.(%n]OpJLl\=E$Hoqmg!KeF>T&>hHj,($Tf0iIq@gl1U-KuVm%)3pn-$O"LO]N0f%jH$iZp-7o(Rej%GXlW7pPToo[.b=N%m'n[h7Ug%I8r>kJJjob<KS#6=Q`gi-fQAMUDW.Eli'mn_9DT3aOWMic4oCqf7)3rF+T3H`h>rKRfpc@E!jTRW,KOZ1p)ub*XI[qJCr#1qi7WX%?"Pl(J/2*bCUC(kHOfn+L<8LV4"K59W1S1)<[c=[nfjlq9[706]W=g^>,+1cB`P:7H@V]G8LFWV!$-.c>$6\c]8==9A[tMUZi)V)%!=GAjO^kJC=u,_"*D"8tKPFg<CKpDs\V>3`>+N#a1.kBYeSO/"-9u;/ai6lpJh*Bl_$!Z<[%*LIKdVRT>WQ7>I%MbA3Ak@;5%Fu.%'EH)Kd=L:u/(olGWU1Wu5R7'3.e`t-A_Bp\+\;87GQg3&mh?pQ-EDb,@O-&ppsF3;IrGgR/IJN;8Kg&fHr&,(n@n<'fAnSAj[a%q%n^F_reV0`=6I&A<l'S-s$TY5sLDF-!=t%9=E;UB2-r:<%.uY0PQ%#fIUQ@BG#@m&ZXGO)\LqUftK3$W@j\IT9ej3]T7*mreVi(cJ%U3HZ7?W[@UCH*teb3^]Q7Yob?[%:+bZnTU`A'D!i=ClXp_0>#I+^"sg$lX=uJc_$h!n[ilL_e)g=p&Dk%bV+@5/o&i848OQUjQqQ%7iYs1IA2Os%<>iN9^:_IDj>Q]e'p1X`V)LIWZ,!HfqEe-gDfGagiXp&17WuS^?K`3@[[BuPKMn-*2Cc6=Dcg@Hsip=`<\"##4hmA%"ft2\18GTfMD8cTM.P(bp`ja?@2t6$Usjrk37mM7=>Sg7f"o5e>$R2e0V:`r"ENBg`J/3@/*Wp`[F4N),]C1bJE0j$O'k]m`od!^%*AN;hqu;BfT#enTU2.7Q[=4k$+/u2bl2WZGL_=QeN4t3=Ml35lUHt^VLR$EL.>d^[OAnX""Nns8<s3Eb"'`,^?j6&b6%4jT_.#ul%Ie%_E4pA?==n'RD;[Z7(&gNXiL@gF6[?N)\'P48;?6f=oL>;(\UJMt!-`Up=mN]@H@IT;_#5*ieChQlf/>0D+&QS-P6c.%Ap166p%"!eYJ6%#e%M;R)h3Q#._OOOY,-Sb3\33>Q&-s.h]%Mm+iL\_TSbFfuh)g1p=;^##0Lj?6rUrNK?N/L[_</;9KL'](Q:0U$I,,S3T%\o<oDb"$ctZChg[9N5\E*WQ6eO03MVT'?F6+0fsH6;@j:q@^/eC1bS!6rUN?%WH?rb#kah2&8PbesIc$;2fbCOrUnN%$o&DQ/Vii%L":fcT`)\!.Jpup-P&EEJ;^3@Qa.s0<F/q2on\c`U>Cg!_:%J%dY#VK;LC"1Bi(GI0s+EU&/lrg64sdrDm1=J>0D0*A(r^L@qtk(%KAg:I4tV(/M.Vg,*./`gU!7Vc#Z%tDCq!5I(TLKlha0K"URp2<Vmu9!96(^qo;n2b7cKPfA6BHYS"5[ULbZ=O6Rb_&UX66ub!nBB%#iHRYbDL=D2aNb[0pm]f8R7jA(QK'.BgS>A#:aQELO6F64UWDm/S5loN+0ikQq5;=@.'"aZOAEh`_^GG^gTj6/K%Y3*k!mD,G5Sh%BU5";en>Q'4HcN`e_$K(;.WR9D%"?X1e_3P=JW/.%:O``E6eVVK.3a#6!JjqOHi=u*<pfJEA4`JL)^1%/Eb9J+d<kh!+WQ1V.dmO%K,>GaAB\CbO:]CHI0"^6V:Hi`?`XP:(Wph'I"8*sd<6O$(tF/5"GVJB9h\1LbaJiAj#Y'(_+7DL*X2HSI*s"XlqNVm:t?4Z9S3V%%.)8@t5XBRGSkKuBW)8GHkRde?G+=hc(at>b;MQ9g$QS9E.nYhI(H(@Y-+k7S#j7SSHBGcI/.0uUTEV)8Oq]Y5OnMRR!:Q%J>ZU+)%P2j8dN`rJdof=AZBGGnCA<9sdfkI(>c%gfQUE_$mCs2(2Kn0<NPssdH*f[RbXB(3SoKd8V7Ke175-IIuHZE;,*8;KV/0iUWeZUBZ%]h`B:-JFm7YYf!hF,^ik1JebcgdH:%Z5SNeR.>3]UV(*V@H*)$@`06AU6RkdVLu/tQDri,OP#TAdg8<jSo-otXbEWY[:>lVRF.bM%_URXp+`$WJJ<"jk$!m4I\I'&k4G0j?es,QlZEAe9g1k$eH>5YQ>(c\%8BL\IEh(35i<UD+TOV![JI2Cd8p%&L\:aP'[f.<SnYh"W%ABZOGe6;R`kpR6teBg1jM$X&8[1Q!*ShLVcg@/#k%p(K1+'M/W"j/oA_lOgc_$:)N=0Y0ug0[<_V*$'?C&:Q`G`j8o'55X++^\K=%[>Zd(0D`nR!Vn%D[[:`RG_Yb[o+2b`<h:95%mha%C(=^+5"X<GL;(Qf@'onhUXOjU!O%9gZd;%K^trg)V+mG`dTT6s&(?.O_5R1L%L/fcEi;rR1[S11N!Z>C5\#!c:XM>OEp9@b4U"YH94cDhFaD<&fSW74r6?h@V5mLQu5=c?oj2,YL]S-%k-;Ph:$rDa\ab,JgWdhIX%=3/ljcPh:!lUa"'Fb&BiCL2?q0V5>De^#+I=)+LZ:gTlK[HQ:9;6*O6gm3iCW7H0lnFL%\Z):nP(l-jJMh*J)i;WDN?c^q;fK\10%)R`Do/5)pNGo7'HAasS>(g8LG*)c3OcnTo'PRb,O`JF9TagcKbQ<X%IRK<2V-G<@D!'M0ML1#t_,/fO4<$/Mj"D+kgHf`#KkCHE^%o.bG#05=Ch_DPOlU$F'-ISe7O'ob=+)$R.tN]N@hJ^=K4<]61o6=,`H(@8/#U\9J"Xml$>C]6b%Z,W/@;\EJ40W)NQ4]QZ\68jd8%?$gGCJ];B=-SS,fUnY#%!!C'%ChP^$1)_B_TG"ARR5_6n+6oM2eiNQ--Y-a*QnlC(.CG5f2Q]sg/'B*=%n7Q0,99/@Rdh,sXr(U!%*b?!9^>fL!5te'39Va\m*$8=jgac:(,HYoHX$j=qJFfG8D?ME8["J%lVL:pN4[K@QmKP'V*.r:V,u8C;/uDCj:ut4+f@GBY#!A,Z%<4,PW^`]+3AX`<deFLEqLp!bWa8SPS;)CSN7X+o%(h(+-ar-GIEqD`'#QWW'+T2>EF3P,%Qp3d$H;IS&`,_0g9+<3ogWgt.5Dh#'%B*q.B9>DZ]BWa^(8<%qSClp&/_?Pg8,,'ck7;E3r=`IIMqANP'k[C!h?og)OF0gk!l\O,M.O['&i]<@,(e&MN*+0jJX[HJ`OOBT=%JP618MQrZbiOk^T!75iLGu8pConoI+!=a\G*hhnM`No[qMie0[0dV2_k#>sC@($F#^EUknq\EIg8!&G08-IpMc(Gh!&8C'N83oZK%"rM2G`"9$'OHM4-'3]),C@O3$#-`?5(^K9rXB?He&]/>!koo!t]ET&!3Rs&@+qj`/HFCYhJC>IjiWpcnq']Ri=p,gRc54Zn'6*"L%HbCPL=5Sc'WN=gE3Gf;AY]%d<=<sKEeAAT,VcEet*a/G#)i.[uF[)+&+N9^h%g[g7W7+aVe\UYM[F/4qZ3Qc\.0r]pB270b!!]Vc%;4E)9Y\;(o0<"&mVii1u"`!*8ZJ2%5@P_MYZR#[kOCHdp7nkBR3)Wp],r!]epG#+edc>P-BFFH(Y6UsLYJAV0Te(^Og"R)7c`eo2%$c!XKUY=6I&TlrJQ1dRS%fh#;E-X>O@\6(V8>()mAOnVJbrf6EW*EIff9jPZ'"ge^S(/"i!//E0j[`Ae^VQ9KB&X%sI5hYDicJ&)%`]j"HYQot;o<i;@!JiSP!lBLC!K3n%N2Y9h2+doP\X9PqE.P:?onD6C);1,DFWTX>a?-MAJO-6(lL!-3p*c@r?kAI19*Lf9:/h7,%@`2uI.3S3(?kFS`[3g5c.<.+AoJqXX>8k8!KoSp813/6?6I4npD&EY*OD`G7**L5$$0(9O*^\M$[7u0OZmap3UIsZI6egRfa6So9%ZJWG`ODBeX,+=eqnIg+-&d+?+Q/-Nd-rQ0Za7dgbnO'RaDsT8ekZU9;If.8fnCSG6."6ctI^m]`ij<8)[Z8M"D0<so0deC3Yj<U[%.EWcc.QiWf(@i"*,(p///Al7b1]Xq`TkTs,NVG==Pc?P?l@V0WA"dX!D)KjGq&@`hL)Ror@#K>R[\BU0@Z;1ie:;;OYS'kQHNXqd%M%8tV#7T<aWG(WS3A!W`#hhU(_2&7mc_f^k@;uHCCHdlC64K4qLn4[^L"6AD!!2FC]n96+fV;gCZF3M[g?_rn`G7!!9N-H^2-W_)%6>[,#I+a1mS62X$*ul<%@ADgd:n39JD>MLT]F"\iCTrO&P12BJctj"X>H1enL6R(oUGu_j-gbR]:dbZ^XHe2OTgo-;l2p/!P)Cds%Tj]O:l7;pn`jS$)^rZ.DbLVJlHokml2fUAqPc,AammklXrLRR]e.FB5XHeFi?]H'h6@2_ZZG?fV:DHM*pVUhcJJ@%V(-*^<8<T!`%g]:]t/h+@h>2W6F"!JDDQ,iU9^ZiPJ?"mm3;&mTl^rSMm@1FOl6`cm`I_`BIG`_Si=4e_@%O2I&RC7fkLq:N,7;s!%)-]B/ng$!:%^7L/LL#1mu$7>X&i='-G+Zi-I%e+n^9Yj9XB7Q`kMb/DL2De#aqR41B[>0:/`ohpQCtjT[<Khsm>ENh-(otH2r2*3!:]T%PVjpU3%7mW*$B/qTOi]qTG6=PHV(j'1`qD[p8@P"6G%CD<!L.E9bohIE):d7etVN'O_;ho?5Clcs#&=[9?FMsT1)bQHBRe\LV[:KUQi<Grd%!7KN%;o+HlPl^)/5T7(D><TCGEFt<_J:=Mk=05n,9NL$ST"q(E8EQqJC0$$gc5E:[@O/af_[$@\'G?AS#>t"#m:mm5DQYt))Oq_Q%"jrHWG1%dS&jMKtX\2XCXb;F5";cJB=uPj*8jf.)MXuA]0P',]].+@I6iGi0Zn#lZgo"eqEMH7X3c.gM%jsgt#A$QP$#%R$Peg?J%rD[ZC7YC$9%]jL,iDb7c3.fecZJAG_pIb;LaX34?ZQ-<(Z'u_kL_D//%3_7+8%U+q:l^%[a/[f(JJP8iAafG5PZXYaH&?-nWXO_(%O\,tc=Y3KH//rUlGVrM6^(5(7@gL#`WElM(g<gB=<kFPa:L07]^K0+>,(,D3!R*7b4N>s`GU&bjlo^$Y`CsS#%kG"TiN)^3H_ZX\%Seidc#d.YVD--f5RT-!gQK"G"/g`CGPWc5^8;?ka"Rom_d3P8K@"0GFD%9#'X,>ct=<3?/ASU1-789"o2TE0;[HJR9,MiH"am(tr%&d5HQ[%Oak_eo?H6W7#K%PgGO<?2b;9JBUO:kl"PqjpY.D6.njU_&L$07tuK0B;:$3X8[=co$.)6jk6J*Urm>_<DCFC8L(/%aE4`%VA#4S3NG]&fU0F4a<&8H+a5Epqb_*tA=HQ3XY$p8YtBXcoqE+d*kR$H4UAYN`!Y_Rf';FS&FN5>f$:TM`uMEX1PA#eKV<r3jiC0(%<&!;`J6U*?<\cuN-1s&<=rj"TXNW4H>SmXk",7c2"9g!,gZY_+;5Xb%$_^e9d[E_"KDL\:qFP*&)@.5[/%@^"%iV(!GrqDO"T]d&%r,>n-]ap8'\LM$m`$7`&o$40D3SkRZ>am)PY:8!qQ([jd.GkEgJs(\P3s_;W"L32@@9EZ]_+),aBHoC\63&E-K;*grZ@E3dBU:-*%Af+^i%Q@Qb%#?XTY!$i\;6Q'0:f2VdJMh!saF`K1/4,BO1(r8r>r'gZZ!\d1XEkSd7;-\<"Oj#u=pV7:/fD>`OnDWTMor:][:ePb%$5t''h[iEhg4<d[D!Mq=h0.9LaI"Q5:l*@^oYEoU9C'5e=:ULR^U;.P.9[IB?<1%=8[L/8on/SG:sZTAE>5QcS0t2a5t-TdKlBt%%-!59kZb(TOh*\6_6mS,#N/LS/<hm)'5cS\.HGmI;Idj>$!fdH3&Nn[(<N8rqo4LmuO@UIV3,f>o67C4n*<WQ^c56`OP+d4F;e%>X%%4;F"*4^Y\<!NiWZ04"oa5DAZlWe_RETW)H;.iAN-d&<k6NW8b_#Y=T`Cf*>3Nj_@>g);<Hj\Ym3%?'Q67BbQH014>$iXqK4Uqs(%?pA@u5No,t%Ul&6"T5\^/j&3m7;1sCPsOg<J38bEn4-<TM+GV(M2MeKoZZpdIBI=*.VTMX3Kk,n0?bKR3#"WK.aML7V`$\W"e)P`%4'pRL3,m_2cTj4diJq<Pg]2cI$H@p\N+iDk&m>$gST6hg>\6]XY8Kd=/Z#OQ%RMU,KF$&KCeG$dO'\#h-\)=Jgjn4m<d1Pg$Z^qn%6BP8gc""Z472DT)I4gbrdY%o2NFs"0N'MtbfE+GkTL\SH;fKh!+r!tYLr?'s=A)_&>0!#?b,WhPaM_a"aA2(;]PVTp+o9@VY3/Gh%(F$4&?mu8[2$Q1$,+um`>#@$R_6GPjdOX,3%)>,E<^n[aU4B[bJfg^d=Vk6>Rah8$`sRaIK@`J@^o^_[6u-IOMM,hET'ZeZko<P.%R&$nmEImp!21X!^^?ae2aO>.)<:\DQE#rSWln=8q<eL7ffu/`Q/iFMjTS6U;#"8_'njA!0O94u#mo24u>1l3d,IR^*U;!H3CiH4N%$h*PIZ`P_Nk'^_c3A,P-*EgonT[a#sn][i/kSW>!KZ^M-\2BDB!Q<Qq]k5e%mg(2:GF'&$jYgM![Fp_EJr/7`D`$T'Au?Bi=E]g3%6Ns.&bB[8P!C>SD!sbA)`"S,rP_7g`:rEr3M'OeW+;!fDB1)JbfssQUL1uPo&m=."^^")"fj\*0>0iWHC^kmr(!RV"MGarm6t;ZV%ecWVgl=K?1FV2*gqcR4LF:2kgM8;_o;[Iuro]pg&(l,b:c]k*:?[saWEl[k^SuJ!W?6ed5Op\m'M,&r&F6>Zt32('n/1[qSf1L#F%c=Mso@:1?3$ci-@q$Z:-fpCO[I9'9u1*^SMDE[j"huL*g;^kGr-`th?b'uN*RY6PQcdG_Xjk&&R9h?.k`O!%9*!oKQC$E.,p-q>H%9la?\&W1<ROeH-@ROtPeAE">ClP>p,)2Y:#]KtO.!*`K62Un_i48(3]cM1h?Lnh7D/DT9-)D`rV=riMA@'L?L#WKJGSh$p$G#f@j%@&p%@T43f6&g4JR,*OPHeR[mtiD`g^A-ep&#(Jrj$J`-4ct6m$Pb=%BLO:au5%&.EUgQ]pV_)O),t^1N56gLS;@@&><[UY+E_XVh%,925\%#MmR6,,fL'7*H9LWBW(9'p_N@;sDkre`@eX9ftOJ<9gFf+s)*:]cm,"j`-'b5G"H&[)N[MM!C5/>^Jm5`-(E2&Ek#!OUBX%l(6IA;0e#E759,K)(WNC*#5Hsg^$p=9,4Geq]%uGZO1$B="u_8M;lm=inEg!RV'-1dQ5To9mCO:THaTO)69Io*$NPm9c07m>'X@.%1KAC%,Kj'tdg.a></IZH&sq9'8)B/]0THJ26/+1a*$Br%Mq6*H.'VeE%V<!LJSDB'(^jLr(r:VtDhCBW%1&I.^r"L%r$g'hJMJ8(%kA7b_`)^3/h>$\8C'E%]iM0/C:0f@ST08h(`jg;-aq"'1Ys%G!^i(Z*XAGAoeC=!9#XB]Bgb%Q]O`Z8Nj=FkH)]!5=U.%Y;65Z-@%AYXDLTSGQueL."^4,!2<C3FErSlpXUb'`?6XK8at&Y=TPB9EIh@1XSYS?:Al!M*/AUqOq!Vl8(b=9dp+i(5K?kil2^\VCpb7bKW-%H,MX,[nN(W%I!c-C8atT)0,a80p<6ZN6qnuB`MQ0*(),33s1![3'sr-0mc-m&\:6Lo5TSbos=WI9Bl%>=9LI"@'(!cghYIMM:tAr%)YQS=#Xc-WifF=p&I#s)&l\0-6f9H0nNjUC>`#7L8!F^r&_g=5;im6%\YOh9Z,rRU\(?+6XX2*KW5uO-8;UWge52'@JcgO\._<T!%*=9NN0bRn<i5niKWA9BR!G\8@R5T3=C2*kIh+$K/B2KKfl4KIc+g:5O%E(q@K!9'.&HPT4g'G&0KEaa:0p]Ot7*EWRUHrLj'XD0[%A],5>:b'h7$+L@GZ9!enp.s'/67g^SfrZ^eYtZXdK*O-WX0=!9UI^@KGd"@0G@j7SFW.goZcZF)LFXi[e'`:hi7NB7Q,/hRThiuM%X@Oo7$pn!#'!CJ2l?.W^B$1cGJ]9roKaKcOqTs/SZN881Lk`Z3cd9sE%PTSISn!dDB$"Wr)Q+"5WA"H2lD&bXhi&fj@Q>3b!^FbJ%=BK]*,4rWG#l%`g:2(SXV[F4s(m:a;(PMuofk,hm%]YY+eRs%60/Rr@ND5osrWF]0^'QV=\m0<f=uG`1jI(Ql_)'gH%^EIXoE(:,%eWuZKmu:i_633NZkHu"c-Z\12EY?h][ZVrK"+[7CgMma(p06:sk$uXI`Iu6EAH4F"q4o0E'g53pG%MOh!'FLLcj_ES5^fGS#L:Qo%VSU$T\iRCRi0qfkdZGaT/lOS^14#9?c(JK@bK;Pt'+a3]1%.t$]IPDiM)I*8_M$4/,gHqN!2(FZ<GFf6*bZ&/7:]:!'*[Xg..d`^%NB_Cg>DJ2N'Glqa.7O@+L9m@G4_^<W>9"/cC`-Lq@Ec*X=tj@]nn[D3\,fMq?<M:_7S*"_ArRlJQLMh_(eg%ffM-&39ib@!3u8U1%aTue#bafq?=F&]b>;?>c.@(WL-@f6]DMbVdXN2,.f?^L*TZ]8Cd_M"!E8=P#J3e+FNK0aa]hk>TBf[IO"+f@!Wa3LTe9'mY^e#-r%MAkmK25*;i;>]IZ6O*^)XGV\U6e_&FIW_Ps5`SdYEeAXGqj=MkIdDo7f;(82'uY0I;hnako-:$pL)_r/g/.BXC*VG7Kk2\@=!=4I%*XimN;t.P(8jOfLk(`jIggIH3#VD]aXCmD&`j&pT@VPD_q5CTf,q,*o%VLIEj1^tfQ7=OZ[u(.glpFFl1f0LhdB=;I-\b+o!1pYr%oPL;M5)*`J73o:Xr8<ub-85ohnc/n0V-n?u8D(8+3_tc>PT@_&Ms=(E?33g)OpHV;ZPsU#j_>Ke9^7^kA>=&D'iD;\piQiZa,#Ks%Po4`&R]77Xd#f?`:s9YM@alPpU51Wea3'W[V#_5$l<-Z/)JW.'i!G=cpI)>bY[Ha@kQ4M7"T%EQ'O&I_:]Sa_%Y!E6nF-3s&JI16%*o?!Gp3MG@XPQ*0UMD0*eGl;mO[pj)fR7M[:"Bj`-_p99iKpQ)FC]NufMV<,;<t;,^j@&ZYkt\]>E8pqTl3(1H/#lKgWi5Ji43g%%S.#5o;>9LiE[KJ&jqHf;:i;urqqYNtE25rq"&&_E'0&;\PQk(bqAnI+*b6TV:NuNS3g^hbMOq'trek.7Z=V5G5Asj"s4+\_Iqi8r%&*otgM075FKBm"F\1YdNijosKeqHWT&#\.WnPi^7%^l.s6Z)aGW3$SC>5cR2[XL?fqS.BQeR%^$Agn7h=uIj,?OJF5;u]\[e*W*<%C9O]EH]8]Y5*q2#HLcj1SZEnOlakTJV(_rgI3l.50h9O<$p3tT1]ETtq>UC_4HE$N&'R7PhWHb04[O\"X(nKZF]'4s=3n#tR<I=I%0m]S0V(NC6QNt8#a(Lg5pBME4X$_&K1:H+:13+>@:?s>iq;gbu1?@;,d.Hr`f`T>)>D+s[j-6XU[jJ+MR@n-B_gmoNY1N$]D`qD(%S3k7;5Lq4UJ%Ru8De=X&S:6+Pm2=mfG!]M!Rd6s^hSW>o');L1!VCk$Iutp5r4-mkFmaCX5'UGEA$uXUo-e74Z(jFUQ<^4QN+_5)%mu.DVe;pfko=keM<&qGc!8n1j@I)$rjGe4sGO#j@#1]72A4RLP34-Is[:6[6Uj`#Y/(sJ-*k=6CT?td/q=N&G0:\2NbbJ@'n=Sm'%s8(*<%cDg@Rk-e?-HcX1ZMfSRNh9^CqbLU`s$:>h-ckBJ'?F_a;on&!T-0?XND/aNaCP0u9_ru5.hm$5s#h':rd-'Sp^%9f5+n#1%!t+i5P5jE-+iag%'%,p$6d@V#q#Q4$5Ck!D#8jarJ0FY_@*%m>L+FESaRW-ca/#B[/XNmdTBH]Kmpj-3cc1DuoP^_hcLfNq`)OJ5%NUKLb-2c;'kR&kcAaT]e2J]M^1"S'E<?a;9%N1o.FoaOSn/?aKC3WY#dW!a&L[/TGP:;&#J*%5-<Dt7hb0MOX`ZOgj[rsrK%:a%t%T>52&,1I^,_.TCV;9ac47h@bg\VFosoJ-=7OgmR%7c`1%7__)%k">5>8m",=Eh_-Lq$Jr];Ag3`7ZVW@k?m4s2K/+!(9ocV>RZ"H%D:p@)8L^<t>_Kh;IL>a0`8'jM>>#;*C98fO%'BaBeE\+`)9#tga[c-TbfkO-'ZUU^GmH95qaf"L+VZ5mhV>W;q\nq%k>RQ05!B^R%eKY1gp-R-Un5TS;-)FbNJJ.Ee70r)giCq`=(35oTcJLd8QX*]aYH57;<K%J+H14h=&ABC%Ei#T(\Q6JG\>@56\rW7;P/@ZY$XnB=%@Hg%,naeDXCqdq4*$:3\Pount%=-"UIT%KcFSTmjAdhY4[H`jH?,[0VeBfiG>]@%%"r&@H8!@*Z<T.['43:Z%+@/J.UN03UZjXol%?Nj#mF,6]pF#tSh%LYaPs7l;3+\D#]_Y+mORf%DuTDt?M-LNsqh\DD\F;`?UH&p(Gq"MgXpU;k;"P9hCqT"VK[@4lW6`AaCW+U%W%N.C6qM>^<.L#_0aAb:hh"4<.jd0W78jb9daH(807).&lqls&EB4?%tg"5d#%\D5,]Ub#a0lfaACbWM6"!h`CXH.l(N%B>Sp&;+;)%hD"9&RQ]Q\0"XM48Xc;IooH3!Ok_pdX-&OU_l%(.e=3*&;SIj2Q^U<G[e4[P;D#4cQF-G..\T_5=g/C3\&&fa0MZe^1P(:YYjHt&%js?uA,K)_hnS`"G#%f+68:LeB0AZ^2J_S)=%?2`D(?^8C.=6Wmh7=%>8LZ7,S&pRlFI+Y)aRB08/DN$9?;7.Sj!:&V`NC)V'R]VA%@%YZ-=jA&`_c6PsW@/ET:eUd^>;LXS$+D"SV->&=Vjo-_!168`hdc9TfWQA\f7#Ju%qlY)kn5r4X#=EkMuiSpiTnDP%,(>j[guFB%!4#fV#iSqV0mV!mg?j09QU[he>':E69T*42A%R:$3QW:#a,Gt#nsE/;?$VLPGbaq"p4&"!&Uu_=QG-EkaJ)/fcFfW(Vr)"W/Qg3M%k=pb\`/t&:Z:U2iM45DCFDn>NGNN)7\;t',.MFjkU[fkZns%4MngoPAO@RINRiq49m'FL.alof<Jn8K5Fqd3J-08Cp(*I=WRsA5]%bsY.bqfe3W5.pYDpEc/RW'6Yd^V4C7`GF.=VH0t4h:!NXk/c1$Gsu2ZoHCVP"cGQmS1%-'\g:4m297CBi%KdYD^9^lhiuATn7h#n%-(KLqe4>UZ8G?iYC'm8t7I)9nom(1R<QGn;'pMrgEF0nPRYc6)6^/^)YrUJLkid?;5,OgV$eKH.?tJsJ>NHX"So//JPC!'tHZB.d%ok`6aJQ>,-D8q05k"PL!`E:[g=7W"pX%gjFS7%ijh%^.fUYl1s/Hr-seB)fI3dmN0m>`b=b)]^<h<'Lf%m(HL[."JpOURYgefs^o%b%9JYq]L8].ifE[b>%>0R:8J`Sj6"bGG'>b\%IKZ)U%Q%Poa[07W34.g3S.=2c#a^#6.[orG`&#bmk.I]Q###=Q)^EpNrb;m>1!n%m3OnLaH/+5le;KN]cm?#iqFrSaGA!gjJ*BYKTV\pLgAm:=N@@t`/_KcjfTp4X0\_agT\'A`R2.31:l"8;8dEtISY$07\6F6lBNa+%jY13AfilhR(^s1^-3Q#_HGpJe(TOjU/Veg?k)R_('LNsp0*YRA1=Jfk@46.*"g5Mq*q='qUbVFGh<k?SNU;1A^JX^jJ@cFCZ.@jL%e5l0^5$8r`F0Aj&c(lNAgg<k2.c>Ag77-&L>5!#T&a-mQdT_n3nRVS"3OF2rPLa<[[d5Io%1.ul(*tB5PGBqfk62]g79HF1J"h_H%VmD_-?tU#.79G<V,N49e1gUQO.A!k>ah3d.5Bad^&Z+A-H'9,Mm"3?!QaS+`GHh$o\ED05*[!'cWq;mt)rop]U*a$YY!hOq-/V\s%h&DT>QA*("*pjue2\fLG'U0-?n"4EIlht1a"V*2S5sWp"L77a@>VE]`/XY3Jr?Q1ui2"DG3Sk?\gUI2DC)*Dh_=Zd>rV@=)If5E&%rAVIioJ^`O/7?Q-k.m#:qU"OZJsckLcEA>)mFT*b;7gJ*3GfKrJ`(=F3nJ5!<hJZq'mYW8ehL[he*PFJg\eu<dCur0]20pVC6MQE%^$>Q2Ii:?O"g(V:I^nqErPmUhcLW`=][VFgh5m&^"pYjTb^_R;D>E]gD"aoa9:Pr3d*)V],_*\K#%W/OM*m'/%8gH]B^\;KEM^ns%4TS0BXaF&9A`Mes`3kUG;Fh^oMtj)eXJC9&0MnlgaNn]k@s'$=VP8=G+J6eCBOB*+7RnI4@XX!^S>sVuiP\"5ln\Gj,pD+Hm3<[[%4$Jk?KU^9>"?GPV\)Xq2k/%Io!$WXlESX\ASum4^GF3oAVYap_<M;KdJj&U@Kmhk#nVi,d.sfqhh<S5WnJlsUag(u:?@,b&XTs?1%esBI3.@;,k<'a]H%Ncl_GAI=<gmCmPS,.D^:E3"fc+@,3SU-[ag!TVuHf.afh"NSu>Ke'^>$f_mO7B*k('T"86pA=o?T_uT5$*/K%R@Q@(:?Eo6Pjq*oc\ch5>%m3NQZY$$m8FhW>Q,s95B///XK<qp5?#<IE2T"J6%d:0_9_UFYSU,sq<ZD%gn8GgjV"e?W(poU8u2()%0S]">T-/7$o]4t&?TJOlX]mL+",#fR,cGOd6@=.b4rFq>Eu,-%1&fW[mO6G&VWMnL#J/h4U&u<&mN/X5dW[<qI<8`q/*-]?R5%la%[72nI=?>X`WEUljG+f"[De;`^0738U7r,QYo@mFP7E9":F^h/3>45!76.)TXeY7U\"-sYWj]TO%r^;ncl+FMaTk6=7Oa08R^d7"Z%nb<[HBbS&)AXUrJM2Wc.3odKR378mjoGm+pfG03_C]Xe+8,7&'^("/hkfJr;eRo=mf"S03<&sGBHlf7G23*%8DUl>;.FFm<&^%54%CqJ4WG4p7:5>RPfI8'*E-kR3lOG?nTfD^<<^mf%DmYut9RSkk?PU3"1c!8SaTkJ#GM:2JKiKNn<VCTEhcOP5>V4)b<9&&fM_EF!i%0Ma=:\.Q?fk?MGMFlG=)>::l[VU_j0dih3^3>a$<>2(K@73EWV-n:f=h!Kh_&j?Ge?:rBf/bh<q[:<V;BmEPb0AG6->>?_ZoS'Q7%>Fftk>BRL2J;R7G',qAJYb!@>h#'kpZr]qR21nQM+K#h6c4nj%_\t3`<GcWd,<VqCR4"'nfd!^t9$6LZg"&q7M@K!5InY:9<M!d_%Fo!BZg+lDWJu"5pU/lPDa#/K\FZXoN9nrPpZ)!#U#\&o@:rTrA1U;s/#i(jOi[>Y?.6tYC!Sb>:<)p\,h-JT35Sj_0aZ(@3PQ^2?%,lhD8f_/1i:7<To#g_@_r_0RRVR=&m`_bo3+5E#5(sqIF_`Nk`*.O@TY2/(SfQTr7e7,k8Ec=]3*n<Pf%m@d]$6"CE)X2.:rs5K-%[(g"#h4q7OKMT3s#<NNrh8AU-0s:UthIMt3V=CZ,VelB2hNB*[\:!smO"mqMKu#jXRatIR*&3PSD]rX6<<=Tq?+u;Gd9s@R5^JKr%<P9%>q-E8'Ha0=-0Z(\<`c-b$6tKN8J<O*KFg#&Bp>l>d_7j7jOc<Gff<LFEQk*<#4f^u3[d";_:krm:\(+uVKs5Dc_]NnNL.78_%T<SNSW<;ae<%:9SD!cB.bbLIVD6%__K?;CsV6DMWS4WQR'(HKpI/P`\Z<>O.:t#,!LWh%kf<k+c)"AkmH'7&GdZ#B`2'=ER]^Edg%k3X#9B+#4a$\5ZiF.,.JHnlFA:!E7;Y>-SqRd@bcq,[<5#)XLu2,9j9"`U=fZZG?pr<gTsEFV7$0af,-\%;elC3h3Bk8(i+N#mLu%7p_46)@B&'^)/0FC6oV#^X,#,cs*ri:$aDe615/VX=-/0XDOHNapfj[cA5BuhTNF+m'HeRX3sB>%>udba_40ZNBP<Bq<Ak%`LW)Q%4isO+CDcGC\6nG6HUF)@GBXN[`B\h%`"O*+/='/u!BiOK*m1Um_('JK&j807;V;AUP\_:chZH,j^4L_EE7Y$^>0aNHfr!6Q$LpaL%<OA:ugDk,H4M>a-X0oUMZdbNh$9:#`:o>KLd^/Q4>d<5]SVYRheoSdYE;aLP$G2&;HmZr%8V8^FodlaWm='^pkIHLC5+*(QH=asH%6%?Dn*cfo\*+@XQ6M17crPTUl.m_NgMsrcc2oTuI,;=R<(1-J&.'j1OL_BS^gX+eZGZb>C9=`acL.L#g&sW-hXut8K<2I*>e_.T4%/@GNmLZIS:n'QM#"9MSYhb>q\29LqO04QIf,=/#)-RW\g#S^=rfr/8O<q3bnA[U@!Ce+[SF59Q?cZ-R_LVIMF,pSBiBtIN]7:sCP%en`VJ?&CDaqN1JTg$G`q[A5V32UO\BED6K=Y.$cb?=SAARQ%<:feIH6#TWWtG0Kun?.Xc8Ttd!HH'.0._aD%9BFQ6(5V&tVn,8`U%4=T[)fWM'IV^UK-7[rm.d/d^PcKe7'qg$"_q(Md:0BL[_q%ll2URgsL:\DdEcI!N77SRT?^RO9L6+";8<s%F1AA9=W"#$>Ho;`8V%,M^_`e(u$Zkt3C]BmZqV8@Qgp.,q=NcQQ"#aPd^$c6@#8KSO`N&]'S0GEIE)s)MG?b[daIFTWd]20iLd!W;eX]+saZ4[F;c2Qkn9%H1DsO'q%SGQAtE9o;a0EKSe(!gJrF6JhY`N9(M:D^5lXt0E:c^qfY>s="HY+^p[%5kCbBSVa+[eNJqt*+deG!?)%ad]O!DY=Y]Yk%CaD0"3(m]oRF#btX\"-gULrQH'FK7YHKM_o7aheVW!<Y2$,YD7_&>AV*V&>:U5@H_@l%Oue(_T?&=[U)JaLdK[hh>u-$HAOSOPH*%e<qPb).ePlo+2LRHP2:bphu=s?'o9>FoQY:a*p8$5Q1O!PI25C4GYQTP^Od%1(S$"%/YJYc978%AElgDL7F[nXSY.G3SXE@>e#eC%iZ2h'Z"q!Ub)De3M!5gm2CB*_AdeVu&)@%ROJ6_fhq9Q)p[?*JOF*Y=+'!KV0X`:GCB7UC8.dTpEg@^\O0D#t9mUX>TDGX)?,8$l%r7R0V,=Rh],AXp@F7h0\,5DEk@Sh^(jO@iS51P\V4?)D23asWKTJ[sr_3oU.d3h[Ag3=lS6>C(b?I?1BQ!euW\43H^FM_P6kc(GP%Df'-`"lL-*1uHPkj,-%KWOL>!';<D\],\^2T)k[I&coF59p,Dei,Uh9/Tp-T`IO.urOPiP.4eQ'3jhSIDY>/Y?HdNUneqC@FtPLN%&(2(2:[1)5)V^/D:1]:@,8b;Y:T^.W3&@-5#,Gqr*U,[:ClO&qb#*&N"V^1Q=L+H=ccZop[\l9'UkI\:BSO*9aNo#aP%3E\`aND\%8sRa2:RZ23q<?qqjdsGrJhXSV*SW;c:$#Ms&S..QK#:c>Oor@_`!j+jf(c8OBjJ1&VED"SD(+TJMI:1!FO#Fbr&Jtp-YiOBOp9gM%hJB_pBp`7+4Tu>j'9oG&#cGAds1E*5)BCI"/jJ4IT<2qsItc#\D0HG]Jq=<NdbYb"i'SD`qX&m-j+[&\"#O2]CH26eH(0)d:jTgB%U2SOTDcD?O=Qnn/#qJ"@ZjmqJ7^[tlflgSMN#DU6?lj/%[H`l6*@%Qh]7EBYX5I(Z<n]\`4E,/170'huP>,f.SFE"dK)D$s.E2RO%[hT(J65A*#&Fe#.;(eICG!Qpn?LOUCq7#6M3/X``U^;U7:$I\#a6(8l1W_^H,?q$3%)P@O([J3qX3;._\6dM#-GX:,;%@nHqLUgi%-*CUWmoT9?AYMRmHn]l^^Gb:Bn\:O0dtCTnoqG8l%lJFU:0hhH!O;Lrk5VHg)TA9!m`9=T89(>I`/6+!%%oM#Yme@_&Sh3M)_LPq%rbSs;Mju>7Wb&+WQc;*Me&j\6Rr#$iGu3>[cYY-gP%LfD/sU-Lf[lNL&piuQ_*EQse'i7iY@.]&$@Ra<<jBt)Eh5r$H(o<H)"hlh%?a-O=e2/-RS?qd!k:MBC3/kV3nKQZP^im>m[@\9a8<['8\E9V>[/8snWda[?WrZORO#8[$hnr%Q<8n\[4p>G<.Wp`di+/qPob:_&%<o-@m0bpZ<jE&RZ&P9]<<q;]6"O>&2*b:aI?W)Va6g`?`YPG@>;<IO9lb<APlupkSi&-0'4`DQK4EA[mY]>jla0R51k=Qg^nK"E+%"Vn&>/d"jgY@tAS#sbTC;>IV=?i*R]g@3HMC]F';n;3J00^ILa&2?FF)G4\H1_XhAg<i;7W:F'QAUn"SGTFK:9X:;fTNJunWK?JP%,3iGG$L=r@`l^i]p[#pjnk\M:&D\H2!MFni<E,-;Z)F*@O`I*&>P<rjPleP$EXLWul$QE*KFNR=$'n2]!"!!EO^Buj$b^DlW9s;U%m16`PO#lhh%6O-+GZ61&CdU6%jS1-(F(cQ7Y8+ugWZap(MKKCp*Wlij.A<Fq@_Y+u_.mL4Fsa*fX2?Wik_gs+aG"<N7):E`gG53X%'WRD_^+Rlm:7-(<5u*2,ps*Hroo5<ZHIh)I\$&jM/=\Z<E]L6N,J[o-4ma3f83Y"?ZH'jDo:n/>q=NXbI?n2DDG.0*0\+u;\HI+D%JHQH,B/1D9=$H$1_<KC/0Zui@J]D4[Kb#V'_*K:8[+M5qOgK4,qbX$HZaBko;sS?6,3?EcUmD`2Pbl)PF>O'=OY.%]1#G@4o,S+I%f'?Sea=CQ[#nrnlPHYgt2Hf;.?"s=dKl#!7kJpJ=S%_"NeD0;;"BhYr#4J"L+]F=fJV!":;;WS!m)W1.U<Y,$MI5u$\D-GY+P'T]%Tgt6P(3N<ggZ-BhbV5`,1!s'do7rWe_R@C`6_uE=/ts&?;)HMLbbp!211GUNO0@>qOPRY.h0olq>p(?"3N*.u!LEGLXQ/F<1=?n*%MfYR0!8hk/r%rV,j=L[2rcU?[mkR"K00O\KJ\]PCDEeV86_V>3KFJ8d8%MRGLDIUunh%h81="Nt"W@_2DD;adWA^8Y$Igf]&#?g/%],Mt"!+3P_!/Q6*p>opBB2FI:+g6SND.cDR8WGa5J055S0[UOZCNP*;B.1%&-@8@+1Nubt#):&l2iMsnDc\o9D56m*H!\)b)u7Sr%Qe6R;;W4>d_(SmE2Er4mkJL/TC?g&7hHm,NWS>:9b=F!\^2<jpHCXp2h/cf%$=`&GkL(TKOHK&[TGH%.*CG432^;hB#l+.n]]=Sd%=X)F^L;4Qmb]h2sUU/;URAZ.,0bg>g]bkJ29V>%`;qP]r<"9^VkQ38G<gE>05l'6#rI!l.Gde8EG7(<V*I8t_\[0\p\8AlOk[)c)%G'^tK+^%Ln::=fp1s<#*,cA;<f=E60"lWWW*4$MAh:MO`OsC)dfsepaY<a*tAXg]GJ>o-BM%f=^l;M*0&'[/1LUWL'Bh%>]HKgUT%9tu,qUSMj%F/HeXN8_GY%N5t6YWI>Z.,"Jh,@IBLAPh_m,V7mN?UL)q"+ef(.#8J#g_cI+26&/!c^XZ5,S^?h^r@a)=U)+/'9b0b%#rg0=(]r6,K_lWdKW6p\&j.+N>Hdu;<6E9jld*M*#$1\#9KS^EA)dpi.&=q7QDu^gD2N3\U7NkHHD&GoN(G<-,6RmAO-H-.D!sp^%pF7]gJU^-fL4-bT&pF&WW3@hF*%f`I0I^k^^'C^f6Wq#\][:V2B/:eaVAR2,/0^sPO?c\Q<B,7U7oDq/E:ePSnEt[t[06DLVrI;T%'b7@hIAt1!G)7En]B`0QH\k6oEG^W&Z#2-nYQl^Mo_k@#SSt5TiRsqcngcV.em*bVS/2V<fd>Pr#0<SP_;QV.`jIh`M]rJVh34^_%?rt?oZ):o5\n-Ph\1/s>L[l<#::@bg_+j+FCh\&1e,kLS.=F0"=BhCF`ke:r[ptgKNd24.egRTAaC5*tS:DLA-h>/k[TYgD+XDCU%f%Q>BH]$f@"RqW-\#*VagS1+R4=Yc^N1%MiH+qH%fbc.KHii<(\TVU1ScRYm`J7j;m@0"%a-Ria24uI[`(<&Zlg]C'^;^L)@i]bp%He/NGJHh>ai%Zctfrp&(DqBr"VOc>RnT%Ut=k$rM`L&[?K*RJ>E1k[()P`P0-21Srch,X#>Sn;,bn_\l)h\hkV8+'HO<S"<hFShP%_er+$,O.:hY!9iHAde-lJ;Yt;cTG&B#@VPi&KA=r-O6m9`uZPHP[B!Scd8g%ZG8!L?mfH9p;c\c^^1i<koA-UK=ujuGsnUp08*I:%c6,a;oVEG#fR%QZj<Sh.ArYgVLD>8_3RZD#9)!H?Ql3k:689G))F)4&+m=!ED\@DX'8[g?/OiK2-B$"W/489<".J<F._8-/9\.Y4%H'3X:+#D3GNpU_]>&F_P>e?.-^4Id9%R%a-N0Fqu2]CZs^PcP+a#8(-Eu\:)6VE[cF(a0pOgRW_l:`:6<P!b!S,ZDDEo``08g./t%kF10;-`]2c;_J'tgpJP7e-Ln'a5b560)bKDP]Cj5<c*q+rpceSRl+q.Q/&fMV<Hh/)<"RUAuk$U)0%E`@XgiQk89%4:/i4*r*;TW%SXdS=.7YTBNq<_n(('-M=q+4saWrJG9H71C2ogtN"p\7GhFg#r\()(5?LWZ!0#e$<I6KPSDr7)r:;rrLpMMISL#[U<ph*;C*h!#O%M70m3;]%4O*\b2:O."b"/`j0(@Q<p^(6QTeS7G&co5Q]\H[1P7j<gr=%=PnY@Y_RQk0nl/JOd8I6`,ASl:Ynpp9^O?qJ]KtCVed`%Wa<8T\JsI%F07&GL_,WL5[XL.m.,&r0+U41/n1Q;[,O%9#hlD:4dbi[Q.HV3).Gh9?J.3jaZ3-,%("<OF;l.InO@1cN^M+k^1%"(%P+]/qM'p=0OrV''%=bIPP6BmCJue,'F3Xr[2`u&^>H%]kal>RfF^iQ-'HdgGQffl7_pBAb`=iqQc(uU/h-M-/;8\N&Ec8DZ0V;X#%[YhLMJM7`.*qC!p08u-[PRQ)N&b14*/C<7d@*104>:7ltr=DHPC%L1fBAp.WD5ra]KF5KNdnZSa8M+22_X.7>G-b]jF/An1]a(G9%6ip+-&m*&T(mu39O5i\n2;lQUF'a]MVTjn:lpS[>?G\b/N7mEZ6f@\[EF+583(DTUB=q.A35Ld.O:qo>dW^i#%MAjh)9:/GV7"tb%4:A[qo65g'r5dM@?/'NT>3mdU,4]XrQt8.%hCWamplc(&Bm5f,ilJW5rdVROAK0R2dAmH_\t0S+=$5X5dQ[/%JS+4k7?41gg]%.p%",<4gO0R75d"1#dXao2DUn=&95c_'$fA3"rQ<npHF.l34'aT7h(071Y_-pL2>@jVu'Qko1i>FAf<_jriUmM&#>Pi1GQH\^4]W,XH%7DXpTP`<TlN,@i3d(n<[Wi"55-:!_s(iL^=CPM=uLQ8"3D#k\A>=&Pj*<@K^$gg>)nA9MGoEq6Z>j]'Ydg3e2$!371agOJ.?G]>-%24OUu#o]FLXB#-4oJUeb4AqQ/aa/'KSK^u9_Pf]=N,mu.mmFSN&ObrY9uB0P5cpi)^lu.D?s"T%qXj`X_(`1uEp:<a$mt/HYCc[u%$bckt4AQm>C$3l,b"--S,;jg7OCodJdAUU;NO8O_LUA538iCrmd8L@/W9N)bR!C#j4b<ZEW4^.b0jnf)8V8VD%Sbcak7;F_r%MtM%W7Z?IU7roCZWP5#BNM:3)!M+`b!;238(P/3#ja)lYXO@G#9:^Bm;/*;=gHKjW2*F'SN8D$WGDcK91[\FgaA_Orf#[@>\CHC5(0R]%IaO*72u0<t,R_k\D0^2AQ]*c>Z[sIgEQm(1plpl9M6e(EDO>IXfQ'[q-:?nlQm;!MZqC&iAh3O!:+WfH"l:"9(UtgW#6Y=DrVG28%Q9tlT'XlPnHeCC@e3s9d;=$)N0_)'Bi$itmADSuh?'g5#QF3CpV#A[ehd$#ekdPH'>s\qg%A?WG9<krQoC.h4,&0f%k9Eel.;mR+%HNri2:As6)5%7fZN7]0g:e;JNVijDbg"7@YAm";m_i!kJ7V7(X;Y(YP;-gS[=eguBY>Gk<Fki9\!2Ga/0qNnA]rBrgj4J2gT5;O*%-cbL8!L=agUf+F!5Mg=MJebU8o_Q3q&t_KiHpB\Bm&^ODg_&pJQ$-Om'jGk$HO$_7L*\;RGNr,t?tASRnU8??Ge^0UH`ZK.`&B86%!1G38:&lr$OhOV_3`o'@SMjYdPfbiZF(O0JN0ss%m<&f`h3mJACYTq-Z"Nb<AG;7=_*RHg#^9Ua.e1\I[YI6W&4qHr,D"9Pa6#Wq%6@AdoLER$4$m@B9@/sa_d*le'jdQt%=Rti3A3BRf[t<]ZO8pgk?Wn:u`QdZ.NrSl<IEU[E]UN!h)W`[jMl&3?ScZSXf`ZEEbO(*]%R=Ic!jj*L_MU='%B#Ym(,2%esC4^2"4,dWLHcK$>I@>7oQ]g`Q[[V\YOhf%aVl9nMZtuXE,)eC$^YPs6'b&V-#h[N21]`'"/$uDn%,UmVeTOf:9E=Zeic.b=:^.sL9DM"`5T[sCYE-/Qd)_9-&%aBP)3n@8*.C_L[L$!^SqN]S-G8>0EY&s,#mU+Hfl,tOoHe`M;/.#]\%(]mTV"MJJ)r[3s;6LQ[J:q2lXeQkDL5k0;SBh-;2*RR@NWaN3%3kE)AQ?u@R#!;+jRIV^c=eksHE3^2'*C_@;1gc67pQ7-T?0!9R%jtr`l>XV+SkuTQ?"<acu6_pr&>6*2Ri11^#!O,EUT\rL*EY1D!7cO;cr[[Mte0*+GgWdZqjQF8NY`nL>!.&eB!d'I9fYO"7F6U)<%dNb$/%6j"]d1IRcDB'c>EBcH$X$1UGhcdo"q@u*q-X.?:?N[g_WGQj7b4i0faJU2(UH=._?+93HVNQ;uq>B:%rJRa)/n:Lo^h[E@%p=0@j+>_Sq>"M"RHOr,?Leru]o;57\EGn%h^1UgmiM&\`+g8$=DRS@J>OH>3W2mqKoMaF^=QSXrU2GhDYK&S6Z3\%g=Zpmiad1A<%F.cQ*H$XeTMMIau@(5OGPWs!3KWJb7E3g,K\U]#gp1&95-cOUo[ll`95*N`N'$A[L5:]rG:.r32Q9<*("JRnA"m/Z,4?A6B4+j5K%C['&W[+D,cd-^4nA5@oO'6mB-4q/\GB8WPASJF]LIQ4).G@p]o[`*8+.d>RE[*)W7d&GI:;@GlkVT#D85AAuDk7ncVGuj,,W3Z>k%53"eUet#(ng^2IorV/eKo:6?c7m/0^.?DpRN=#Kp:A2X4#"4A^5Mj"KlO[6FbYZCG]&?u#p-=Q0Oh4^Mn9NjaM5$OE47_)7,Y>uS%gB_Y*ll587@p=KXL5m9Tf'_/\KlCrFJ^P!G*U&T:RJc=j:YG781i@a_b39M@eWQ[R!Lc`DhaL7l.7fkXMJ8?KrON^8>4f@9jLj7#%Sd8\)L!\LB%h-X,CO_FoBUcR:aTiC.N=K!R7)Qpdl8E>lCWG/i4nMF2';kD'c[7\3O+,6b4.7C;],CfErPLtA4Gb0MMKX;&iQjCi%dhM0(4pX8`Wi_JLKonmu/`E&dee.-)a-'0GMS?GJaBPU-c&U=[1+c&l_gDkVJ$&C05Ns':%<,PD?<fF+@LnKW2,-X+.&8oP;QV$[%DO:Sr%:d$`'sJ?qle0=p+Oc^Ykb(9m6.0ZS@EK24f[5,AgT0&@X)!PDKaN@WfWmZpka#Y77D'r;+30hW>]FOSeAkI+5-aK_!ESbm%7T(!G&k7:U??)D%VD.\__]W?]_!eibUBB`.T\A'a^5\pSA^LSYD<t?3%SFLXfDWl6=O#>'9$i?ipuT(qftp^)?]k!Bq*q+#=JmX\%D%k2[,?ERgl=m);A40Rao=V2QPm&huZ!:R-..el"#9$7!RqraCG0:nl-2`&"38"3q>f\uRg(mB$hKpXnjX?jPZn7DVMVf5`s$u%I%'nQu+L5[Z%Zcm.IkD^U?7b4G11fXP&V#ED`__mpIH`u,t#@Q'uHXo&%k`iD(0)#!Y6R<s>H3M7R#N+h"-`tCMfU2dgF_Rhh4Pq?<%8"V0#Y<&GS<G5,kf=M-DWkW?)f=-@&>Q/-a7,c1Q(U&T3js>OZV<rq;.YiC^N,XqSE4!eRXC2%\.*MS1[mnWj>)k[5i(eR$aC7^\%h3&[j5O.IMl4'<>('-GU489fOF&h=?.BP'&m.;=9DH)_fMeDUR^0_ruE$E0Nl#7Vngi4m3&YUBHTre&1C>h_s.l\a(KTuogXWu.*%%.6")`YI?D!i(ekq0C`9CXB^h[);$<+.s&_SjTCXn$dg**U57/Y;>[7<UH?SbE*Jko6mmaGi_N6J`5]f72J7q0q,4m4a/$+]!fBY%q:V/C]HTF\(g.W2'aYCXYg->a`iVUmB?ofi&,7_H[C"/R5L'gOC8_]CEoPZ]U<<RcO&,K(l".5sr/kHX]TEiuZ"gg)/!I3'-jf8`%ZEL%Y,D8VQlcB&(&9T=5LRnG"0g]tO$I3hF186!A*cR3;M/1cMaA/Y,4\pba+&ZKkH<eoCa.W0?_NEaXjPR29T=b+qMH2hB>4-2*%%@mo_dM(#2Tk)rdH(n*8)uc&,K.M)Z+&So/Wm<G*-?/%(k4MK#.K]b6QZo2Ec#e!@ljtug:*jFr8q!MYW2>W69P/i_.[6b:.+/Z'%aZdGLF@^tdNpmN"R_cbmH+2b9a@+q)mboV<@M1$BDFFl0Vm>$gmE;U$`i2UM\4B]f@L)E.D:"H`B>0<XgN"XHYKBd$k+pmcpN]Yf%-`05bj$V2XI-Nf.AVH)*,CLVmF:*h?$[nKc5a@KT6Sn._Afc._*tWM&69/YNCaDm(&Yiqp0D1(5$DE8<OJl%$*d?X,,(>MDO`Zio%G554kD:Kf::s]J_el3Z'T0>Gf?OB@o8s;n8!7&.V!,#;,q5,H&GaT@a5SLk(l\M8>QF`3#`=4"@`]?dd3m2?L0/a2";Btbja=Io*%0oWhV]Vq$m[/!Du5i).CS@1Pa;slb1__To$BGTAtbFB\?K9"rI*!DH\`W'am>nOk^N.UgjA\6epZ%,uG12+'GcOu-tI5%Xoj:`4i%O#iB\1,@;)rO,41NL\B'=/=PU&L4[G0^k?%FP2fn?HSL'Sh5B27R\qgb!i$uqcsY["\V64YC&DhgjKp0Q8Gu-1O1S/l0bJUXs4Xo%cafo.5.>/NphnJn[4"iJ!@)oNEE+kE`ucXc#J2/[2)SCK$;!^US7a=T<EMW0m+`2MO,`hr-!=LA,E`>:7uuPg`L;r:#ejJiAkuq1%+"'3Cj>J9?WCcOG3D.[rE4Cm:&"rMpot:Qa4PSDLYo+t^E'"ptmh)C;G3[9[9UQc&0+h)fE)u77J2e*])44=p[]*.#HMY!'aY$lo%@Th,uUstrRGmBUp*&JR/p_F-=721WGhpT-$>_=@b[!P,E!;$!T#$fW<9o8IN\D?l5EcnOC)A;BA:mB#B]V!(odjLt"pW(N-C`BK>%BtQl9Fh+5?-2P'h0(s7T/S,chWj,u`Hs[nS]U@5en'[$+Kp&u8iPH@!%1'UE\`\>9YZ^D;1F,Re;U)=?8VU=<`MC)neQp]$0rSZm%?D3B$.HfOX_fA/.*(fh5on.[P+o%pCrtI*m3($bo2oLoc8M[C<m(b!\f^3#6QW&t+OP-YtQhlJk/R@rSAT:Y;3(AQF`%6&jf+2fg%o05V863U($9?a+hL'IaG3XdI`<d>8V2[Du)5L(!T[pJM=<jL>pBHAbl]uLdPk.O@\MJM1U+(1oq[6Md78=s_r_$Pj,nAoTQ_+KQk%M0PV8]Dl'Z&b54<<K(WW\CHg.#m2PK(57.-`#rpZh*Qg_1K?L?!ag-gZU1DS`DO8_Sn^a`-c5')/.G>_n6+..@@9%!&9!q]+!9X3%\#>%p0J.,"#En"H-agP-agggMK]i^PD+g+2K&,_L8<77A7"KP-(iXIHBN!c=`t"Q6_=2pkR%[\FVL/XfGLap[<ge>Md7rR9$&I5!%(3KYo,Tk!]l)0l4A7MM9k#tGB!gFAY8RZS;&l0Ksp:,-i`qNY6''6*XN&,W=_*lp5Af=fF'O?tuT'8=U1G*=fA-soBA5J%Zl)OI0%72l+#ePIq[_\CW<\+;V`<65,V]@0[:<d4N$(ss>>mWgG9Obifj/>o'JO\ugL<lIW*1#P0g/G0\@6>JZgLRb'4L\+Oi]=?_!Qj2CN%[Ul#<UoSk2a?m+Na<L\'l2e26H8R*Fc,be,VT25ql=Vnrk"4;r!EE`s4`k3gK)Cl@Vp[RB866O9mCD$s6QeS;6"peeWA?55#e9\q%^h0s0"bPdM@KftDmUBr8DNjphEn]jHE;j<C=mRV=Xt#on)S'fpcG#Hih#,&-Eds!bGg:?SeeJfdnBA<^N`72iW]9054a-:[Zq[l0%"3N@TMPN(f&A[!)UDtC%YYb.Ylu+2s1A3O`22""k#fp;Z,G*V8DgZ8_AZT&AR4$OZA(+NdiH[b^iI0Hf&i.')3(PK5q=:=1M#d+r%Z4e,t@L$oMV^)OOZ0?GPS.[kkmqdVk`B7[U_?!SiUt(-QTuaJ?VT@ARSJI&HQ\U"+JG]cH>"M*?pM"Qb[^K5rc3gt#gV@n1c;m=k%_n,89NquJRGoIgr.:H'uX=)f>-&AJH6dJ+;OlQO<[CtBd%Wg.0+cU231fAOnUQ^c2PpQqQ"06^Srgfuq8VAQ+Dd\#gSeDpEqmT:U%ddXLLm=`gl@b)Sd_k+TfO$!3).r.O6R3otB9DnW-)t,MH]mf`]U:oHFlq`-2ag[t87+g&oZh:\_X>Y/Z4U;qk$<!=;Y<0&XLs<es%,WifmRE1,f7^IsK,4oAglALai>D1PM<_@lT//Z.4T8WT!XJ]9i*#h#BNC^$>HlH-opKY%1W,JoC5RJ^'>UUMAB-F`nZ]_E(kg$,h%dR/HK9Et4H^?4PVE?o,VZ2r8bSQs0687b^#*UoP7Ht!3u6l@(hEd<I"j!Lc;S:M:YC3b+\p>"LsN`aK7O1[lsP_[UOE6>iZ^1t9B%f<E)>H(;=[q3f^G.FUERmhCaC9%5udP-oUB+8Q]\P^8$aF_/6Rg^880la\8+N]_[GOdmoTg6?tbUR\X?HsNFO7Ga+01%/,fPPQ8X%Qg+_%]OBYg.m4>nHM]U[IlH&qghD-`kGAnVhm@u2%O@;:]f"C.[!j4hkSq,)(!Q;!Tc)!J;^L\G>)7:YLtrgu9kDkr8#`NtI*J`2%;;%Wgb!:U!kt<CNk%UX=$g=S@-V\-@9]IOQel2%=(:/`QpCeZ5d4&>pDScBBKC>DScmBW]dH*X.]i&K3TSTjeL'12l=U*&cA3cDb%I]VMB>P(3W-j/DhmE/I?[i\Dq*k=5;#ERD&%o-N3+D*&%&-J8oW`+u4*[r<Y[Kdo#GpqD-qCNV^>(?Xe:q=AT-Rg4S$OP,MQ=k)t%8s$C%Zod7E:^JNW5<`$1BPTSLH<DFY[`)]AHQkK3Vn6;YNb+t!@1]IZ&[f8<N*Oc?n";k2da+1'jZtjbo>YJJ,;/mJ;$'@aY;K$+%k1%'u6fWP94(:Y95IE]R-K8&Ko@Jf=EIP+<gH_L,C3%18<1/;0CG5-)Y7=!F-l`O^@s]jg9qHS306pi^N4\uso2o(+^GCbQBM1'f%11id+G!P1rSi<,5=GI!\AYTtheCg0NVgQ+gPKRe:1,HAQNs/qYG5s?O#OY[&)s<oN-a_2:jYTsYlcP#qKMW2$OqS5LY+_S]K%(ET%7MN&u=V7sk/V)YWl%?-.`jeOf>YgrU/8;gi)<GU;%tQl!:@IMU2^:gkgC_0)/;O.^"A`@$Wm<oTMb)Aqd+Kk<pS'>)M:C;ADjl3T%q$Us+[?0H*@Z::)3>\r#cn<G>6j=5l^'B[tPmo!Y!J`4Cmou$+0%7;c#[.sBq(q#k^r%R(P]R5d;&m\<TkdQ,kia8V5>'YD+,J$N%f`iQu^e_TMIMb^lQ^I#<b/[E"n-Sa10.mAY\:fU,ALJ9"#<;.obnN)2-p,O"VCma*jd,rAJ?9,re%_h9N(8GBEl3$78=fu'"pg/+%)^$i8Bd?$qXoso5Sp(3B(LuIC"%Z*'A61ifH3Dl"+J(+J6BCUb@#f+%p@SE?Dd%lA*!5R7$G<usK?/pC;>$OJ"<1R""E\"&+j,R0%Yo50fSTK)J3J/!m")O')YC?+2cVFNG_*i&pmg+9Z)N/pTXCSpmM%.u-Rk9%^*[*crC.,$<P_Xj:I$BgajF);I13Sf%Q3j4[B1gqU%<Y0hJ7uo\656V+COIB/(7nmTQA:eht)YFac<67E]P[BX.\g+e-C.$oV,Gei>ic^5"aHt!%cOnD1jUm"j-L%WWm>_V13;pI%KPfaO%]447Z%\^b`:n_+A0DBF=I>kOV&q^f\E[<UO@Sm:#@\T#Z,Zd8!qZMWLj%OUpiZ:E>P?i.t?$:%epK1KaPE(/RdL)d6(9u>3$H!X^%$5:mO0E])(%Tno:1=n;1k;_`1R&:X3mXmDs7eRi^1TV;]j:HnPC4`q]k<cf9R)r[lW?V#hhr+;J\+`EWn5b$KAo^p@][^T.Ko"F!%HXc?0mkH-*G1].'?+4rhP4*$1GCJK.D3F*q?]DR=?#U)0;_@4cYEA69V5.S+a_cQApV*'V]OLbumI;7`=1*5F]4NO1E*M/X&HTI;%dH0Brr;7qQ[e!jWCHI%uRgCkR+8\B[4a1IC<;RE<%$ieUN>2%eTJr+`J+A_#/V`g>*FXl_p()XBXnoTF3:,cLIu^Ea:VRo!=BL/R%V/KQ[$5b%:?`?9$m#u9FJs]npnu&;'KCs_c:c\9t*IVmebIt4)jn1//d+rba'O$#W3u::R2)n+M:]b'[IkWT$i_tmM!pWk.iV`EG%neocaU;Z*X0H='R,V]pi;*t*U0-bkGlIb%W##pJgZ^W!=8:L8cIe"IC53niS&Ya`8MIh"rlh;Yn?)aP.MeDV9lLSjs![f%8M9T8U%^pSu:lM2.dU">%gn'-AI:6U_pl"@K'CAN?0#@iO?e\LFKQuoe#Tfh.iMN4iO?[SAbGr%7r7t.ImV-60or.mk\1/=;;S8H.'DBl>8%k5sq\ZD!uoQhg:.$2u?s53oq?%X,%g^1tLi-tt.aps]07RZ;]]"`"a#;1HAr(TA+;>(?S:h#>tprlKQfq6C"tkI,O.?&jKGduI&F%5jfaH]:)Pgr3k@L7]nX%@4G$3ADL1!&$g`X&qCC57#:>WT^RfX&g:/]*k(N/lC-'.m/N>M:21kN/D*0?T3cO.lX`XWUtQ5bs5OZ:%PsZ21%an$Gpi.b_p(q:$ogu)rmb:-b?XGar^rLKu%93&X5`_-ZfDGM]OZuR1oDNE&4K-$,>Vo82G%5T,TiplCRRu<e,Z8au.`SqL%,YF@js*"_4OTtu:IdJ8p^NU;STPGdnK(+=$1j;7C87u%:*_Q:0E(,Cb@;C=deo-HYGf]?>$H_>bhj6qo+FLa><rJ%c1Y&d/<!T,Q%=Z_c'/X;N[j"-I<5Lnrn_cibF!28PXQ'DZ:I,*W:lQWa7f27!G5N+&Rg!98k@Ko7+@fE,C@E$)pn4JTj+(,!0^Vn=1h`'HMG;U+1%Z#lfP;oD*=_kEGT+1Hn=iGbe>_ogc!R+B+^Cp_2VFd4WOF$ZaoT^j'Ji)3@X-cRp<SH9U_h0Vtg[56_h*lt52+FJhb$;0o9YE0G4%Cg]GWD%F]<A#0u\6ZT]cYMAA$Z;[qTs(;-#I]&efF3MC#r,h+/H-a7rIK%JQs#<1ts6fMh8S%\Jp[funVdF^F^\@*,nK*M4SUU0*%5C#AZIcJ)=?[Y_bq4<&mB&@/C`"5,=YJ4`-pW<0$HgU^cC[\f8^X'Se4a<upH>UEphPUl?jmt]&dZgeJ9!33Y2Oe'O(0u2p",7'`%>:pWOHR)$->tX;"*-:!48*/r(!=c#2+5,[W:/(\6<DsRqR6F%_Y:m)='+eC@-Vu]27F()(Dfu9<InCJ<=,:hMk<6p)&CQl._>ZUZ%;4?d<W4jTVQWSL\;,X6a:R%!PFBJgOrFc6r>SOWqW\`lFfI,Qd',?!sU=YtkScN+ZcF1DbEH7k?N6EQ5dpa1cj]3F?q!H'WHk@Af%%(+IO<u4YdfsH^[T@)pY_*5jG=Bgmai3JDdWbpP#m_./VZ;)be^54W%RMY[o<\Pt>B6+<`[k9Q>q9D,)-4807Jrq.L'`*,:'6]L@%+<$ELjV?DKhik?DD4er6'6P&,`<ea5ZFFGZVBZV,rD<?CbQfPcWFA1eO>X)nrJrauq*+#";9h\t90<$**@O(>RtGs+^t2If=F#Le%W3/Fp?j*BL2D>3kG@qL-,5-maN@6DpRqj/'0JcVp5tHj]@]S'-Y?="Z1TMo097ST'P%):*@\CqHo[ZX'I66eqM5&h/!=GdL:O#aC%-5\<`"&1gQlccI:XNu)<#J[J5q'>F!V-Hcl5ff1OGI^rYN)P;!.ljAn-mMa3rGk@G:QZ_hLQo@sX+PG+oW1j(1R@3>]*t*D0!,3N%e?&E5-9h*MPBt6L7^c\3,`VVTB/8Ta:mVT0=Ks8a?*"0?20RsgcU9bSfH`Jn)k@.K#O^m?_Hk`&.DpV).:=IWZ^RXj@*nji.O,j7%Hkfdr&;r@m<<Rq%V4)RSmJ!iSAEmK\4>CUkn80@3hJTAd+aWsm!SOD,`)C9d.KcsdTQQR&HN1jbY+mmBP>1eo]N[^>(\F5f$qqes%c$hYfq.W&pbFb'L8Z2,*F;rXd7T;1K_Ejj<FtC`/YOaUBgi26n(L.:s@>Ga^a8'P<[,3C5=;4-O0X)jM%_!5V.t"R-=3&CUn=XI9%oZo?f9-W=l`8>R0-]6DsGnBQ_[6,nd4T8WMrVoEY0mZk/ns4Yb*XKZ<bptk15Qs1<VsR>MEDi+QR.'3r*"S:kiPb-*8Pld'%F9LR%3I2L:+(2kWihD,8^,t8Cq(d4fYfOh->=at5-0buRi\)6b;?%_k"h(&]a[2qT:@)Fi)dW">%+c1FWRd>AX2,:#g[S@%lmEP\e,Hs2%`V&n:M@biI8(`R5&^tI`En^,ZVCg^^?dt;TQt-`h`fp]<n$GN4h'eJR8kr<!G*dV%oA1c.JW`G]`"#55IR;FBS/G7rUlsRuAUIj7%#?sY5Il.\sn:3i0o*?hdrU_-&I&=iKGUf[IU2cke`e<?'c%@7SJ,6[t,ONOGbR+,F%HuF87)@SbJ.E:A78VAal[FeA_@0HRs2b;M%D_JT6*./)VABV>mV?JSV,%MbDm#_CV7@RJkG\6j&dHu*RZ!gF?IDU!$Frmn#hsHcaCm+s2g@_6VM@P8Ia-",4M92cLTf*l(`Z>74%3:l2W)64Y-_]9^'r[7P=*/lb+\Mm2*SWQih1gK!S%*>7r_2%1*_-j4NDM:rBaGnp_hd^HIOLB3<kHde\Qt/;@CXNr(>GgZ!"^h>`%j2#_G.RVC<*lO;OUKfu\LA`;Fdh)%Sad._3lNp#S12GM59s;KYCp`U9?#!""V)e+a4GcTgBCnA(fBX"TB4DoiV+c"TV5HkuJB3dB%+@I#o=F^g@9$LlQ<M!sQ,.\]ZSE"e",:H8E='[O;:e=n8P'RhV<UQ=+Ld52jG#/W$"NhcAJQc)q)A"<tlg5PB,CsktcM@$D(_]+,%S^HmaZTbY5OGcV?%3F"5O1<lIL#WL5&DDpeJ=[^[duUl[<V*g@;0iF=2:,Ns+#?0FH:^S0\DaFe`'bY-(7t:%.+'r;9n,K=D+u%#%`_%8&4:4%T,P@V[1Co3DjCDKUHT1S\R"X?/ik'ggUu/Vp%Wc\V5?Mr>iO1m5aTn]jaU-H^jI!W<Aj*eW(5Sk`+lXjN/BIobH+P.@%mPTXsj@M8P"4OFF93QU9EXiQKltm](+`[CE4+Qm!E[<6(p%o".jbZLJpJ8'NF:foRKmkCpNtd&4Oea<mXmO8h[2FT9Sa.9+#iHek%_<8QYqdqTqJ"mY_pg`#FI)XJo#S'Y2^Lru%X])!o)OWHmMaY_2;^^Sg`JpXL<u)N+Q_E`N0,c=g\G<$u_P,psaZ:BmdUGPZEob`n%Br[?@)(P^BnSWTB@j\Lp`Qc6:=qT."Pq7nh=H"cL:f_nC#+O[i-(im:B&)4LT2R-qH"=D3+Z-*O<!Oe\QI*?WEYBLkoQ*H4V-O`A%]G<m5'ZiCFe8k!I=Y;$W2.q3/R&>?>1S(BA7/<r-"lY;:'>toecQ-\%$dmDFaL)oM7]:\D3GK>RlT\*Laa6MN70&Da4$>gZ5SPS*%QN[4!_i>9!`*f28!-4Y<i_Z\i^;nrS$qe?sT3FMt3u35k/@N%U<eKN'eZj!/lBq98>bCsfdOQ_I9M#pA(-j_=Ju@0@m7@OAmnhWs%U_O-AL4g_Eg+&;mUOK`P"D1I%jZGbc=d!.-[qe"m"-V.9R]s+Ba;E&ljF?)mF5=aJe5k%$_;/6^QR'teQo``jHM%]JOQhgKlBMd)%VD%Wt<!6o\rPUZ"BSl4^D!+C4MOg6%:)X0?_CXMBFLc$fM8DZMih7cm@(BrVdSh5F\N:/`_k*^YE`CYK=F[ldEfHNkYqf+:/5^`q%I1X4]5.k/OLNMT*1</r<`eEKM`K#>_6,L44iGNBW'meN>IEGY!#%Ng=fE^uV#m(-Df`LNUb"2'DQIdFPXdYQ]?gClGjinWUHhuo(%L"Y^HY$\VeT/UfAm)nt%ipYa,Xh"d8FlP7=MHX#=ot[pTk=JOlZZ`>mIF=jnY9QhS'!nE/-0InTEO1[I4;A_\nguhDAgduLYQSj>%lJ8^o^0)]nI2Xsk;3!I?'q/h^V+<_YBs=[J2bgMUWrd[tkb?\M7-sj,PX0RI#+*e>/'Xf!o^#/Q':Vo$"<%7/c3"Q\9okB+g9H9t%o/-_J4D]ZnH-*2G]'1>p!qaoQ5m4Mt'+bGMjUO/kF'H;'I2A+=%-]pocIX]a!R_mn9FoAn)gqRL?jF)NNcWHH*'ohC&UM=mmZX`'%Yu;ktTa2OnZrbFAVnlsp0)5W/foKC`M8"EWfu0[VP+1")mgQ,Ge@d'UPSHo*LSTqiVW/fF9'rm^@2Z2k0)2DEH8BblarB"cfsbL2%N9CRF#at6-7_&,lpXIb8>D-Dp[6<uc5-*hlRbK@kO6Wj*YR-p"pkn\&rO27q[\,s:*1J%!F8Y)K56(1nm+7kW^C12Ns!<3k/,+X(%^b2K6^)^Uo+LH&%h=/C8Tq_j^%.sq@^m=B?pc^SN5BuT%7Gcpb7\1C*[TJXPS:0!cCc#Yp84@a:`rmBX=b12)gj=RL[b\cG3mEhM%h-pfb>#7sZ3dmeS3GiLblQ42g9fJ3LVja(>I=_-Sr`1d;#![WgJBo#HAG;T`W)#VJb2]S+(Z0^+<4F>OXrX,i/jUHln>j$e`S+^n%EL<,EqLh#@i8a/TVXfsj(Rbab?54J`Nf:I0@o95fa"\bAa+AWCnLr0?Ua9cU,*eMnE?b<`XhF>0_#GR'PrknCn8d+`KMY7$IOh[?%W:DhqaqS4iDts#WPg\R8Et;)-,3:9l=dbB+Na4?_136G5<=bgZP/`kj&!:K::`R`*AaQim.esa?YT%B*VfL\)F/sO\?/>nufV<Sd%U;gLQQ>:6S(G1j*%8`orr^A%h;V\F>@,\?.=CIkkW'E@nK:WcEoii<r5\OF3V4uA2lHJQnqM1\W&C^_QaSMmA.`;C4O8,%cCF''c%)EZMSige?ucqcpY"`RBElr#nS$"%JS/7CAF]+rA[]#<o"_rg/nZE>703L[anU9SSL(-S7n%UPL#M8\_UTbA1koh[`B!?@(n%+o]0%1Bmlr!:MJV6@)@*/BUE:`bjXgle)b:)\I-B*1rPa"7*,A6dQBu3lcSTe<'-s<d]ls8In=#Cu)&Q-g`qq#OVG#qaP(Us6[,a!$s'[%k)VKEZ).OWG^Y8E=dH\t5Q1jX9LmM#jsa1NH\b,D-Y^Za1M&'_nB*f$oRq.T+i1-LhpL;T4pY?]&(+'H"G0sEfHspN;/kT(/>#*W%YJ7$E3/Pd(1@(Ibc'gotX=:un-85M[>[#n8WPs0h-gbl5Zp]T>`G&=!bVa><;JNqFUCgouYNZqW5q1i+-BFH$jQbFWXbhNWOhIoL%9iHh2ML'(_6528=8l;gFdf\-=/aIM6g;sbloRa*cT\.\Y'?rD6iAmF7WY?-I+F6gd+P%*rSQ6dIliS@9Kc8(J/D($]9H!]YF9ru6%lBWSU2%i">2'Y]BqqEd]rbTjKD16Uf[NZ"jB&I[r;+(PFj1onfj&l#,J\KRuZ<;NRemCLG=#/+U"56)_!W-I#U<m)G)f[RL8+XaP%d"jO-<8I"c0rSH1KMY)-k:!_Cj\fE(!8p2EDP+WRS6I)1WHWZ[^Q$`oXXE=j4eX*S4?YEcq83ithK7mFeF!!kaCXl6'M^0ujl\$r%9k+of`'-k]3G$$2G(Wjik825J;6>j4F=*3G]jCYUh`l0YNH+(1(bH*W^F%u*X?R+3PjB5r$PJ[fFKE.N$U:eY^S\hm^Mhor)uZqP%K^tXF<r-h(VES6/WBZ'EUW$-&KRTO&dZ9Xg`seIhK`4XE/uC:#"V#p_Iug[CG#/i*?tS8kejPZe?ONlh^bWZmP]F34\,h`UfN-T/%g0M)^9Gs!VljWoH2F!Vf*%jqS<Ba1I+6RkHEIQO0T&BRmn9J[AlO;#HTAO8UCGBFUch@k*GD;aa$u^?In*a3QgaTu*'W:6:'X-[p%ET_YViB,$7l(-i,4iQ0Hioa'V4Ht.C]\ZSWA`+9+GD[WhbS2EdbnMh!iWamVqR0(;R4V4oH`-Z)<k_;uP::Bq_X0A"=blGP^,*NT%&2M#@S_rb^a8,MVE(L8CYE8@@F#TG[-EE9jH%uZK(XRYEB1"([Rk2N@<\T7(F*#G)lpsoA]&L+M#qdATJdXHJNDM45[Os8`'X8!d%LP/9(a"mgN:*G+Y!hZj5O&aTW=FY^qeY")RF0%!V'iI#N<p:No8X*)t+a9gW/2H]YNBHI@B^$NLB@+TWK]u+*H6k=`=E70UC5kS@%=c#5kS$eHd[bSHlb!ulRUP\(6#8>&ZKR3#O]rBYh/MR>IVqdJa;[*OQaC#aoS/"!ZU\H^6_3)kc_4&gd&g_R"`f=+'a:;T=2%s\U%*4\H:1tMH]EIi:Uh^`4t[COBHF3Y9jfn]91X-Drlcp6CniSuAG<V#.+CRn>PKukL*DQ-K683oaO\!kY$#(N5S+b#f5@X[>F?55VA%Zq:R'3^BBtBhLSMncPE?0^/m7C8nP*GbY]q`3c]bRD3ML";?BOs&CpMW,h!b7P)'"0P?fJo(e_ap@#8e%Fi!,.1cSM4I$4$g6gGa%J/iem'`^,U&2?L6R7Xbt;IFY%/bZ-@6:UTGH8;\K=ZZ0pGN-tF$'#7]'Nm@=,^IC:"FUZ2#d2".O?'#Y2>9%g9g:a98Qo'SV4:p,%;T;eY\tWFIgFdb_9HE(#)?MnErAurQcC1d!g2fCfASu2R7&jllK-R@EGr?\7cp!S4*B,-0$I6GG7`;#S]"F+H0@Ph$[Rnq-9-8Sj%0,b>MkJ2#Aa>$i!;a80$;0tV^K[ZpUbtG64&jk6i0Pki"@#sQOKHN)UN^u/i9>"q3gq4<b%eIrYiT8<m0ZGa?S=@T;V]m&Z<l75p%pE^\0MqA3cQTV4[bqc9,CbnRV`m3_fV]I*lrB9jMVT+`k5te0DMX1V8K#*2^rB&8;O<SRE0]q#"C:.B$oYS+"kR=]AJ`J<uEAnts%PIMF6>0D$X%kS53+IB"`bdk8N*utY\,&sG'::tm;]X8mZ4EJY:4VDq&LQmH:USAs#=rS=so**PCB=bO)e.-7RE=Iko5_@T<?&Ni,%W;*V2AcjV52GOis?R;Nep(GT,$&r>e^s6PB;BjF.RM#Rk2cefJ?pq3ZN&R_qic%WC$->Q"ZuMX350HL&/jP.PB)8S54a"!Xg.i4P%3c,R]b(cRK($ONgC\k#3Q,aqbC$&MR_X$(r0D+f*[88Ah:IWQ'KE2uu5!85FJfc22Y8Lg*04F!Oe9#eEjO_Bl?os#3f\BI(EZklI%rGi3b6U)ToI='5.,6t$?chaN`0_L_EJS]E&oB:bCiR>M8;@H=G'D=c7;Be4r;j:=^`bV'nK]d''T7J-W,Br>.Yd4iG:pd=-301W#%/M/3p\6,*d:nah.Nue@4`]JudhILD(rl-Z<p8$[&5L?<j!^a]m=/cVajKbTZ`BH5:@AHtiCl],*3)E^Q4*Pn3#fgk/_42IBpmNZ6%'&7UWf]Vga8NB8e2Hh=P[";\Ym=b#9";+on5,4%cD?4]kD(T=K"<(J>g*:GJE1tM55F=#7WdEL%9MRUTgpm9iMV#Fse/G'`EPi8b%A-Ep5B1,>R8q`JTJ8O]Te=#2;1Eg@[/hj.*k"#]<^DRWFT^.kte=UA2ZU@0;pV9T$\C#]"O)1f/_rXms!YB>o:C+!ql(OKF#ELj!%JkWI$3+>b]T)j`ZJRiO#Y8'ObP[g-RKg-(\`E$m(_r^"4HX2hs5bV==cL.;N.0!m/3AkEA=q;Ho]:$$T,W.i8KA+`&65`=\Gg5kh%>`dR=noI]6pe)m'mRrQ?:pK787EnBEk426<UpE+m+3-j;9eii%a^YTA0Fc*lO-F>1=^Tn)E48O)9/S:UAj0g%2l<5KEi`K3n15?!%+$r[*m*U4%)Snc>LMh:^a`=/bV+$)h75aqtp;"GG#.O#orNHoq_2uDKoF*;eTnM"h&jDEb7)V;eWk<$r?&A1B#$/%BKj'SEXbqZ<%=o\UPXU@Mh].mtOU(gbFE#(Q52+:;SYs&_>NM2BI=W%Yp$m?5!J7'3?*6@mfIYCrt^r\6tmj-&u=#+nq_?0,4<s.I3.LF?;fMB*j%_PB;q,LeH53)b`Nnt[k>'a[NG@VC;qPfa@8KA*0,,#QOL_9:i_%f#7#]nKO5rS)dA)Mer4A:cod]*9+#AJY5a[XYOtpB.YheRS0c%XQimIJ/.mQKEc.Ck=,S%4h"d6(QnjNc0INUFs6`J'Wk7KWZnN(DY49^cn&(5JR"\'iI>REo^9.q,M*\N=&;bpX2h&3Q(,(l$J!I>%4t62r@Pj2Y:s%'-1M#<+;U.>S;uKY/AVl$fJj%Wu&c"q%mu=n"6:nkp8tNr_1dfo\2L],i$&U0_\;a]"P=DH&N-%*[04+5SPn^/_%5CmkS&s5jS=.o6&Pko,WeR9hEJj[aOJ<!Q,1HG:X@IG'IgHg!\:l'5eN+CIW18m,("'nWGcp.NX5O;&%Y^Xp2Bckm02i>HrI!^m3%0HhTZ5Xg?n7oD:0]1Dg9GH7_A!d>)3a#&^I5U[d\rlklZM?nHOSr\/AnsMOV3D7d-M%T].1V3S9OkPHHbL8sKjH1EeJuZ<@;l)I1%[4>!1V9()rZ*)D.>GXF,Yq<-9CLhA<g3Zff6Y9Y&J>2nJ<(cj]Ss&It!"B.89.>iG"f5iV4m=EX_+>[+R#MY6q`9\mN3nPN`&S=T%`P`]\/_2RY^87A\rSr7r7$JJ4_?1<H&B;"1E&K%*Cq`g%4?OgA0n!4(qh3MnLp=5sknD5e2d9%*m0I<$*OlquY8)T]@]Hm*OIt#r%<_<!HkiMk/<2-*oMP%b"g*iS(CoZbo]-)mDZXb<*PjX^NXYRh?ociL4T4ubf4@QfQa*ko*`H*J/"!$#MQ5^sC6SfpBKAC;,gd4U^%&27&02CG1B8*-8J:Xu(JM`f8uoCq_-+gcoGJj*q6e#&!7pl8jCrLAEslnNqU:5Ln'AaBn\#bs(^f;`%!"e=t]AST'a.c34#mLJ;[%#uPhd69g"sdtc''%)EK6=Vp''?VT>up3/jq/[<TKTt=sl*5hjPNC)U_M_VRIrb560iBb;$i"eSpjfn7j3""AbQZU_(jLA=_2pk5L%.HGB!>l@1t8'IK($lS=qKS\!cU?U_",:.+$5MV?5imu=)'c]!0YP2`s"&@c4;I;01JA0"=5'=P/TIJ\lXNtbWYpDFq2A]k_Leu"e%h*;KY(S:;HW:uR;V.'6YNQf_[Ct*;EgS`RfY!mnGqa6r#,QesIIQ'B62$RSGk8;ElZq(J4a5P-2Bbj*hMD]p\<BJQ5nG;\[GFI%l%P@O`d23U4JJklTZ`N**rHr5=P&9WhK$.M7Yj5kD#^>#7l)P=1_:U_tr-I09pa@"F$!pH0Xlba,,PI-HR<qn>a)aV[hJ5Q3nnP2/(%G6B+<Et3HAYQjC&3Cr,dcb:rH/``SXP0b`h@T9\3#E#VA2auAaJhlXICPu(Lda:400#-\phWXYe3nWqV\!Tn8dnToq6hUcn\K2-B%1,FrH=i[H-+0SI[i:C3r8gjOcPddSWg+\N%[C4h5CcBCk0.4=O(LW4u[s?1(8S1ugafd+RZA3FZP4$*I\a<(=igGb(dnTE960j<(%rK"]a,61d,erYH8%!1;I^[NMkg$S@H;.N>C4:cmNB1c&tW5sUHLSE:'GdKSE('>]dm0`48I#Q(H*cV'SQ=$6>Pco<8e@YbNbG'\(%R(.[]EDE9n0X+1Z8H(04TX,:L7j9!7ij:.!2\b'?5/@`YhphW92tIQ(r/\Tl%DGW9jlq`i>.*T>-9t[Jq`<3Zn"<"28.oM'O_tWs%>d*0h5c#s'WfrA/9P/irH(</Z!(dk:&M[?p,?.pGKYdN\4^\-2TfhYs'&DST@Llg`^YIQSEL@XB\l.EF3T(GBo\9%<I%Y]B(3pIK%cr1N,Fg\_5!IRjpF(F>4rQ\>=c_k&88eT+n.r:S:,<nPE%5:Hi3qJbFhZrC>?/j&n=]/2W5\@iqCf6Ijq4%In)7G&fRQ?s7r!ebS%YZ:a#rb:&oQ^Tc8)bc(BaI-@D3.kZ;@H%`[\EY"_Q8e;!![RtX>']se`24B"8Z%a+`*;!ScC3tTj&jO[[opq@g9KBV3]jOGm?4lc%1O\:e:&Ba%%89-`>a1CMeY<7@GY&A6&]#ghB?cS_&:lP$M/,tF8#dn7@o*nVDDF:0!O<0?`VcA2YH%mE?Qtd'bHte@HRL*M3H.qS%8ktn[<!6oeUYW-+*D-9nVGjQUU"o8n2(iK>WEc6sKXPXW6uE:H/\l?Fa!VH"r@$F`;?[]2p0?XAe?F1I@l#p-]-Cs7m&ZgUBi)>"%`GY7I^6ALM(BCb,+]N(hD0f,?kI%W/!MMuH5jYT9&_d3Ra?=e+f.qK(.TQ`8G4E?lV?RO/1Su=FSF:ENF[E"8<mLcOgU2Cr)\1Yu%OZ%m*f:q2SY[EeMk-$Yhc5XH"b!bg3d9V7(p8,%9lc,Xn63;Nt>\<;-_/9_*/Kp$u5tYCNcP6@AdD9/?"F0qmjl=Zja3-!2OoQuM%EOR>\@p,UU2djdK2c2:DYO3>+$hc0P@,0c0fuWepi[NL``'sM]qpE?cI_(D5>I%@NROnkMlq!ULDA,LQL2k!PLc>d9o8Yl9+*NqU%2mG)2Hpddb<;(BB5Nb;U/>!j2*/B&LO%`7Q)@VcN?eLe72Cj#m&"lTP(5^qlLIn:,<(V38XQIpdift)gF2O(BP23^=o>%@7(X-RV%lQcl\nH=KM6aIR5iL?>S!:o33MJg]`KBh8*@LRqsT*q)\Q1,8k.@OaEX_0"Y?*1\TBUQPumE^X[#Yg@iMkpNrlG.s?(c]"nK`1Tg%fGV#,X[Y?:&/aF>ip.3?\<8X!on7?sH_ki6O5Ln&`Zr61Uc6/f>l$:!F_;S2'Ng^3*kCfFIk]E9hb@Wpj#Btt=A7=g:EjL748QV&%TaiAuSPTf<Ei4PNp'S7AeYFUs:D)+Jnk_+e/>cKZET*(2%5VGu0=1An!C#Z;CFIOk)4L%_f!'&<4+(-rCWsRCEPD,"`enFVb"MAP%ElJgajK2bfF;)#WP\oIAUmb(9RgF\_Ii"t_/>aGG'E2:j;$`$IrCh&^%@e4ro<L:-r";)YQW<]gFP==arj(i13n)V)?XuX[3?h_6%h*?ip+f)/:r0rg0S25$DDmULmOA7rp-j`cgo!05\q4UAYLI?N6-Ak9Rb`R0u%#Bf#GZNZi8o@5PC\]@%5+[[)bMY6<Y"<0f1iFnJ%#j;d,&&c4C@c3@L@`%2V,tr%QnXh>Xg4D1%7:60tVR\^GXr_9&M6I\P:;[W?_8q2N&>7^^^9d_^m1<V""6(k<a;NG!QC8=[fT;<@%Q>fY:ApQ3!DjOI)o2*rD0gZ#Nf]c<2<GeeShQ'KhpI#@+ks>c;jh@F&/4X8iDs>$6b%`?uDGXR?g.0uP::4mC4&)2)2ea!uHHTPW%Lr0=Fr'j;mFJn3dgsJdoll'"<ZOtJap'ifC+uHZgW*",F2-7_R!tr?OGgRdMD`RKT']K<5G0bqlq/*`S#SC3MEYJKqLS3X<k_9tj%HON.r@:1(oQ/>>]%\]--,gNK?!i\2\h6l1s@<qC]&EWm'in,V=FaaYC/:W!&TDnfN]e)X^j!2I#9i;3.ik"1NbT(d7XQM2)7Ib`6%lcZ%e>!.4q(--igVPf7J9Z2bg%c)\OZil6a,hRhpEb)tZYITX_]6jhmNB,0d(`Ug*L2&tA@1C$Y\97lF$gf'6d$AFt;DM=I)^l-/%<?_k)S`g:E-n\KKN,YL)aZO;V)/ijq],?7srCOs^&6R(KS1"fQ-Sb&,mQ2uroG\$"@8_3@;ei+mNj6$eLuJE)3J+7c6MA<tV`N<]%Z/^el*1[+^;6E[&0`ud2HUMXLO$5ee`bHasWoe)e=*B^Eo9+&)f+MR01#9'kQM*8XNfRphT4mMp#lhBTGs;q7!K:a<HbDoq.]No;%Va#AT:qW63gag_+\tM;4DA]<X[K'I;)O&&kgNu2sXpNqqZ]K^'+"*q=NHF)l]N3NZJ>6I>KPa]l%lR;hs'tN'g=cZ1[]a^s9M5(-%i<!0@4RNjKaFB!Ten'Q`9@0H2Z%1mLE3?[J_o\_s;q3U3GlSoOM:_t3e(s'$AhD'oTilTlK%kUa%\:\83?emSN[:IDh?@EoQ@U6n%'CZJ<]F62&>pG5ta4S!oCq^b*&.Ip4:WY>-/eTY^P-HphY^0C!d4eTP^^%oT/7B&1J5,0Y&\*5*aJu=i@TR#G#/L+f>H=tEn-NqO%S+<27kN,oE\Q(9k9C8Eh.%7"I?f=Buc`'Nbq*!bp??T_Jq1a.t4B,>%"Ult9@7_ps?Zqs5rr2aSinW6??',dj-\;.+WWM!@:,!uE%f]h]sTE.CYoa\[0+,;iTo9kkp2=H&:P;LUThX$@_1U:T;6;!2%?eZ(^I*!A^dt#N1q`!oiq\mA@iX8j$^LqAqQHXpJRG5U(E(DMG%)-2i;%G%MUQ:.DT(j+%_94^]YA:o&t=l/jc1+%A/Sf8&Y\eEb.n!uDh+Z*]@5^J9KQ&r<I2`8Y/^2GiDaEOF#6bk)R+-C=(G-19m%G_mOVm2j-(U7U*Qlm=T/0$a]7Jj?*',R/6<<KNBj:Y`ZR$<C(5gPJGA,0#4X]D$F]&.:lG8j"d4+N$mL3Kpd_0V\ef8K>[$C9mjT%d6j]_o.?LeJu_i!,M^%Wn[</?-([OZ6><Yr_<SGk\MTn9qiKY$,fk-l/5`fNDF\qU+NY/&,.^?mbL0A9:e>8a'8>rLmd]p8XaSMZ%EYBNW6"#!,Nt7b">Kgl[>p2M!a6!fY3Sh-@g2(Y25+3d%UlLqgp)_4C'p)l)8I9MGe-oKK\NOPjF*Y^m1jj/>fR/U4T</SQ<k_T<%LU5Kk#4I=4iJE;\'%u\<=0HRYYg`Lp&?b8<.s'f.3n[G,pC*_"!3->E>$"RG.;&IQOM>'9-]T7:4qcj)!g_4/*YLpC`s>pZVe^IO%BrD/tJDu<qd>EZ5J+TPI7-t6]6!AbpG0u4jU6lZ/JP4jhp\Y5c7eDVOAEj%8rJ=A@A;5n4PZW#%a>NFpG0`=U'+G8P-2k,#QA+M(%?;um=I'KH@,,([Kfn^3W<_&!%'Mc`+=%`eaF!O^;l5CRI*HnSqXC\=/;0ZrI>F=87TP-)[!Sa6K;\#bR;!aM'T2sScOU6&MV6/rf%iUt`JHpH@e-QC+\BO&1(C)UodiAjbr&T_DQBcK"eL\rEWV[/8^P)iUqm2g[TSpNh%i:ODIAh15uJ..<`TD-r/A)7:/^>Y4`;1$tI%1PtBl4OF?R//-(1cPa98q[n4G3>"_VS'Qc,m'/n+&Q.S&3EKZBCbt;PkW)=D94_uF,P>S'*U`I\kLC`sAuLu"c,g#*mJTDe58_p5%HgKaj@Aq6!J[%XKa36Q]C)YgFNtrXY]:.P"+gWGL*-MdA.76@G-`%#CiK/<4e^d<GH,Y]dQB=c;JCH6`#07#1'PE0H@oj^[iX1'0%&W2b*&,sONe_(2<Ji-_,\?JsO+ppuJMY,%WN?r,b:[FKH0Yak("@!3K`>t0H/\qYQ<K;Et`iS@s\^qc-*SXjCLk%Tci$pe@^np,=%`O8P]ZH%u-K4K[7Sij?qeshh(eOppG%4Jf%<GT'^<NjH`f&b\6)-R#\Sb9Wu4sm]FL)<rSd.atmX>1G'rfCqi^ZKAS;1+aZC-T2F%ko`72qPhg.8#RrWMlE+JC8+[("eW511a7SD/VU[oUrpOgVa'Xe.0Up3k]5]Ll&c:%m7V_a3,)F;L@[p`Jjn6ghcg4Mb96hq_?+p+%@)q6:'nt!u\LADD5C3,o]).PPrU[LKnTSd5*ADr$%mNID^L'Z!?#Lf#j<#3*^H%X^@^.T9Qp"Bn[*VOPLDT2M-5j2GM^d/qQ\Ef^%%N>H_`#`-mmCA/`K+HT\lq'0A7(4(jFB/QK+<;#.Z)al]7CJ;&C8qGi>i^@S>dfG2U^TUE"*WM>d$fMs5u#U`W$.1#0#p`cJqN6[%rWr[>,DI=(k0ps4LD`Tu(FI)'')[<&V@d9ikA>H1%1JiI3a!3L.M,/uq0R?m+l*J4%(2YV[8@'(Y%55(L7LkhTF(,^obn)eMPS*<%ibF-[=Pp#;+Bp?V[Khnq'e2M/U?ORmBl49;fh[2bY4pm\s"utcMg<YC/h)L6@&@IugUArXgeh]+h0KFf^bf7Io#GA8PWDFLSE4O%%e1LD(Gq;E5P;+XJ`Ht+8ER<9RETC&Rr4m&AII?!drT_Id=\.Z*W\S'i@J.[Ld;6./JDrV4_Xd=JQiG]BI]inWZiM)>N)r4.h*>hU%I8%QI_/SF8RM)q!6J8iL91HSCc*YS-Q7b(koPBjOodUjkFMsj.PH@2CRe,:`R)2:>^3\5cq=G$ua!?<)a[QIaMGbS?opBg=N`8_E%n$trd_YXrG\G2r"(te4Gr6OhkgSMJr!7oiP+i5'I>uM9N;=;`,XUgWWSL\nZ4*&8\.uo>'F:&VW+#:J<mtZ_3o^:)=CG_HBMB;((%)NjV;2;;-o(G4m:)RB7r.MjBIF&Pg480]J.!BE#m)-I*elR\TqB<&19&L-(K-'UVZM/f:rI`Xc7G@E^JlCi)[EB<;-Y><o'DZ&B(%V-oro]*$)$k"J6@dJ>%3?uBueHJ+B/$G94B&c@u<&Qf52((a__[^Uo>N8EO;hX16H)]W2=\J_-QP4lD.SgsV^`P^=4>Z_&#,?P1?%#s+?FnnmSl1Q-m?iisbNgai\865t7L@eqG#,JEN+leh]Kj>m.(+uPb-P0b#_>H:]@c,^CuX3c=:-M<RAG,W8C@CN[L'"sjLd6ohe%4J>hD1@d4j-rq^="t&)jPk%!+'J\MJn!;<jlH)Uj[0V/)l%H+D@+t?>-`?(5j+$g*nJD%[7Jfm+mGH05ci5=X?ih[ahGU=aW5"*E%Np/T\aRu'VB?!#++pj(FJ9@DMmrmN+"K/j?WO*j9?uH'0"W[OPpbu67;nV!2%r,%)@pJtj-h;N[9E]d(N[&?XWW>J7V,8(?!a#u#%>8:%NR.`ZYBs[kiT7=sZIh-OG)Ga.#W-VmTqW+KH?t<eAG:Gd:cpr^R4tGooUIHr-Efl5MY5oM7%^:Z)QAEV]6S`\<db*O2V5<gi%%hf9u$4):Yaa$7L6H:P"26_m7FRg*$W34q8+'tY''iAI<A0)>UAS'p/&'sB1TK?``O$nqaI4,25h`n-up`93<1Xmk=3j<GJFDg3t%Z@F%_a;Gk0k32OQraX->qu2;U=Yr`:AuNitngrOpjF&"7?\/o-M2.Kk@LuPLV+AE'JOsIiep\3/9GNqZo)@B,YN^.2$@McrA-5)f%gdsq_((Td"d_'4KemDrK.VqoHcsQn&_ToI;HY?b3=O!BSoo(Q@[o;_0ZFo;=50_DiW[,]$o]AFam+a#MW$,n#dqefl>Ld\t14Y6N%m<MHJ]Q\.%c;=lhfsNZ`U`<#JdXfWsGtX&5l$%sJcU\1Z#a+dWfll[<FQD#X)p8bnQGTacX!V*p0#`>IVAIM%!8WAhUkG'-^Hq&g%5^2j.,<dDVlTK7odaKHPWtJjHBleH0+&!.CII=j]-Id&bDGG8J/(t8K9Ls6PPVTT2r>fP[b`#'D-Ntm1\9cua>T7FCkS'DGi/XkU%Ej+B7,h'3Woq_54doQ.&*Y4n#01$[/mT^!>nhWC^G\_Q76_p?*OhK=sX=-g@1:6V?r>p4[*U*6qIF%_\;"k/KQTtFZWV1J$nfRR]%<.k4Ss):s:J,E2.rR]Y6s4aGdYL!4?hlZS=Gd0U,Z.26DGr\gGMYuaq&0Og;8a#3I2/TTS_"<7q8&bC_)3`$88!'@.$:ppTjkgqQ%YmCHXEc>cf=pbtY`I6/95@bTj/8;U?BWDaHeSbN?d8Ua`*2j(tpm6L(C72B(SZ8e?-XU\!jti8&d+U7S@C*Y+(X,'K1=0+Z(#<t9%Q*"7VA9D_0B-LkJ6t.uA6WnXSFKD,_Jrj$@9(n[t.s@g-GL\Di=MpR`Mr&,J:K;RNJ7_`I*VX=(d:U8gCG^sH_Gf;V8IO`\<Rrue%YZl11>m)L"l:mDtg*7f9TWVp4%?[C4B*nYMD\[DV)5IHO;c++7heAbfk(8jj.b^+c-j8j+?g[!gLmqALHkT?t=_KOfk\4'!)!R>K%H.g_/*OLj/c46+l"I2CZ$tD%1>JMsu[OtXIFaf_0T7?Zdr`jBYqX_B,s7Q&7rnD5P^]15*.?m=abpghJ*eQ_ult-H]?PL^j)pdEK%Ds#MG?oihSA&!B?:s'p]4sgYq8FoNgb;/S.Q9'>6b\4b58k]Hk-6+"_^cNV(L4U__12cD/E'9l@RP-^X;\D>QB>u\"[pQA1*e\7*%`l%.#F2:o0gf4"8Xs:.g$@Q;(O$*'d4d?.cQ!PBrUd%&/?iO;"_(2pM$DU%H,1HGAJNRkY*SgHUrRIp\Q$Ai?NU_Ok.rGu?I5XlM%Q5%pm[)=Y-+45S[-M<l&rq\_")$^R%O2EDa6reLP7m@B-;L$Tegn>AFQ=<).CC%L[]oA#*7`(4qoCp#L06$!Mh0.5gMLI]0CWb3"%fl$.dg7W&o,02qrPJAaMCgB,/o?\^ihU6:3PutTD7gAXZ]k5H*h_WNhFq3]Gi-')!DYrh3Zof/LY4$El^OIl9<hA'1$%;9[D>a@)%+?F](mZnT]V.\oKi2!,d9Ec/aH`%&$O?9^t$]_U!(6Q]cl?X/gns`**f^i`\0ih#UlQ%iOl&^V85YiMP#;C7rO;,puR[2eo$JCX:%2TlU@4>C#!(c5p'<YY:?3^6\mN()$,he:<])'u.;'#(kaltBSFp"_IE&'lA7\mB%&0n/#2iRPk,'EeL$6a7isk6OSV7U?9jc,W>R%aZSc<eg6i=Bo-Dn;#0-V-t&5ASA6GW9*$&an)YaRE[R$@s#LBsa^Ha6_?i=CU`6A):\G<?VSFAUF-5kAh<s2JT-acL.IaUTQ&scn%[dlCQUt:WYf%e4n\d]-"^ebCKh-:)S0e-Qpe;/%;dC"qp%l7Rc"4\u0C[?jpHST-\Xa,s,mThoe!t5:%AJ#3,lp-5faMVoBr1<Vb%gos#qC6>cLG7ir\**K6p'm?C3W7KPZ5f/q?bk9'G25'8&C0j]EW33-H"B2SA-YM>-I4ZhbUR7KunD3l<piL.rY207CH$6:]:?=:i%MmTo)K7_EtQn"Lg,Lf>W%*?\.r_->_'\-4?Bs/?X.>br,5qQ,Z;puPq%9kF:>tnSh36j[k8T"PaeI'HoDT(if4*?V5_B4IXq0I\d%8IZu7;2R4^RGG^X%kNAPeOHjsUPnHCX>8Iqh!2[hY$^&KCjm@`8tsqtk!t%&#`(ZBPmQh$5=(+!eo@)L:>6!;P+7QCo2+5h,a2:9%is\bJ\^!=r9j6?)HCapS8^T]_K's[_J5mX6r<F-mn%<5kBMZs4lsYQ57<dG093HR=]jkJc%C2guHE=,R1;-3>6!<at3@G_6O,RuM%H[@+=7qq.lgK5%Vd4`R*A<L@o[iY;#3^[R<&lKtl0O]Vc0EI#*>"JkVn*sSZh!2g0e:M*Yp9e20o@eO5nBL,@s'k63s.qaDdi;F;%/]4.dH'%`.jMT=[+3,pZF8Vo0#At#$l7I^)p+8qA_g[.seq"?b*:BdeJDV'*XF&2a_utc`M<nJ\Q(cJ"@7t%Mm2Q:#S4OI+2;9rr%%JDpN,b<U?.tqe.(Q#nN<&p@>L!A$0&hQ6e]e$uP-n7!X`=*t,.*IQ;$71lk[E@X4at+#NXqBt6(UYa9*ooWnqTpYe7llV'(#*S0%AH4Q]);F^d#,r_p*IL+AQL%Bg2:WBlNZ`$P'P"RSN7eLYn0ja*rq;&T)oRi<gY9:6o?dU9AAs%gpVI<Yik7\]f/g6AFh2/BRMc.@%`o!?"7[::.Y4FAG:RAZ5k<5,<YAfO0(de%@9eQMqGo.BB.brF)7I:Y@ZnP?V5a)+GMQe4HO7d4NFip*2V\K-u+V#HKp1_)-We[[Y%!:GAsTjnXUK@BLDC-BD1W<h,X4WCdp!s\QBe.uWYEA=o7bVY?L,UjiA6(9^2CiH+>VK#m@=`eGV/V!J,mo6t75,(*RZ,13gV#%#!%N2aksadXuS!65(qF.8BX?^&=8AAEhG*jW&*D($B4,;_hTdNuh;cY.c(3/B:Hd:l]N]eo*LI/:6FNHn<a;Q#H+$&Q=rndfGej@,C#%MhO:JQsN_(7Puo:bapo98HGiIZ)5epN0g"bCdYA07k=iTVZV\W]0+lfF[250INg0WQX$J``,Z?l/js7D8Y3-=C8,]J!FYn_&=RI1%8\DU$C*r>"V&-AW36/nZ8=Y>j)sbK*oSlLaP&''X_sU2LP_-rFmE2Bn)!-Wa*#(dCe:s(bc!2JG`&_E5,>Qb]('YeF<&2IP6CqF[%>/2=%(P/:uWZ?:@Elaf5?/*<V0U:9sq4K0b``7u2Tk6Tj<u`_JnY,"Mn.h5t%'5HUcKFo?,2UV1Xe;8J!GkBZO3L]5X7SIL?"(L4%E9Kd^`K09eD?-f*Q=":H[Vs;RK$[oBnO'oi.4:H?bGPe:n1^08$bHK4BW8Op!N,tK"@Pbf:f>Kr$RX"R1lF$gH;_+:ZoL@$U*04e%"kF6'+'E>j2s_ts%d[OB)_Mo.[*XgG<6*FJ/;I24eoNe:@j[i(%4qr?E!:!u"'9;A@[<8G+b@?^Y\keAK6#Il=%gUhI75]+hkj.i%Zf@6!gS:XV,T/n?K>(qRmniQ8F@["f!anX-&Y(QWW)b_L"R9%4>aEb$`tpgS#RKg,iV(sK=pa=N]:9VI27'8s"1ic\#7qOG'G8\k%iHFCVct"fO!A5@06PH]7A13#R(unX]`?=g?jW;&4?N:KsYQ_Zk9J^M]ajcPXm5*LQ>9ZFaa^R$7YOe>UpiQ,K*"1_p7I]ND9JTV?%8/NbH*j._QD"CE$=F0Mjg:k!A%0d'O#pp"+UQB!(k&#A`(,0[bT1PF<C92F.a>LbiBIVuZ>8B::&2CB^4,dttaFP2(=D5oR%I<#K%]r`%!lmkSe12;9/$>-9,[b!nkPXPb2[NP@@,)E;cR)$dE:SG97nrnie+.5UPKSJQbJuB5=Q1m8,p'c2;W5j+o.3$W`k1`kOgA,:N%H!LG*pL;*^^]%nr-oe*Co8rm31eXYjK<'#k&+tP5O@R0r`ZE6oTu=)1G4?D&7]][lB4\<;`aq'='Y)4:$L5$UZ.V&\2=T4rA>&Fg%.f&1YgbZ1(D;[k&!qEaI]Y[4m];'@5Za9>H8]@rC_X<,)C0\@s?9cMbK!c%A*9,.\Ahs59P0i$M@DS*Bd)O>G]4Lmr;I%#Yp@VqP%I\@6H>Q:H.c5/Wkqq$V<Gi%i>=#XK7]DhHjrg2BWhoEbrDm!tq^-CBnIs=*Rrl=R!lL*p+kOJCfJ,f"cGWpR9rTF%FnbDbSn9DTp%qX*5p7S[k^^\m6Vh07a]r<#CN[L<~>%AI9_PrivateDataEnd